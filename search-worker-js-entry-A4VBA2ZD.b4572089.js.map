{"mappings":"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","sources":["node_modules/cubing/src/cubing/search/inside/solve/tremble.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/2x2x2.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/4x4x4.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/big-cubes.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/5x5x5.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/fto.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/kilominx.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/master_tetraminx.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/megaminx.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/pyraminx.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/redi_cube.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/skewb.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/sq1.ts","node_modules/cubing/src/cubing/search/inside/api.ts","node_modules/cubing/src/cubing/search/inside/search-worker-js-entry.js","node_modules/cubing/src/cubing/search/inside/solve/puzzles/skewb.sgs.json.ts","node_modules/cubing/src/cubing/search/inside/solve/parseSGS.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/megaminx.sgs.json.ts","node_modules/cubing/src/cubing/search/inside/solve/puzzles/pyraminx.sgs.json.ts","node_modules/@parcel/runtime-js/lib/runtime-daca329d696a8cd8.js","node_modules/@parcel/runtime-js/lib/runtime-f1422326e79fa85a.js","node_modules/@parcel/runtime-js/lib/runtime-e7df294e7d70baf6.js","node_modules/@parcel/runtime-js/lib/runtime-ab70841a6805b878.js","node_modules/@parcel/runtime-js/lib/runtime-2fe01520475d4aab.js","node_modules/@parcel/runtime-js/lib/runtime-ce929a2d033c2bbb.js","node_modules/@parcel/runtime-js/lib/runtime-a3cf29c12d976f16.js","node_modules/@parcel/runtime-js/lib/runtime-1a0e4bf7f86ad130.js","node_modules/@parcel/runtime-js/lib/runtime-1a379748bd6582f1.js","node_modules/@parcel/runtime-js/lib/runtime-8ffe158f3de99330.js"],"sourcesContent":["import { Alg, AlgBuilder, Move, QuantumMove } from \"../../../alg\";\nimport type { KPuzzle, KTransformation } from \"../../../kpuzzle\";\nimport type { KState } from \"../../../kpuzzle/KState\";\nimport { experimentalCountMoves } from \"../../../notation\";\nimport { randomChoiceFactory } from \"../../../vendor/random-uint-below\";\nimport type { SGSAction, SGSCachedData } from \"./parseSGS\";\n\nconst DEFAULT_STAGE1_DEPTH_LIMIT = 2; // Moderately performant default.\n\nconst DOUBLECHECK_PLACED_PIECES = true;\nconst DEBUG = false;\n\n// TODO: Take moves instead of move names?\nfunction calculateMoves(\n  kpuzzle: KPuzzle,\n  moveNames: string[],\n): {\n  move: Move;\n  transformation: KTransformation;\n}[] {\n  const searchMoves: {\n    move: Move;\n    transformation: KTransformation;\n  }[] = [];\n  // const identity = identityTransformation(def); // TODO\n  // TODO: Make it easy to filter moves.\n  moveNames.forEach(function (moveName) {\n    const rootMove = new Move(moveName);\n    if (rootMove.amount !== 1) {\n      throw new Error(\n        \"SGS cannot handle def moves with an amount other than 1 yet.\",\n      );\n    }\n    let transformation = kpuzzle.identityTransformation();\n    // eslint-disable-next-line no-constant-condition\n    for (let i = 1; true; i++) {\n      transformation = transformation.applyMove(rootMove);\n      if (transformation.isIdentityTransformation()) {\n        break;\n      }\n      searchMoves.push({\n        move: rootMove.modified({ amount: i }),\n        transformation,\n      });\n    }\n  });\n  return searchMoves;\n}\n\n// function badRandomMoves(moves: string[], ksp: KSolvePuzzle): KSolvePuzzleState {\n//   // var sum = 0;\n//   var scramble = \"\";\n//   for (var i = 0; i < 1000; i++) {\n//     scramble = scramble + \" \" + moves[Math.floor(moves.length * Math.random())];\n//   }\n//   // var sol = \"\";\n//   const indexer = new TreeAlgIndexer(ksp, Alg.fromString(scramble));\n//   return indexer.transformAtIndex(indexer.numMoves()) as any; // TODO\n// }\n\nexport class TrembleSolver {\n  private searchMoves: {\n    move: Move;\n    transformation: KTransformation;\n  }[];\n\n  constructor(\n    private kpuzzle: KPuzzle,\n    private sgs: SGSCachedData,\n    trembleMoveNames?: string[],\n  ) {\n    this.searchMoves = calculateMoves(\n      this.kpuzzle,\n      trembleMoveNames ?? Object.keys(this.kpuzzle.definition.moves),\n    );\n  }\n\n  // public badRandomMoves(): KSolvePuzzleState {\n  //   return badRandomMoves(this.moves, this.ksp);\n  // }\n\n  public async solve(\n    state: KState,\n    stage1DepthLimit: number = DEFAULT_STAGE1_DEPTH_LIMIT,\n    quantumMoveOrder?: (quantumMove: QuantumMove) => number,\n  ): Promise<Alg> {\n    const transformation = state.experimentalToTransformation();\n    if (!transformation) {\n      throw new Error(\n        \"distinguishable pieces are not supported in tremble solver yt\",\n      );\n    }\n    let bestAlg: Alg | null = null;\n    let bestLen = 1000000;\n    const recur = (\n      recursiveTransformation: KTransformation, // TODO: Support KStatq1\n      togo: number,\n      sofar: Alg,\n    ) => {\n      // console.log(\"recur\");\n      if (togo === 0) {\n        const sgsAlg = this.sgsPhaseSolve(recursiveTransformation, bestLen);\n        if (!sgsAlg) {\n          return;\n        }\n        // console.log(\"sgs done!\", sofar.toString(), \"|\", sgsAlg.toString());\n        const newAlg = sofar\n          .concat(sgsAlg)\n          .simplify({ collapseMoves: true, quantumMoveOrder });\n\n        const len = experimentalCountMoves(newAlg);\n        if (bestAlg === null || len < bestLen) {\n          if (DEBUG) {\n            console.log(`New best (${len} moves): ${newAlg.toString()}`);\n            console.log(`Tremble moves are: ${sofar.toString()}`);\n          }\n          bestAlg = newAlg;\n          bestLen = len;\n        }\n        return;\n      }\n      for (const searchMove of this.searchMoves) {\n        recur(\n          recursiveTransformation.applyTransformation(\n            searchMove.transformation,\n          ),\n          togo - 1,\n          sofar.concat([searchMove.move]),\n        );\n      }\n    };\n    for (let d = 0; d <= stage1DepthLimit; d++) {\n      recur(transformation, d, new Alg());\n    }\n    if (bestAlg === null) {\n      throw new Error(\"SGS search failed.\");\n    }\n    return bestAlg;\n  }\n\n  private sgsPhaseSolve(\n    initialTransformation: KTransformation, // TODO: Handle KState\n    bestLenSofar: number,\n  ): Alg | null {\n    // const pieceNames = \"UFR URB UBL ULF DRF DFL DLB DBR\".split(\" \");\n\n    // function loggo(s: string) {\n    //   // console.warn(s);\n    //   // document.body.appendChild(document.createElement(\"div\")).textContent = s;\n    // }\n\n    // console.log(\"sgsPhaseSolve\");\n    const algBuilder = new AlgBuilder();\n    let transformation = initialTransformation;\n    for (const step of this.sgs.ordering) {\n      const cubieSeq = step.pieceOrdering;\n      let key = \"\";\n      const inverseTransformation = transformation.invert();\n      for (let i = 0; i < cubieSeq.length; i++) {\n        const loc = cubieSeq[i];\n        const orbitName = loc.orbitName;\n        const idx = loc.permutationIdx;\n        key += ` ${inverseTransformation.transformationData[orbitName].permutation[idx]} ${inverseTransformation.transformationData[orbitName].orientation[idx]}`;\n      }\n      // console.log(key, step.lookup);\n      const info = step.lookup[key];\n      if (!info) {\n        throw new Error(\"Missing algorithm in sgs or esgs?\");\n      }\n      algBuilder.experimentalPushAlg(info.alg);\n      if (algBuilder.experimentalNumUnits() >= bestLenSofar) {\n        return null;\n      }\n      transformation = transformation.applyTransformation(info.transformation);\n      if (DOUBLECHECK_PLACED_PIECES) {\n        for (let i = 0; i < cubieSeq.length; i++) {\n          const location = cubieSeq[i];\n          const orbitName = location.orbitName;\n          const idx = location.permutationIdx;\n          if (\n            transformation.transformationData[orbitName].permutation[idx] !==\n              idx ||\n            transformation.transformationData[orbitName].orientation[idx] !== 0\n          ) {\n            throw new Error(\"bad SGS :-(\");\n          }\n        }\n      }\n    }\n    return algBuilder.toAlg();\n  }\n}\n\nexport async function randomStateFromSGS(\n  kpuzzle: KPuzzle,\n  sgs: SGSCachedData,\n): Promise<KState> {\n  const randomChoice = await randomChoiceFactory<SGSAction>(); // TODO: make this sync by putting the factory into a TLA\n\n  let transformation = kpuzzle.identityTransformation();\n  for (const step of sgs.ordering) {\n    const sgsAction = randomChoice(Object.values(step.lookup));\n    transformation = transformation.applyTransformation(\n      sgsAction.transformation,\n    );\n  }\n  return transformation.toKState();\n}\n","import type { Alg } from \"../../../../alg\";\nimport type { KPuzzle } from \"../../../../kpuzzle\";\nimport { KState } from \"../../../../kpuzzle\";\nimport { puzzles } from \"../../../../puzzles\";\nimport {\n  randomPermute,\n  randomUIntBelowFactory,\n} from \"../../../../vendor/random-uint-below\";\nimport { mustBeInsideWorker } from \"../../inside-worker\";\nimport type { SGSCachedData } from \"../parseSGS\";\nimport { TrembleSolver } from \"../tremble\";\n\n// Empirical ly determined depth:\n// - ≈11 moves on average (as opposed to >13 moves for depth 2),\n// - in close to 40ms(on a MacBook Pro).\nconst TREMBLE_DEPTH = 3;\n\nlet cachedTrembleSolver: Promise<TrembleSolver> | null = null;\nasync function getCachedTrembleSolver(): Promise<TrembleSolver> {\n  return (\n    cachedTrembleSolver ||\n    (cachedTrembleSolver = (async (): Promise<TrembleSolver> => {\n      const sgsCachedData: SGSCachedData = await (\n        await import(\"./2x2x2.sgs.json\")\n      ).cachedData222();\n      return new TrembleSolver(\n        await puzzles[\"2x2x2\"].kpuzzle(),\n        sgsCachedData,\n        \"URFLBD\".split(\"\"),\n      );\n    })())\n  );\n}\n\nexport async function preInitialize222(): Promise<void> {\n  await getCachedTrembleSolver();\n}\n\n// TODO: fix def consistency.\nexport async function solve222(state: KState): Promise<Alg> {\n  mustBeInsideWorker();\n  const trembleSolver = await getCachedTrembleSolver();\n  const alg = await trembleSolver.solve(state, TREMBLE_DEPTH, () => 4); // TODO: Attach quantum move order lookup to puzzle.\n  return alg;\n}\n\n// TODO: factor out and test.\nasync function mutatingRandomizeOrbit(\n  kpuzzle: KPuzzle,\n  orbitName: string,\n  state: KState,\n  options?: { orientationSum?: number },\n): Promise<void> {\n  const randomUIntBelow = await randomUIntBelowFactory();\n  await randomPermute(state.stateData[orbitName].pieces);\n\n  const orbitDef = kpuzzle.definition.orbits[orbitName];\n  const ori = state.stateData[orbitName].orientation;\n\n  let sum = 0;\n  for (let i = 0; i < orbitDef.numPieces; i++) {\n    const o = randomUIntBelow(orbitDef.numOrientations);\n    ori[i] = o;\n    sum += o;\n  }\n\n  // console.log(\"aaaa\", options && \"orientationSum\" in options);\n  if (options && \"orientationSum\" in options) {\n    // console.log(\"sfdsf\", options!.orientationSum),\n    ori[0] =\n      (((ori[0] + options.orientationSum! - sum) % orbitDef.numOrientations) +\n        orbitDef.numOrientations) %\n      orbitDef.numOrientations;\n  }\n}\n\n// TODO: Use SGS?\nexport async function random222State(): Promise<KState> {\n  const kpuzzle = await puzzles[\"2x2x2\"].kpuzzle();\n  const stateCopy: KState = new KState(\n    kpuzzle,\n    JSON.parse(JSON.stringify(kpuzzle.startState().stateData)),\n  ); // TODO\n  await mutatingRandomizeOrbit(kpuzzle, \"CORNERS\", stateCopy, {\n    orientationSum: 0,\n  });\n  return stateCopy;\n}\n\nexport async function random222Scramble(): Promise<Alg> {\n  return await solve222(await random222State());\n}\n","import type { Alg } from \"../../../../alg\";\nimport { addOrientationSuffix } from \"../addOrientationSuffix\";\n\nconst randomSuffixes = [\n  [null, \"x\", \"x2\", \"x'\", \"z\", \"z'\"],\n  [null, \"y\", \"y2\", \"y'\"],\n];\n\nlet cachedImport: Promise<\n  typeof import(\"../../../../vendor/cstimer/src/js/scramble/444-solver\")\n> | null = null;\nfunction dynamicScramble444(): Promise<\n  typeof import(\"../../../../vendor/cstimer/src/js/scramble/444-solver\")\n> {\n  return (cachedImport ??= import(\n    \"../../../../vendor/cstimer/src/js/scramble/444-solver\"\n  ));\n}\n\nexport async function initialize444(): Promise<void> {\n  return (await dynamicScramble444()).initialize();\n}\n\nexport async function random444Scramble(): Promise<Alg> {\n  return (await dynamicScramble444()).random444Scramble();\n}\n\nexport async function random444OrientedScramble(): Promise<Alg> {\n  return addOrientationSuffix(await random444Scramble(), randomSuffixes);\n}\n","import { Alg, AlgBuilder, Move, QuantumMove } from \"../../../../alg\";\nimport {\n  randomChoiceFactory,\n  randomUIntBelowFactory,\n} from \"../../../../vendor/random-uint-below\";\n\nfunction numMoves(n: number): number {\n  switch (n) {\n    case 5:\n      return 60;\n    case 6:\n      return 80;\n    default:\n      return 100;\n  }\n}\n\nconst axesFaces = [\n  [\"U\", \"D\"],\n  [\"L\", \"R\"],\n  [\"F\", \"B\"],\n];\nconst axesMovesCache: Map<number, QuantumMove[][]> = new Map();\nfunction cachedAxesMoves(n: number): QuantumMove[][] {\n  const existing = axesMovesCache.get(n);\n  if (existing) {\n    return existing;\n  }\n  const axesMoves = [];\n  for (const faces of axesFaces) {\n    const axisMoveFamilies: QuantumMove[] = [];\n    axesMoves.push(axisMoveFamilies);\n\n    for (const face of faces) {\n      axisMoveFamilies.push(new QuantumMove(face));\n      if (n > 3) {\n        axisMoveFamilies.push(new QuantumMove(`${face}w`));\n      }\n      for (let i = 3; i <= n / 2; i++) {\n        axisMoveFamilies.push(new QuantumMove(`${face}w`, i));\n      }\n    }\n  }\n  axesMovesCache.set(n, axesMoves);\n  return axesMoves;\n}\n\n// TODO: Document this algorithm and compare to TNoodle.\nexport async function bigCubeRandomMoves(n: number): Promise<Alg> {\n  const randomUintBelow = await randomUIntBelowFactory();\n  const randomChoice = await randomChoiceFactory<QuantumMove>();\n  const randomNumChoice = randomChoice as any as (arr: Array<number>) => number; // TODO: Avoid needing multiple instantiations or recasting.\n\n  const axesMoves = cachedAxesMoves(n);\n\n  const cachedNumMoves = numMoves(n);\n  const algBuilder = new AlgBuilder();\n  let currentAxisIdx = 0;\n  const currentAxisQuantumMoves = new Set();\n  while (algBuilder.experimentalNumUnits() < cachedNumMoves) {\n    const newAxisIdx = randomUintBelow(3);\n    if (newAxisIdx !== currentAxisIdx) {\n      currentAxisQuantumMoves.clear();\n    }\n    currentAxisIdx = newAxisIdx;\n\n    const quantumMove = randomChoice(axesMoves[currentAxisIdx]);\n    const quantumMoveStr = quantumMove.toString();\n    if (currentAxisQuantumMoves.has(quantumMoveStr)) {\n      // Skip duplicates and resample with replacement.\n      continue;\n    }\n    currentAxisQuantumMoves.add(quantumMoveStr);\n    algBuilder.push(new Move(quantumMove, randomNumChoice([1, 2, -1])));\n  }\n\n  return algBuilder.toAlg();\n}\n","import type { Alg } from \"../../../../alg\";\nimport { addOrientationSuffix } from \"../addOrientationSuffix\";\nimport { bigCubeRandomMoves } from \"./big-cubes\";\n\nconst randomSuffixes = [\n  [null, \"3Rw\", \"3Rw2\", \"3Rw'\", \"3Fw\", \"3Fw'\"],\n  [null, \"3Dw\", \"3Dw2\", \"3Dw'\"],\n];\n\nexport async function oriented555RandomMoves(): Promise<Alg> {\n  return addOrientationSuffix(await bigCubeRandomMoves(5), randomSuffixes);\n}\n","import { Alg } from \"../../../../alg\";\nimport type { KState } from \"../../../../kpuzzle/KState\";\nimport { puzzles } from \"../../../../puzzles\";\nimport { mustBeInsideWorker } from \"../../inside-worker\";\nimport type { SGSCachedData } from \"../parseSGS\";\nimport { TrembleSolver } from \"../tremble\";\n\nconst TREMBLE_DEPTH = 3;\n\nlet cachedTrembleSolver: Promise<TrembleSolver> | null = null;\nasync function getCachedTrembleSolver(): Promise<TrembleSolver> {\n  return (\n    cachedTrembleSolver ||\n    (cachedTrembleSolver = (async (): Promise<TrembleSolver> => {\n      const sgs = await import(\"./fto.dynamic\");\n      const json: SGSCachedData = await sgs.sgsDataFTO();\n      return new TrembleSolver(await puzzles[\"fto\"].kpuzzle(), json, [\n        \"U\",\n        \"R\",\n        \"F\",\n        \"L\",\n        \"D\",\n        \"B\",\n        \"BR\",\n        \"BL\",\n      ]);\n    })())\n  );\n}\n\nexport async function preInitializeFTO(): Promise<void> {\n  await getCachedTrembleSolver();\n}\n\n// TODO: centers\nexport async function solveFTO(state: KState): Promise<Alg> {\n  mustBeInsideWorker();\n  const trembleSolver = await getCachedTrembleSolver();\n  const alg = await trembleSolver.solve(\n    state,\n    TREMBLE_DEPTH,\n    () => 3, // TODO: Attach quantum move order lookup to puzzle.\n  );\n  return alg;\n}\n\nexport async function randomFTOScramble(): Promise<Alg> {\n  mustBeInsideWorker();\n  const { randomFTOScrambleString } = await import(\"./fto.dynamic\");\n  return new Alg(await randomFTOScrambleString());\n}\n","import type { Alg } from \"../../../../alg\";\nimport { mustBeInsideWorker } from \"../../inside-worker\";\n\nexport async function randomKilominxScramble(): Promise<Alg> {\n  mustBeInsideWorker();\n  const { getRandomKilominxScramble } = await import(\n    \"../../../../vendor/xyzzy/kilosolver\"\n  );\n  return getRandomKilominxScramble();\n}\n","import { Alg } from \"../../../../alg\";\nimport { mustBeInsideWorker } from \"../../inside-worker\";\n\nexport async function randomMasterTetraminxScramble(): Promise<Alg> {\n  const { randomMasterTetraminxScrambleString } = await import(\n    \"../../../../vendor/xyzzy/master_tetraminx-solver.js\"\n  );\n  mustBeInsideWorker();\n  return new Alg(await randomMasterTetraminxScrambleString());\n}\n","import type { Alg } from \"../../../../alg\";\nimport type { KStateData } from \"../../../../kpuzzle\";\nimport { KState } from \"../../../../kpuzzle\";\nimport { mustBeInsideWorker } from \"../../inside-worker\";\nimport type { SGSCachedData } from \"../parseSGS\";\nimport { TrembleSolver } from \"../tremble\";\nimport { cachedMegaminxKPuzzleWithoutMO } from \"./megaminx.sgs.json\";\n\nconst TREMBLE_DEPTH = 2;\n\nlet cachedTrembleSolver: Promise<TrembleSolver> | null = null;\nasync function getCachedTrembleSolver(): Promise<TrembleSolver> {\n  return (\n    cachedTrembleSolver ||\n    (cachedTrembleSolver = (async (): Promise<TrembleSolver> => {\n      const sgs = await import(\"./megaminx.sgs.json\");\n      const json: SGSCachedData = await sgs.cachedSGSDataMegaminx();\n      return new TrembleSolver(await cachedMegaminxKPuzzleWithoutMO(), json, [\n        \"U\",\n        \"R\",\n        \"F\",\n        \"L\",\n        \"BR\",\n        \"BL\",\n        \"FR\",\n        \"FL\",\n        \"DR\",\n        \"DL\",\n        \"B\",\n        \"D\",\n      ]);\n    })())\n  );\n}\n\nexport async function preInitializeMegaminx(): Promise<void> {\n  await getCachedTrembleSolver();\n}\n\n// TODO: centers\nexport async function solveMegaminx(state: KState): Promise<Alg> {\n  mustBeInsideWorker();\n  const trembleSolver = await getCachedTrembleSolver();\n  const stateDataWithoutMO: KStateData = JSON.parse(\n    JSON.stringify(state.stateData),\n  );\n  stateDataWithoutMO.CENTERS.orientation = new Array(12).fill(0);\n  const stateWithoutMO = new KState(\n    await cachedMegaminxKPuzzleWithoutMO(),\n    stateDataWithoutMO,\n  );\n  const alg = await trembleSolver.solve(\n    stateWithoutMO,\n    TREMBLE_DEPTH,\n    () => 5, // TODO: Attach quantum move order lookup to puzzle.\n  );\n  return alg;\n}\n","import type { Alg } from \"../../../../alg\";\nimport type { KState } from \"../../../../kpuzzle/KState\";\nimport { puzzles } from \"../../../../puzzles\";\nimport { mustBeInsideWorker } from \"../../inside-worker\";\nimport type { SGSCachedData } from \"../parseSGS\";\nimport { randomStateFromSGS, TrembleSolver } from \"../tremble\";\nimport { sgsDataPyraminxFixedOrientation } from \"./pyraminx.sgs.json\";\n\nconst TREMBLE_DEPTH = 3;\n\nlet cachedTrembleSolver: Promise<TrembleSolver> | null = null;\nasync function getCachedTrembleSolver(): Promise<TrembleSolver> {\n  return (\n    cachedTrembleSolver ||\n    (cachedTrembleSolver = (async (): Promise<TrembleSolver> => {\n      const sgs = await import(\"./pyraminx.sgs.json\");\n      const json: SGSCachedData = await sgs.sgsDataPyraminx();\n      return new TrembleSolver(\n        await puzzles.pyraminx.kpuzzle(),\n        json,\n        \"RLUB\".split(\"\"),\n      );\n    })())\n  );\n}\n\nexport async function preInitializePyraminx(): Promise<void> {\n  await getCachedTrembleSolver();\n}\n\nexport async function solvePyraminx(state: KState): Promise<Alg> {\n  mustBeInsideWorker();\n  const trembleSolver = await getCachedTrembleSolver();\n  const alg = await trembleSolver.solve(state, TREMBLE_DEPTH, () => 3); // TODO: Attach quantum move order lookup to puzzle.\n  return alg;\n}\n\nexport async function randomPyraminxStateFixedOrientation(): Promise<KState> {\n  mustBeInsideWorker();\n  // Note: this sets all center orientations to 0.\n  return randomStateFromSGS(\n    await puzzles.pyraminx.kpuzzle(),\n    await sgsDataPyraminxFixedOrientation(),\n  );\n}\n\nexport async function randomPyraminxScrambleFixedOrientation(): Promise<Alg> {\n  return solvePyraminx(await randomPyraminxStateFixedOrientation());\n}\n","import type { Alg } from \"../../../../alg\";\nimport { mustBeInsideWorker } from \"../../inside-worker\";\n\nexport async function randomRediCubeScramble(): Promise<Alg> {\n  mustBeInsideWorker();\n  const { getRandomRediCubeScramble } = await import(\n    \"../../../../vendor/xyzzy/redi_cube\"\n  );\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return getRandomRediCubeScramble();\n}\n","import type { Alg, QuantumMove } from \"../../../../alg\";\nimport { KState } from \"../../../../kpuzzle\";\nimport { mustBeInsideWorker } from \"../../inside-worker\";\nimport type { SGSCachedData } from \"../parseSGS\";\nimport { randomStateFromSGS, TrembleSolver } from \"../tremble\";\nimport {\n  sgsDataSkewbFixedCorner,\n  skewbKPuzzleWithoutMOCached,\n} from \"./skewb.sgs.json\";\n\nconst TREMBLE_DEPTH = 3;\n\nlet cachedTrembleSolver: Promise<TrembleSolver> | null = null;\nasync function getCachedTrembleSolver(): Promise<TrembleSolver> {\n  return (\n    cachedTrembleSolver ||\n    (cachedTrembleSolver = (async (): Promise<TrembleSolver> => {\n      const sgs = await import(\"./skewb.sgs.json\");\n      const json: SGSCachedData = await sgs.sgsDataSkewb();\n      return new TrembleSolver(\n        await sgs.skewbKPuzzleWithoutMOCached(),\n        json,\n        \"RLUB\".split(\"\"),\n      );\n    })())\n  );\n}\n\nexport async function preInitializeSkewb(): Promise<void> {\n  await getCachedTrembleSolver();\n}\n\nfunction resetCenterOrientation(state: KState): KState {\n  return new KState(state.kpuzzle, {\n    CORNERS: state.stateData.CORNERS,\n    CENTERS: {\n      pieces: state.stateData.CENTERS.pieces,\n      orientation: new Array(6).fill(0),\n    },\n  });\n}\n\n// TODO: fix def consistency.\nexport async function solveSkewb(state: KState): Promise<Alg> {\n  mustBeInsideWorker();\n  const trembleSolver = await getCachedTrembleSolver();\n  const alg = await trembleSolver.solve(\n    resetCenterOrientation(state),\n    TREMBLE_DEPTH,\n    (quantumMove: QuantumMove) => (quantumMove.family === \"y\" ? 4 : 3), // TODO: Attach quantum move order lookup to puzzle.\n  );\n  return alg;\n}\n\nexport async function randomSkewbFixedCornerState(): Promise<KState> {\n  // Note: this sets all center orientations to 0.\n  return randomStateFromSGS(\n    await skewbKPuzzleWithoutMOCached(),\n    await sgsDataSkewbFixedCorner(),\n  );\n}\n\nexport async function randomSkewbFixedCornerScramble(): Promise<Alg> {\n  return solveSkewb(await randomSkewbFixedCornerState());\n}\n","import { Alg } from \"../../../../alg\";\n\nlet cachedImport: Promise<\n  typeof import(\"../../../../vendor/sq12phase/sq1-solver\")\n> | null = null;\nfunction dynamicScrambleSq1(): Promise<\n  typeof import(\"../../../../vendor/sq12phase/sq1-solver\")\n> {\n  return (cachedImport ??= import(\"../../../../vendor/sq12phase/sq1-solver\"));\n}\n\nexport async function getRandomSquare1Scramble(): Promise<Alg> {\n  return Alg.fromString(\n    await (await dynamicScrambleSq1()).getRandomSquare1ScrambleString(),\n  );\n}\n","import type { Alg } from \"../../alg\";\nimport type { KStateData } from \"../../kpuzzle\";\nimport { KState } from \"../../kpuzzle\";\nimport { puzzles } from \"../../puzzles\";\nimport { setIsInsideWorker } from \"./inside-worker\";\nimport {\n  preInitialize222,\n  random222Scramble,\n  solve222,\n} from \"./solve/puzzles/2x2x2\";\nimport {\n  initialize333,\n  random333FewestMovesScramble,\n  random333OrientedScramble,\n  random333Scramble,\n  solve333,\n} from \"./solve/puzzles/3x3x3\";\nimport {\n  initialize444,\n  random444OrientedScramble,\n  random444Scramble,\n} from \"./solve/puzzles/4x4x4\";\nimport { oriented555RandomMoves } from \"./solve/puzzles/5x5x5\";\nimport { bigCubeRandomMoves } from \"./solve/puzzles/big-cubes\";\nimport { randomFTOScramble } from \"./solve/puzzles/fto\";\nimport { randomKilominxScramble } from \"./solve/puzzles/kilominx\";\nimport { randomMasterTetraminxScramble } from \"./solve/puzzles/master_tetraminx\";\nimport { solveMegaminx } from \"./solve/puzzles/megaminx\";\nimport {\n  randomPyraminxScrambleFixedOrientation,\n  solvePyraminx,\n} from \"./solve/puzzles/pyraminx\";\nimport { randomRediCubeScramble } from \"./solve/puzzles/redi_cube\";\nimport {\n  randomSkewbFixedCornerScramble,\n  solveSkewb,\n} from \"./solve/puzzles/skewb\";\nimport { getRandomSquare1Scramble } from \"./solve/puzzles/sq1\";\n\nsetIsInsideWorker(true);\n\nlet DEBUG_MEASURE_PERF = true;\nexport function setDebugMeasurePerf(newDebugMeasurePerf: boolean): void {\n  DEBUG_MEASURE_PERF = newDebugMeasurePerf;\n}\n\nfunction now() {\n  return (typeof performance === \"undefined\" ? Date : performance).now();\n}\n\nasync function measurePerf<T>(\n  name: string,\n  f: () => T | Promise<T>,\n): Promise<T> {\n  if (!DEBUG_MEASURE_PERF) {\n    return f();\n  }\n\n  const start = now();\n  const result = f();\n  if ((result as any)?.then) {\n    await result;\n  }\n  const end = now();\n  console.warn(`${name}: ${Math.round(end - start)}ms`);\n  return result;\n}\n\nexport const insideAPI = {\n  initialize: async (eventID: string) => {\n    switch (eventID) {\n      case \"222\":\n        return measurePerf(\"preInitialize222\", preInitialize222);\n      case \"333\":\n      case \"333oh\":\n      case \"333ft\":\n        return measurePerf(\"initialize333\", initialize333);\n      case \"444\":\n        return measurePerf(\"initialize444\", initialize444);\n      default:\n        throw new Error(`unsupported event: ${eventID}`);\n    }\n  },\n\n  randomScrambleForEvent: async (eventID: string): Promise<Alg> => {\n    switch (eventID) {\n      case \"222\":\n        return measurePerf(\"random222Scramble\", random222Scramble);\n      case \"333\":\n      case \"333oh\":\n      case \"333ft\":\n        return measurePerf(\"random333Scramble\", random333Scramble);\n      case \"333fm\":\n        return measurePerf(\n          \"random333FewestMovesScramble\",\n          random333FewestMovesScramble,\n        );\n      case \"333bf\":\n      case \"333mb\":\n        return measurePerf(\n          \"random333OrientedScramble\",\n          random333OrientedScramble,\n        );\n      case \"444\":\n        return measurePerf(\"random444Scramble\", random444Scramble);\n      case \"444bf\":\n        return measurePerf(\n          \"random444OrientedScramble\",\n          random444OrientedScramble,\n        );\n      case \"555\":\n        return measurePerf(\n          \"bigCubeScramble(5)\",\n          bigCubeRandomMoves.bind(bigCubeRandomMoves, 5),\n        );\n      case \"555bf\":\n        return measurePerf(\"oriented555RandomMoves\", oriented555RandomMoves);\n      case \"666\":\n        return measurePerf(\n          \"bigCubeScramble(6)\",\n          bigCubeRandomMoves.bind(bigCubeRandomMoves, 6),\n        );\n      case \"777\":\n        return measurePerf(\n          \"bigCubeScramble(7)\",\n          bigCubeRandomMoves.bind(bigCubeRandomMoves, 7),\n        );\n      case \"skewb\":\n        return measurePerf(\n          \"randomSkewbFixedCornerScramble\",\n          randomSkewbFixedCornerScramble,\n        );\n      case \"pyram\":\n        return measurePerf(\n          \"randomPyraminxScrambleFixedOrientation\",\n          randomPyraminxScrambleFixedOrientation,\n        );\n      case \"sq1\":\n        return measurePerf(\n          \"getRandomSquare1Scramble\",\n          getRandomSquare1Scramble,\n        );\n      case \"fto\":\n        return measurePerf(\"randomFTOScramble\", randomFTOScramble);\n      case \"master_tetraminx\":\n        return measurePerf(\n          \"randomMasterTetraminxScramble\",\n          randomMasterTetraminxScramble,\n        );\n      case \"kilominx\":\n        return measurePerf(\"randomKilominxScramble\", randomKilominxScramble);\n      case \"redi_cube\":\n        return measurePerf(\"randomRediCubeScramble\", randomRediCubeScramble);\n      default:\n        throw new Error(`unsupported event: ${eventID}`);\n    }\n  },\n\n  randomScrambleStringForEvent: async (eventID: string): Promise<string> => {\n    return (await insideAPI.randomScrambleForEvent(eventID)).toString();\n  },\n\n  solve333ToString: async (stateData: KStateData): Promise<string> => {\n    const state = new KState(await puzzles[\"3x3x3\"].kpuzzle(), stateData);\n    return (await solve333(state)).toString();\n  },\n\n  solve222ToString: async (stateData: KStateData): Promise<string> => {\n    const state = new KState(await puzzles[\"2x2x2\"].kpuzzle(), stateData);\n    return (await solve222(state)).toString();\n  },\n\n  solveSkewbToString: async (stateData: KStateData): Promise<string> => {\n    const state = new KState(await puzzles[\"skewb\"].kpuzzle(), stateData);\n    return (await solveSkewb(state)).toString();\n  },\n\n  solvePyraminxToString: async (stateData: KStateData): Promise<string> => {\n    const state = new KState(await puzzles[\"pyraminx\"].kpuzzle(), stateData);\n    return (await solvePyraminx(state)).toString();\n  },\n\n  solveMegaminxToString: async (stateData: KStateData): Promise<string> => {\n    const state = new KState(await puzzles[\"megaminx\"].kpuzzle(), stateData);\n    return (await solveMegaminx(state)).toString();\n  },\n\n  setDebugMeasurePerf: async (measure: boolean): Promise<void> => {\n    setDebugMeasurePerf(measure);\n  },\n};\n\nexport type WorkerInsideAPI = typeof insideAPI;\n","import { expose } from \"../../vendor/comlink-everywhere/inside\";\nimport { insideAPI } from \"./api\";\n\nexpose(insideAPI);\n","import { KPuzzle } from \"../../../../kpuzzle\";\nimport {\n  getPuzzleGeometryByName,\n  ExperimentalPGNotation,\n} from \"../../../../puzzle-geometry\";\nimport { parseSGS, SGSCachedData } from \"../parseSGS\";\n\nasync function skewbKPuzzleWithoutMO(): Promise<KPuzzle> {\n  const pg = getPuzzleGeometryByName(\"skewb\", {\n    allMoves: true,\n    addRotations: true,\n  });\n  return new KPuzzle(pg.getKPuzzleDefinition(true), {\n    experimentalPGNotation: new ExperimentalPGNotation(\n      pg,\n      pg.getOrbitsDef(true),\n    ),\n  });\n}\n\n// TODO: Implement a general lazy Promise/ Promise cache wrapper\nlet defCache: Promise<KPuzzle> | null = null;\nexport async function skewbKPuzzleWithoutMOCached(): Promise<KPuzzle> {\n  return (defCache ??= skewbKPuzzleWithoutMO());\n}\n\nlet cachedData: Promise<SGSCachedData> | null = null;\nexport async function sgsDataSkewb() {\n  return (cachedData ??= uncachedSGSDataSkewb());\n}\n\nexport async function sgsDataSkewbFixedCorner(): Promise<SGSCachedData> {\n  return {\n    ordering: (await sgsDataSkewb()).ordering.slice(1),\n  };\n}\n\n// TODO: Reduce info.\nasync function uncachedSGSDataSkewb(): Promise<SGSCachedData> {\n  return parseSGS(\n    await skewbKPuzzleWithoutMOCached(),\n    `SubgroupSizes 24 6 5 12 9 3 4 9 3 3\n\nAlg y\nAlg y2\nAlg y'\nAlg F\nAlg F'\nAlg y U\nAlg y U'\nAlg y L\nAlg y L'\nAlg y F\nAlg y F'\nAlg y2 U\nAlg y2 U'\nAlg y2 B\nAlg y2 B'\nAlg y' U\nAlg y' F'\nAlg y U L'\nAlg y U B\nAlg y2 U B\nAlg y2 U B'\nAlg y2 U' B\nAlg y2 U' B'\n\nAlg U\nAlg U'\nAlg U L\nAlg U L'\nAlg U' R'\n\nAlg R\nAlg R'\nAlg R B\nAlg R' L'\n\nAlg U B' U\nAlg U' L U\nAlg U' L' U\nAlg U' B U'\nAlg R L R'\nAlg R B' R\nAlg U B L U'\nAlg U B' U B'\nAlg U B' L' U\nAlg U' L B U'\nAlg R' B L' R'\n\nAlg L\nAlg L'\nAlg L B\nAlg L B'\nAlg L B L\nAlg L B L'\nAlg L B' L\nAlg L B' L'\n\nAlg B\nAlg B'\n\nAlg L' B L\nAlg L' B' L\nAlg R' L' B L R\n\nAlg B L' B L B'\nAlg B L' B' L B'\nAlg U L U B U' L' U'\nAlg R L R' B' R L' R'\nAlg U B' R L R' B' U B\nAlg U' B U L U' B' U L'\nAlg L U' B U L' U' B' U\nAlg R B' U R B L U' B\n\nAlg U L U' B' U L' U' B\nAlg U' B L U L B' U' L'\n\nAlg U R' U' L B R' B' R\nAlg R' U' R U B' U' B L`,\n  );\n}\n","import { Alg } from \"../../../alg\";\nimport type { KPuzzle, KTransformation } from \"../../../kpuzzle\";\n\ninterface PieceReference {\n  orbitName: string;\n  permutationIdx: number;\n}\n\nexport interface SGSAction {\n  alg: Alg;\n  transformation: KTransformation;\n}\n\nexport interface SGSCachedData {\n  ordering: {\n    pieceOrdering: PieceReference[];\n    lookup: Record<string, SGSAction>;\n  }[];\n}\n\nexport function parseSGS(kpuzzle: KPuzzle, sgs: string): SGSCachedData {\n  const subgroupSizes: number[] = [];\n  const sgsActions: SGSAction[] = [];\n  for (const line of sgs.split(\"\\n\")) {\n    const lineTokens = line.split(\" \");\n    if (line.startsWith(\"SetOrder \")) {\n      // ignore\n    } else if (line.startsWith(\"Alg \")) {\n      const alg = Alg.fromString(line.substring(4));\n      sgsActions.push({\n        alg: alg,\n        transformation: kpuzzle.algToTransformation(alg),\n      });\n    } else if (line.startsWith(\"SubgroupSizes \")) {\n      for (let j = 1; j < lineTokens.length; j++) {\n        subgroupSizes.push(parseInt(lineTokens[j]));\n      }\n    }\n  }\n\n  const sgsCachedData: SGSCachedData = {\n    ordering: new Array(subgroupSizes.length),\n  };\n  const subgroupAlgOffsets: number[] = [];\n  let sum = 0;\n  subgroupAlgOffsets.push(0);\n  const emptyAlg = Alg.fromString(\"\");\n  const identity = kpuzzle.identityTransformation();\n  for (let i = 0; i < subgroupSizes.length; i++) {\n    sum += subgroupSizes[i];\n    subgroupAlgOffsets.push(sum);\n    sgsActions.splice(sum - 1, 0, { alg: emptyAlg, transformation: identity });\n  }\n  if (sgsActions.length !== sum) {\n    throw Error(\n      `Bad sgs; expected ${sum - subgroupSizes.length} algs but saw ${\n        sgsActions.length - subgroupSizes.length\n      }`,\n    );\n  }\n  const processedPieces: Record<string, boolean[]> = {};\n  for (const orbitName in kpuzzle.definition.orbits) {\n    const orbitDefinition = kpuzzle.definition.orbits[orbitName];\n    processedPieces[orbitName] = new Array(orbitDefinition.numPieces).fill(\n      false,\n    );\n  }\n  for (let i = subgroupSizes.length - 1; i >= 0; i--) {\n    const pieceOrdering: PieceReference[] = [];\n    for (let j = subgroupAlgOffsets[i]; j < subgroupAlgOffsets[i + 1]; j++) {\n      const transformation = sgsActions[j].transformation;\n      for (const orbitName in kpuzzle.definition.orbits) {\n        const orbitDefinition = kpuzzle.definition.orbits[orbitName];\n        for (let idx = 0; idx < orbitDefinition.numPieces; idx++) {\n          if (\n            transformation.transformationData[orbitName].permutation[idx] !==\n              idx ||\n            transformation.transformationData[orbitName].orientation[idx] !== 0\n          ) {\n            if (!processedPieces[orbitName][idx]) {\n              pieceOrdering.push({ orbitName: orbitName, permutationIdx: idx });\n              processedPieces[orbitName][idx] = true;\n            }\n          }\n        }\n      }\n    }\n    const lookup: Record<string, SGSAction> = {};\n    for (let j = subgroupAlgOffsets[i]; j < subgroupAlgOffsets[i + 1]; j++) {\n      const transformation = sgsActions[j].transformation.invert();\n      let key = \"\";\n      for (let k = 0; k < pieceOrdering.length; k++) {\n        const loc = pieceOrdering[k];\n        key = `${key} ${\n          transformation.transformationData[loc.orbitName].permutation[\n            loc.permutationIdx\n          ]\n        } ${\n          transformation.transformationData[loc.orbitName].orientation[\n            loc.permutationIdx\n          ]\n        }`;\n      }\n      lookup[key] = sgsActions[j];\n      sgsActions[j].alg = sgsActions[j].alg.invert();\n      sgsActions[j].transformation = sgsActions[j].transformation.invert();\n    }\n    sgsCachedData.ordering[i] = {\n      pieceOrdering: pieceOrdering,\n      lookup: lookup,\n    };\n  }\n  return sgsCachedData;\n}\n","import { KPuzzle } from \"../../../../kpuzzle\";\nimport {\n  ExperimentalPGNotation,\n  getPuzzleGeometryByName,\n} from \"../../../../puzzle-geometry\";\nimport { parseSGS, SGSCachedData } from \"../parseSGS\";\n\nasync function megaminxKPuzzleWithoutMO(): Promise<KPuzzle> {\n  const pg = getPuzzleGeometryByName(\"megaminx\", {\n    allMoves: true,\n    addRotations: true,\n  });\n  const kpuzzle = new KPuzzle(pg.getKPuzzleDefinition(true), {\n    experimentalPGNotation: new ExperimentalPGNotation(\n      pg,\n      pg.getOrbitsDef(true),\n    ),\n  });\n  kpuzzle.definition.name = \"megaminx\";\n  return kpuzzle;\n}\n\n// TODO: Implement a general lazy Promise/ Promise cache wrapper\nlet defCache: Promise<KPuzzle> | null = null;\nexport async function cachedMegaminxKPuzzleWithoutMO(): Promise<KPuzzle> {\n  return (defCache ??= megaminxKPuzzleWithoutMO());\n}\n\nlet cachedData: Promise<SGSCachedData> | null = null;\nexport async function cachedSGSDataMegaminx() {\n  return (cachedData ??= sgsDataMegaminx());\n}\n\n// TODO: Reduce info.\nexport async function sgsDataMegaminx(): Promise<SGSCachedData> {\n  return parseSGS(\n    await cachedMegaminxKPuzzleWithoutMO(),\n    `SubgroupSizes 12 5 60 58 60 56 54 57 52 50 54 48 46 51 44 42 48 40 45 38 36 42 34 32 39 30 36 28 26 33 24 30 22 20 27 18 24 16 14 21 12 18 10 15 8 6 2 12 9 3\n\nAlg Rv\nAlg Rv2\nAlg Rv2'\nAlg Rv'\nAlg Lv'\nAlg Lv2\nAlg Lv2'\nAlg Fv\nAlg Fv'\nAlg BRv2\nAlg Lv2 Rv'\n\nAlg Uv\nAlg Uv2\nAlg Uv2'\nAlg Uv'\n\nAlg D\nAlg D2\nAlg D2'\nAlg D'\nAlg B\nAlg B2\nAlg B2'\nAlg B'\nAlg D DL\nAlg D DL2\nAlg D DL2'\nAlg D DL'\nAlg D2 FL\nAlg D2 FL2\nAlg D2 FL2'\nAlg D2 FL'\nAlg D2' FR\nAlg D2' FR2\nAlg D2' FR2'\nAlg D2' FR'\nAlg D' DR\nAlg D' DR2\nAlg D' DR2'\nAlg D' DR'\nAlg B DR\nAlg B DR2'\nAlg B DR'\nAlg B2 BR2\nAlg B2 BR2'\nAlg B2 BR'\nAlg B2' BL\nAlg B2' BL2\nAlg B2' BL2'\nAlg B' DL\nAlg B' DL2\nAlg B' DL'\nAlg D DL B\nAlg D DL B2'\nAlg D DL B'\nAlg D DL2' L\nAlg D DL2' L2\nAlg D DL2' L2'\nAlg D DL' FL\nAlg D DL' FL2\nAlg D DL' FL'\nAlg D2 FL2' F\nAlg D2 FL2' F2\nAlg D2 FL2' F2'\nAlg D2 FL' FR\nAlg D2 FL' FR2\nAlg D2 FL' FR'\nAlg D2' FR2' R\nAlg D2' FR2' R2\nAlg D2' FR2' R2'\nAlg B DR2' R2'\nAlg B DR' BR2\nAlg B2 BR' BL\nAlg B2' BL2' L\nAlg D DL2' L2' F\nAlg DL\nAlg DL2\nAlg DL2'\nAlg DL'\nAlg DL BL\nAlg DL BL2\nAlg DL BL2'\nAlg DL BL'\nAlg DL2 L\nAlg DL2 L2\nAlg DL2 L2'\nAlg DL2 L'\nAlg DL2' FL\nAlg DL2' FL2\nAlg DL2' FL2'\nAlg DL2' FL'\nAlg D B D'\nAlg D B2 D'\nAlg D B2' D'\nAlg D B' D'\nAlg D2 B D2'\nAlg D2 DL' D2'\nAlg D2' DL' D2\nAlg D' B D\nAlg D' DL' D\nAlg B2 DR2 B2'\nAlg B2 DR2' B2'\nAlg B2 DR' B2'\nAlg B2' BR B2\nAlg B2' BR2 B2\nAlg B2' BR2' B2\nAlg B' BL B\nAlg B' BL2 B\nAlg B' BL' B\nAlg DL BL2' U\nAlg DL BL2' U2\nAlg DL BL2' U2'\nAlg DL BL' L\nAlg DL BL' L2\nAlg DL BL' L'\nAlg DL2 L2' F\nAlg DL2 L2' F2\nAlg DL2 L2' F2'\nAlg DL2 L' FL\nAlg DL2 L' FL2\nAlg DL2 L' FL'\nAlg DL2' FL2' FR\nAlg DL2' FL2' FR2\nAlg DL2' FL2' FR2'\nAlg D B D' DR2\nAlg D B D' DR'\nAlg D2 B D2' FR2'\nAlg D' B D DL\nAlg B2 DR' B2' BR\nAlg B2 DR' B2' BR'\nAlg B2' BR2' B2 U\nAlg DL BL2' U2' F\nAlg D FL D'\nAlg D FL2 D'\nAlg D FL2' D'\nAlg D FL' D'\nAlg D2 FR D2'\nAlg D2 FR2 D2'\nAlg D2 FR2' D2'\nAlg D2' DR D2\nAlg D2' DR2 D2\nAlg D2' DR2' D2\nAlg DL2 BL DL2'\nAlg DL2 BL2 DL2'\nAlg DL2 BL2' DL2'\nAlg DL2 BL' DL2'\nAlg DL2' L2 DL2\nAlg DL2' L2' DL2\nAlg DL' FL2 DL\nAlg DL' FL' DL\nAlg D FL D' FL2'\nAlg D FL L D'\nAlg D FL L2 D'\nAlg D FL L2' D'\nAlg D FL2 F D'\nAlg D FL2 F2 D'\nAlg D FL2 F2' D'\nAlg D FL2 L D'\nAlg D FL2 L2 D'\nAlg D FL2' D' FR\nAlg D FL2' D' FR2\nAlg D FL2' D' FR2'\nAlg D FL2' F D'\nAlg D FL2' F2' D'\nAlg D FL2' FR2' D'\nAlg D FL2' FR' D'\nAlg D FL' D' FL\nAlg D FL' FR D'\nAlg D2 FR D2' FR2'\nAlg D2 FR2 R D2'\nAlg D2 FR2 R2 D2'\nAlg D2 FR2 R2' D2'\nAlg D2 FR2' D2' DR\nAlg D2 FR2' D2' DR2\nAlg D2 FR2' D2' DR2'\nAlg D2 FR2' D2' DR'\nAlg D2 FR2' R2' D2'\nAlg D2 FR' DR2' D2'\nAlg D2' DR D2 DR2'\nAlg D2' DR2 BR D2\nAlg D2' DR2 BR2' D2\nAlg D2' DR2' BR2' D2\nAlg D2' DR2' BR' D2\nAlg DL2 BL2 DL2' BL'\nAlg DL2 BL2 DL2' BR'\nAlg DL2 BL' DL2' L'\nAlg DL2' L2 DL2 BL2\nAlg D FL L2 BL2 D'\nAlg D FL L' FL2' D'\nAlg D FL2 L FL' D'\nAlg D FL2' D' FR2 DR2'\nAlg B DL B'\nAlg B DL2 B'\nAlg B DL2' B'\nAlg B DL' B'\nAlg B2 D B2'\nAlg B2 D2 B2'\nAlg B2 D2' B2'\nAlg B2 D' B2'\nAlg B2 DL B2'\nAlg B2' D' B2\nAlg B2' DL B2\nAlg B' D' B\nAlg B DL B' BL\nAlg B DL B' BL2\nAlg B DL B' BL2'\nAlg B DL B' BL'\nAlg B DL2 B' BL2\nAlg B DL2 B' BL2'\nAlg B DL2 B' BL'\nAlg B DL2' L2 B'\nAlg B DL2' L2' B'\nAlg B DL2' L' B'\nAlg B DL' FL B'\nAlg B DL' FL2 B'\nAlg B DL' FL2' B'\nAlg B DL' FL' B'\nAlg B2 D FL B2'\nAlg B2 D FL2' B2'\nAlg B2 D FL' B2'\nAlg B2 D2 FR2 B2'\nAlg B2 D2 FR2' B2'\nAlg B2 D2 FR' B2'\nAlg B2 D2' B2' DR\nAlg B2 D2' B2' DR2\nAlg B2 D2' B2' DR2'\nAlg B2 DL B2' BR\nAlg B2 DL B2' BR2\nAlg B2 DL B2' BR2'\nAlg B2' D' B2 BR2\nAlg B2' D' B2 BR2'\nAlg B' D' B DR\nAlg B' D' B DR2'\nAlg D FL' D FR D2'\nAlg D DL FL DL' D'\nAlg D2' FR DR FR' D2\nAlg B DL B D B2'\nAlg B DL B D2' B2'\nAlg B DL B' BL2 U2\nAlg B DL B' BL2 U2'\nAlg B DL B' BL2 U'\nAlg B DL2 B' BL2' U2\nAlg B DL2 B' BL2' U2'\nAlg B DL2 B' BL' L2\nAlg B DL2' L2' B' F2\nAlg B2 D FL2' B2' F2'\nAlg DR\nAlg DR2\nAlg DR2'\nAlg DR'\nAlg DR2 FR\nAlg DR2 FR2\nAlg DR2 FR2'\nAlg DR2 FR'\nAlg DR2' R\nAlg DR2' R2\nAlg DR2' R2'\nAlg DR2' R'\nAlg DR' BR\nAlg DR' BR2\nAlg DR' BR2'\nAlg DR' BR'\nAlg D DR D'\nAlg D2 DR D2'\nAlg B BR B'\nAlg B BR2' B'\nAlg B BR' B'\nAlg B2 BL2 B2'\nAlg B2 BL2' B2'\nAlg B2 BL' B2'\nAlg DR2 FR2 FL2\nAlg DR2 FR2 FL2'\nAlg DR2 FR2 FL'\nAlg DR2 FR2' F\nAlg DR2 FR2' F2\nAlg DR2 FR2' F2'\nAlg DR2 FR' R\nAlg DR2 FR' R2\nAlg DR2 FR' R'\nAlg DR2' R FR\nAlg DR2' R FR2'\nAlg DR2' R FR'\nAlg DR2' R2' U\nAlg DR2' R2' U2\nAlg DR2' R2' U2'\nAlg DR2' R' BR2'\nAlg DR' BR2' BL'\nAlg D DR2 FR D'\nAlg B BR B' DR\nAlg B BR B' DR2\nAlg B BR2' B' U2'\nAlg B BR' B' BL2\nAlg B BR' B' BL2'\nAlg B BR' B' BL'\nAlg B2 BL2' L' B2'\nAlg DR2 FR2 FL' F\nAlg DR2 FR2' F FL2'\nAlg DR2 FR2' F FL'\nAlg B BR2' U2' L2' B'\nAlg D2' FL D2\nAlg D2' FL2 D2\nAlg D2' FL2' D2\nAlg D2' FL' D2\nAlg D' FR2 D\nAlg D' FR2' D\nAlg D' FR' D\nAlg DR FR DR'\nAlg DR FR2' DR'\nAlg DR FR' DR'\nAlg DR2 R2 DR2'\nAlg DR2 R2' DR2'\nAlg DR2' BR DR2\nAlg DR2' BR2 DR2\nAlg DR2' BR2' DR2\nAlg D DR2 D' DR2'\nAlg D DR2' D' DR2\nAlg D2' FL D2 FR'\nAlg D2' FL2 D2 FL2'\nAlg D2' FL2 D2 FL'\nAlg D2' FL2 L D2\nAlg D2' FL2 L2 D2\nAlg D2' FL2 L2' D2\nAlg D2' FL2 L' D2\nAlg D2' FL2' F D2\nAlg D2' FL2' F2 D2\nAlg D2' FL2' F2' D2\nAlg D2' FL2' L D2\nAlg D2' FL2' L2 D2\nAlg D2' FL2' L2' D2\nAlg D2' FL2' L' D2\nAlg D2' FL' F D2\nAlg D2' FL' F2' D2\nAlg D' FR FL' D\nAlg D' FR2 D FR'\nAlg D' FR2 D FL2\nAlg D' FR2 D FL2'\nAlg D' FR2 FL D\nAlg D' FR2' R2' D\nAlg D' FR' R2' D\nAlg DR2 R2 DR2' U2'\nAlg DR2 R2' DR2' BR\nAlg DR2 R2' DR2' BR2\nAlg DR2 R2' DR2' BR2'\nAlg DR2 R2' DR2' BR'\nAlg DR2 R' BR2' DR2'\nAlg DR2' BR DR2 BR2'\nAlg DR2' BR2 BL DR2\nAlg DR2' BR2 BL2' DR2\nAlg DR2' BR2' BL' DR2\nAlg D B2' BL2' B2 D'\nAlg D2 B2 DL2 B2' D2'\nAlg D2' FL2 L' FL2 D2\nAlg D2' FL2' L D2 FL'\nAlg D2' FL2' L FL2' D2\nAlg D2' FL2' L2' BL2 D2\nAlg B2' DR B2\nAlg B2' DR2 B2\nAlg B2' DR2' B2\nAlg B2' DR' B2\nAlg B' DR' B\nAlg B2' DR FR B2\nAlg B2' DR FR2 B2\nAlg B2' DR FR2' B2\nAlg B2' DR FR' B2\nAlg B2' DR2 R B2\nAlg B2' DR2 R2 B2\nAlg B2' DR2 R2' B2\nAlg B2' DR2 R' B2\nAlg B2' DR2' B2 BR\nAlg B2' DR2' B2 BR2\nAlg B2' DR2' B2 BR2'\nAlg B2' DR2' B2 BR'\nAlg B2' DR' B2 BL2\nAlg B2' DR' B2 BL2'\nAlg B2' DR' B2 BL'\nAlg B' DR2' BR' B\nAlg B' DR' B BR\nAlg B' DR' B BR2'\nAlg B' DR' B BR'\nAlg D2' FR2' FL FR2 D2\nAlg D2' FR2' FL2 FR2 D2\nAlg D2' FR2' FL2' FR2 D2\nAlg D' DR2' FR DR2 D\nAlg D' DR2' FR2 DR2 D\nAlg D' DR' FR' DR D\nAlg D' FR D' FL' D2\nAlg B2 D2 DL2 D2' B2'\nAlg B2 D2 DL2' D2' B2'\nAlg B2 D2 DL' D2' B2'\nAlg B2 D' FR' D B2'\nAlg B2 DL D2' DL' B2'\nAlg B2 DL D' DL' B2'\nAlg B2' DR FR2' B2 F2\nAlg B2' DR FR2' B2 F2'\nAlg B2' DR FR' R B2\nAlg B2' DR FR' R2 B2\nAlg B2' DR2 R2' B2 U\nAlg B2' DR2 R2' B2 U2\nAlg B2' DR2 R2' B2 U2'\nAlg B2' DR' B2 BL2 U'\nAlg B' DR2' BR' B BL2'\nAlg DR D FR D' DR'\nAlg DL2' B D B' DL2\nAlg D2' FR2' FL2' FR2 F D2\nAlg D' DR2' FR DR2 D FL2'\nAlg B2 D B D' DR B2\nAlg FR\nAlg FR2\nAlg FR2'\nAlg FR'\nAlg FR2 FL\nAlg FR2 FL2\nAlg FR2 FL2'\nAlg FR2 FL'\nAlg FR2' F\nAlg FR2' F2\nAlg FR2' F2'\nAlg FR2' F'\nAlg FR' R\nAlg FR' R2\nAlg FR' R2'\nAlg FR' R'\nAlg D FR D'\nAlg DR R DR'\nAlg DR R2' DR'\nAlg DR R' DR'\nAlg DR2 BR2 DR2'\nAlg DR2 BR2' DR2'\nAlg DR2 BR' DR2'\nAlg FR2 FL2' L\nAlg FR2 FL2' L2\nAlg FR2 FL2' L2'\nAlg FR2 FL' F\nAlg FR2 FL' F2\nAlg FR2 FL' F'\nAlg FR2' F FL\nAlg FR2' F FL2'\nAlg FR2' F FL'\nAlg FR2' F2' U\nAlg FR2' F2' U2\nAlg FR2' F2' U2'\nAlg FR2' F' R2'\nAlg FR' R2' BR'\nAlg DR R DR' FR\nAlg DR R DR' FR2\nAlg DR R2' DR' U2'\nAlg DR R' DR' BR2\nAlg DR R' DR' BR2'\nAlg DR R' DR' BR'\nAlg DR2 BR2' BL2' DR2'\nAlg DR2 BR2' BL' DR2'\nAlg FR2 FL' F L2\nAlg FR2 FL' F L2'\nAlg B' DR2 BR' DR2' B\nAlg DR R2' U2' BL2 DR'\nAlg D' FL D\nAlg D' FL2 D\nAlg D' FL2' D\nAlg D' FL' D\nAlg FR FL FR'\nAlg FR FL2 FR'\nAlg FR FL2' FR'\nAlg FR FL' FR'\nAlg FR2 F2 FR2'\nAlg FR2 F2' FR2'\nAlg FR2' R FR2\nAlg FR2' R2 FR2\nAlg FR2' R2' FR2\nAlg D FR2 D' FR2'\nAlg D FR2' D' FR2\nAlg D' FL D FL'\nAlg D' FL2 D FL'\nAlg D' FL2 L D\nAlg D' FL2 L2 D\nAlg D' FL2 L2' D\nAlg D' FL2 L' D\nAlg D' FL2' F2' D\nAlg D' FL2' L2 D\nAlg D' FL2' L2' D\nAlg D' FL2' L' D\nAlg D' FL' F2' D\nAlg FR FL2' F' FR'\nAlg FR FL2' FR' L\nAlg FR FL2' FR' L2\nAlg FR FL2' FR' L2'\nAlg FR2 F2 FR2' U2\nAlg FR2 F2 FR2' U2'\nAlg FR2 F2' FR2' U2'\nAlg FR2 F2' FR2' R\nAlg FR2 F2' FR2' R2\nAlg FR2 F2' FR2' R2'\nAlg FR2 F2' FR2' R'\nAlg FR2 F' R2' FR2'\nAlg FR2' R FR2 R2'\nAlg FR2' R2 BR FR2\nAlg FR2' R2 BR2 FR2\nAlg FR2' R2 BR2' FR2\nAlg FR2' R2' BR2' FR2\nAlg FR2' R2' BR' FR2\nAlg D DR2' BR2' DR2 D'\nAlg D FR2' D' FR2 FL2\nAlg D2' B DL B' D2\nAlg D2' B2' D' B2 D2'\nAlg D' FL2 L BL D\nAlg D' FL2 L' FL2 D\nAlg D' FL2' F2' R' D\nAlg D' FL2' L FL2' D\nAlg D' FL2' L2' BL2 D\nAlg DR2' FR DR2\nAlg DR2' FR2 DR2\nAlg DR2' FR2' DR2\nAlg DR2' FR' DR2\nAlg DR' FR' DR\nAlg DR2' FR FL DR2\nAlg DR2' FR FL2 DR2\nAlg DR2' FR FL2' DR2\nAlg DR2' FR FL' DR2\nAlg DR2' FR2 DR2 F\nAlg DR2' FR2 DR2 F2\nAlg DR2' FR2 DR2 F2'\nAlg DR2' FR2 DR2 F'\nAlg DR2' FR2' DR2 R\nAlg DR2' FR2' DR2 R2\nAlg DR2' FR2' DR2 R2'\nAlg DR2' FR2' DR2 R'\nAlg DR2' FR' DR2 BR2\nAlg DR2' FR' DR2 BR2'\nAlg DR2' FR' DR2 BR'\nAlg DR' FR2' R' DR\nAlg DR' FR' DR R\nAlg DR' FR' DR R2'\nAlg DR' FR' DR R'\nAlg D' FR2' FL FR2 D\nAlg D' FR2' FL2 FR2 D\nAlg D' FR' FL' FR D\nAlg B2' DR2 FR' DR2' B2\nAlg B' DR2 FR' DR2' B\nAlg DR2 D' FL' D DR2'\nAlg DR2' FR FL2' DR2 L\nAlg DR2' FR FL2' DR2 L2\nAlg DR2' FR FL2' DR2 L2'\nAlg DR2' FR FL' DR2 F\nAlg DR2' FR FL' DR2 F2\nAlg DR2' FR2 F FL2 DR2\nAlg DR2' FR2 DR2 F2' U\nAlg DR2' FR2 DR2 F2' U2\nAlg DR2' FR2 DR2 F2' U2'\nAlg DR2' FR' DR2 BR2 U'\nAlg DR2' FR' DR2 BR2' BL2'\nAlg DR' FR2' R' DR BR2'\nAlg D' FR2' FL2 FR2 L D\nAlg D' FR2' FL2 FR2 L2 D\nAlg B2' DR2' FR2' R' DR2 B2\nAlg DR2 D DR D' FR DR2\nAlg DR2' FR' DR2 BR2 U' BL2\nAlg FL\nAlg FL2\nAlg FL2'\nAlg FL'\nAlg FL L\nAlg FL L2\nAlg FL L2'\nAlg FL L'\nAlg FL2 F\nAlg FL2 F2\nAlg FL2 F2'\nAlg FL2 F'\nAlg FR2' FL2' FR2\nAlg FR' FL2' FR\nAlg FL L2 BL\nAlg FL L2 BL2\nAlg FL L2 BL2'\nAlg FL L2 BL'\nAlg FL L2' U\nAlg FL L2' U2\nAlg FL L2' U2'\nAlg FL L' F\nAlg FL L' F2\nAlg FL L' F'\nAlg FL2 F L\nAlg FL2 F L2\nAlg FL2 F L2'\nAlg FL2 F L'\nAlg FL2 F2' R\nAlg FL2 F2' R2\nAlg FL2 F2' R2'\nAlg FR' FL2 F' FR\nAlg FL L2 BL2' BR\nAlg FL L2 BL2' BR2\nAlg FL L2 BL' U\nAlg FL L2' U BL2\nAlg FL L2' U BL2'\nAlg FL L2' U BL'\nAlg FL L2' U2' R\nAlg FL L2' U2' R2\nAlg FL L' F' FL\nAlg FL L' F' FL2\nAlg FL L' F' FL2'\nAlg B DL2' BL DL2 B'\nAlg FL L2 BL' U BR2'\nAlg FL2 L FL2'\nAlg FL2 L2 FL2'\nAlg FL2 L2' FL2'\nAlg FL2 L' FL2'\nAlg FL2' F2 FL2\nAlg FL2' F2' FL2\nAlg FL2' F' FL2\nAlg FR2' FL' FR2 FL\nAlg FL2 L2 FL2' L2'\nAlg FL2 L2 FL2' L'\nAlg FL2 L2 FL2' BL\nAlg FL2 L2 FL2' BL2\nAlg FL2 L2 FL2' BL2'\nAlg FL2 L2 FL2' BL'\nAlg FL2 L2' FL2' U\nAlg FL2 L2' FL2' U2\nAlg FL2 L2' FL2' U2'\nAlg FL2 L2' FL2' BL\nAlg FL2 L2' FL2' BL2\nAlg FL2 L2' FL2' BL2'\nAlg FL2 L2' FL2' BL'\nAlg FL2 L' FL2' U\nAlg FL2 L' FL2' U2'\nAlg FL2 L' FL2' F\nAlg FL2 L' FL2' F2\nAlg FL2 L' FL2' F2'\nAlg FL2 L' FL2' F'\nAlg FL2' F L FL2\nAlg FL2' F L' FL2\nAlg FL2' F2 L FL2\nAlg FL2' F2 L2 FL2\nAlg FL2' F2 L2' FL2\nAlg FL2' F2 FL2 F'\nAlg FL2' F2 FL2 L2\nAlg FL2' F2' R FL2\nAlg FL2' F2' R2 FL2\nAlg FL2' F2' R2' FL2\nAlg FL2' F' R2' FL2\nAlg FL2' F' R' FL2\nAlg FL' FR2' FL FR2\nAlg D DR2' FR2' DR2 D'\nAlg D FR2' R' FR2 D'\nAlg D' DL2 BL2 DL2' D\nAlg B2 D2' B D2 B2\nAlg DR2 D2 DR D2' DR2\nAlg FR2 D FR D' FR2\nAlg FL2 L2 BL' L2 FL2'\nAlg FL2 L2 FL2' BL2 BR\nAlg FL2 L2' BL L2' FL2'\nAlg FL2 L2' FL2' BL L'\nAlg DL FL DL'\nAlg DL FL2 DL'\nAlg DL FL2' DL'\nAlg DL FL' DL'\nAlg DL2 FL DL2'\nAlg DL FL DL' L\nAlg DL FL DL' L2\nAlg DL FL DL' L2'\nAlg DL FL DL' L'\nAlg DL FL2 L DL'\nAlg DL FL2 L2 DL'\nAlg DL FL2 L2' DL'\nAlg DL FL2 L' DL'\nAlg DL FL2 DL' L\nAlg DL FL2' DL' F2\nAlg DL FL2' DL' F2'\nAlg DL FL2' DL' F'\nAlg DL2 FL DL2' BL\nAlg DL2 FL DL2' BL2\nAlg DL2 FL DL2' BL2'\nAlg B DL2' FL DL2 B'\nAlg B2 DL2' FL DL2 B2'\nAlg FL2 F2 L' F2' FL2'\nAlg FL2 F2' L' F2 FL2'\nAlg FL2 F' L' F FL2'\nAlg FL2' FR2' FL FR2 FL2\nAlg FL2' FR' F' FR FL2\nAlg DL FL DL' L BL2'\nAlg DL FL DL' L BL'\nAlg DL FL DL' L2 U2\nAlg DL FL DL' L2 U2'\nAlg DL FL2 L2' DL' U2\nAlg DL FL2 L2' DL' U2'\nAlg DL FL2 L' DL' F'\nAlg DL FL2' DL' F2' R2\nAlg DL FL2' DL' F2' R2'\nAlg DL2 FL DL2' BL2 BR2\nAlg B DL2 FL DL2' BL B'\nAlg FL2 F2' L' F2 R2 FL2'\nAlg FL2 F2' L' F2 R2' FL2'\nAlg FL2' FR' F FR L FL2\nAlg DL FL DL' L BL2' BR2\nAlg DL FL2 L DL FL' DL2'\nAlg FR F FR'\nAlg FR F2 FR'\nAlg FR F2' FR'\nAlg FR F' FR'\nAlg FR2 R FR2'\nAlg FR2 R2 FR2'\nAlg FR2 R2' FR2'\nAlg FR2 R' FR2'\nAlg FL2' L FL2\nAlg FL2' L2 FL2\nAlg FL2' L2' FL2\nAlg FL' F FL\nAlg FL' F2 FL\nAlg FL' F' FL\nAlg FR F FR' F'\nAlg FR F2 FR' L\nAlg FR F2' FR' U\nAlg FR F2' FR' U2\nAlg FR F2' FR' U2'\nAlg FR F' FR' R\nAlg FR F' FR' R2\nAlg FR F' FR' R2'\nAlg FR F' FR' R'\nAlg FR2 R FR2' F2\nAlg FR2 R FR2' R'\nAlg FR2 R2' BR FR2'\nAlg FR2 R2' BR2 FR2'\nAlg FR2 R2' BR2' FR2'\nAlg FR2 R2' BR' FR2'\nAlg FL2' L2 FL2 BL\nAlg FL2' L2 FL2 BL2\nAlg FL2' L2' FL2 U\nAlg FL' F L2 FL\nAlg FL' F L2' FL\nAlg FL' F FL L\nAlg DR' FR2 R' FR2' DR\nAlg FR F2' U2' BR FR'\nAlg FR F2' U2' BR2 FR'\nAlg FR F' FR R' FR2'\nAlg FL2' L2' FL2 U BL2\nAlg FL2' L2' FL2 U BL2'\nAlg FR F L F' FR'\nAlg FR F L2 F' FR'\nAlg FR F L2' F' FR'\nAlg FR F L' F' FR'\nAlg FR F2 U F2' FR'\nAlg FR F2 U2 F2' FR'\nAlg FR F2 U2' F2' FR'\nAlg FR F2' R F2 FR'\nAlg FR F2' R2 F2 FR'\nAlg FR F2' R2' F2 FR'\nAlg FR FL' L FL FR'\nAlg FR FL' L2 FL FR'\nAlg FR FL' L' FL FR'\nAlg FR2 F2' L F2 FR2'\nAlg FR2 F2' L2 F2 FR2'\nAlg FR2 F' U2 F FR2'\nAlg FR2 F' U2' F FR2'\nAlg FR2 R U R' FR2'\nAlg FR2 R U' R' FR2'\nAlg FR2 R2 BR2 R2' FR2'\nAlg FR2 R2 BR2' R2' FR2'\nAlg FR2' DR BR DR' FR2\nAlg FR2' R2' U R2 FR2\nAlg FR2' R2' U2 R2 FR2\nAlg FR2' R' BR2 R FR2\nAlg FR2' R' BR2' R FR2\nAlg FR2' R' BR' R FR2\nAlg FL2 L BL L' FL2'\nAlg FL2 L2 U2' L2' FL2'\nAlg FL2 DL' BL2 DL FL2'\nAlg FL2' F2 R2' F2' FL2\nAlg FL2' L2' BL2 L2 FL2\nAlg FL' F2 L F2' FL\nAlg FL' F2 L2 F2' FL\nAlg FL' F' R' F FL\nAlg FL' FR R' FR' FL\nAlg FR F L2' F' FR' BL\nAlg FR F L2' F' FR' BL2\nAlg FR F L' F' FR' F'\nAlg FR F2 U2 BR2 F2' FR'\nAlg FR F2 U2 BR2' F2' FR'\nAlg FR F2' R F2 R2' FR'\nAlg FR F2' R2' F2 FR' R'\nAlg FR FL' L FL FR' F'\nAlg FR2 F' U2 F FR2' L2'\nAlg FR F L2 BL' L2 F' FR'\nAlg FR F L2' F U' F2' FR'\nAlg R\nAlg R2\nAlg R2'\nAlg R'\nAlg R2 F\nAlg R2 F2\nAlg R2 F2'\nAlg R2 F'\nAlg R2' U\nAlg R2' U2\nAlg R2' U2'\nAlg R2' U'\nAlg R' BR\nAlg R' BR2\nAlg R' BR2'\nAlg R' BR'\nAlg DR BR DR'\nAlg DR BR2' DR'\nAlg DR BR' DR'\nAlg FR R FR'\nAlg R2 F2' L\nAlg R2 F2' L2\nAlg R2 F2' L2'\nAlg R2 F' U\nAlg R2 F' U2\nAlg R2 F' U'\nAlg R2' U F\nAlg R2' U F2'\nAlg R2' U F'\nAlg R2' U2' BL\nAlg R2' U2' BL2\nAlg R2' U2' BL2'\nAlg R2' U' BR2'\nAlg DR BR DR' R\nAlg DR BR DR' R2\nAlg DR BR2' BL2' DR'\nAlg DR BR2' BL' DR'\nAlg R2 F' U L2\nAlg R2 F' U L2'\nAlg FR' F FR\nAlg FR' F2 FR\nAlg FR' F2' FR\nAlg FR' F' FR\nAlg R F R'\nAlg R F2 R'\nAlg R F2' R'\nAlg R F' R'\nAlg R2 U2 R2'\nAlg R2 U2' R2'\nAlg R2' BR R2\nAlg R2' BR2 R2\nAlg R2' BR2' R2\nAlg FR R2 FR' R2'\nAlg FR R2' FR' R2\nAlg FR' F FR F'\nAlg FR' F2 FR F'\nAlg FR' F2 FR L\nAlg FR' F2 FR L2\nAlg FR' F2 FR L2'\nAlg FR' F2 FR L'\nAlg FR' F2' FR U2'\nAlg FR' F2' FR L2\nAlg FR' F2' FR L2'\nAlg FR' F2' FR L'\nAlg FR' F' FR U2'\nAlg R F2' U' R'\nAlg R F2' R' L\nAlg R F2' R' L2\nAlg R F2' R' L2'\nAlg R2 U2 R2' BL2\nAlg R2 U2 R2' BL2'\nAlg R2 U2' BR R2'\nAlg R2 U2' BR2 R2'\nAlg R2 U2' R2' BL2'\nAlg R2 U2' R2' BR2'\nAlg R2 U2' R2' BR'\nAlg R2 U' BR2' R2'\nAlg R2' BR R2 BR2'\nAlg DR BR2 BL2' BR2' DR'\nAlg FR R2' FR' R2 F2\nAlg FR' F2 L' F2 FR\nAlg FR' F2' U2' BR' FR\nAlg FR' F2' L F2' FR\nAlg DR' R DR\nAlg DR' R2 DR\nAlg DR' R2' DR\nAlg DR' R' DR\nAlg DR' R DR F\nAlg DR' R DR F2\nAlg DR' R DR F2'\nAlg DR' R DR F'\nAlg DR' R2 DR U\nAlg DR' R2 DR U2\nAlg DR' R2 DR U2'\nAlg DR' R2 DR U'\nAlg DR' R2' DR BR\nAlg DR' R2' DR BR2\nAlg DR' R2' DR BR2'\nAlg DR' R2' DR BR'\nAlg DR' R' DR BR\nAlg DR' R' DR BR2'\nAlg DR' R' DR BR'\nAlg B2' DR2' R' DR2 B2\nAlg DR2' FR' F FR DR2\nAlg DR2' FR' F2 FR DR2\nAlg DR2' FR' F' FR DR2\nAlg DR' R DR F2' L\nAlg DR' R DR F2' L2\nAlg DR' R DR F2' L2'\nAlg DR' R DR F' U\nAlg DR' R DR F' U2\nAlg DR' R DR F' U'\nAlg DR' R2 U2' BL DR\nAlg DR' R2 U2' BL2 DR\nAlg DR' R2 U2' BL2' DR\nAlg DR' R2 DR U F2\nAlg DR' R' DR BR2' BL2'\nAlg DR2' FR' F2 FR DR2 L\nAlg DR2' FR' F2 FR DR2 L2\nAlg DR' FR' F' FR R' DR\nAlg BR\nAlg BR2\nAlg BR2'\nAlg BR'\nAlg BR2' U\nAlg BR2' U2\nAlg BR2' U2'\nAlg BR2' U'\nAlg BR' BL\nAlg BR' BL2\nAlg BR' BL2'\nAlg BR' BL'\nAlg B BL B'\nAlg B BL2' B'\nAlg B BL' B'\nAlg BR2' U2 F\nAlg BR2' U2 F2\nAlg BR2' U2 F2'\nAlg BR2' U2 F'\nAlg BR2' U2' L\nAlg BR2' U2' L2\nAlg BR2' U2' L2'\nAlg BR2' U' BL2'\nAlg BR' BL U\nAlg BR' BL U2\nAlg BR' BL U2'\nAlg BR' BL U'\nAlg B BL B' BR\nAlg B BL B' BR2\nAlg B BL B' BR2'\nAlg B BL2' L2' B'\nAlg B BL2' L' B'\nAlg BR2' U2' L F2\nAlg BR2' U2' L F2'\nAlg BR2' U2' L F'\nAlg BR2 U BR2'\nAlg BR2 U2 BR2'\nAlg BR2 U2' BR2'\nAlg BR2 U' BR2'\nAlg BR2' BL BR2\nAlg BR2' BL2 BR2\nAlg BR2' BL2' BR2\nAlg BR R BR' R'\nAlg BR2 U BR2' U2'\nAlg BR2 U BR2' U'\nAlg BR2 U BR2' F\nAlg BR2 U BR2' F2\nAlg BR2 U BR2' F2'\nAlg BR2 U BR2' F'\nAlg BR2 U2 BR2' F\nAlg BR2 U2 BR2' F2\nAlg BR2 U2 BR2' F2'\nAlg BR2 U2 BR2' F'\nAlg BR2 U2 BR2' L\nAlg BR2 U2 BR2' L2\nAlg BR2 U2 BR2' L2'\nAlg BR2 U2' BL BR2'\nAlg BR2 U2' BL2 BR2'\nAlg BR2 U2' BL' BR2'\nAlg BR2 U2' BR2' L\nAlg BR2 U2' BR2' L2'\nAlg BR2 U2' BR2' BL2'\nAlg BR2 U2' BR2' BL'\nAlg BR2 U' BL BR2'\nAlg BR2 U' BL2' BR2'\nAlg BR2 U' BL' BR2'\nAlg BR2' BL BR2 U2\nAlg BR2' BL BR2 U2'\nAlg BR2' BL BR2 BL2'\nAlg BR2' BL BR2 BL'\nAlg B BL2 L2' BL2' B'\nAlg DR' R2 F R2' DR\nAlg BR2 U F' U2' BR2'\nAlg BR2 U BR2' U2' BL'\nAlg BR2 U2 F U' BR2'\nAlg BR2 U2 BR2' L F2'\nAlg B' BR B\nAlg B' BR2 B\nAlg B' BR2' B\nAlg B' BR' B\nAlg B' BR2 B U\nAlg B' BR2 B U2\nAlg B' BR2 B U2'\nAlg B' BR2 B U'\nAlg B' BR2' B BL\nAlg B' BR2' B BL2\nAlg B' BR2' B BL2'\nAlg B' BR2' B BL'\nAlg B' BR' B BL\nAlg B' BR' B BL2'\nAlg B' BR' B BL'\nAlg B' BR2 U2' L B\nAlg B' BR2 U2' L2 B\nAlg B' BR2 U2' L2' B\nAlg B' BR2 B U2 F\nAlg B' BR2 B U2 F2\nAlg B' BR2 B U2 F2'\nAlg B' BR2 B U2 F'\nAlg B' BR2' B BL U\nAlg B' BR2' B BL U2\nAlg B' BR2' B BL U2'\nAlg B' BR2' B BL U'\nAlg B' BR' B BL2' L2'\nAlg B' BR' B BL2' L'\nAlg BR2 R U R' BR2'\nAlg B' BR2 U2' L B F2'\nAlg B' BR2 U2' L B F'\nAlg B' BR' B BR2 BL BR2'\nAlg B' BR2 U R BR' R' B\nAlg BR U BR'\nAlg BR U2 BR'\nAlg BR U2' BR'\nAlg BR U' BR'\nAlg BR2 BL BR2'\nAlg BR2 BL2 BR2'\nAlg BR2 BL2' BR2'\nAlg BR2 BL' BR2'\nAlg R2' F R2\nAlg R2' F2 R2\nAlg R2' F2' R2\nAlg R' U R\nAlg R' U2 R\nAlg R' U' R\nAlg BR U BR' U'\nAlg BR U2 BR' F\nAlg BR U2' BR' L\nAlg BR U2' BR' L2\nAlg BR U2' BR' L2'\nAlg BR U' BL BR'\nAlg BR U' BL2 BR'\nAlg BR U' BL2' BR'\nAlg BR U' BR' BL'\nAlg BR2 BL BR2' U2\nAlg BR2 BL BR2' BL'\nAlg R2' F2' R2 L\nAlg R2' F2' R2 L2\nAlg R' U F2 R\nAlg R' U F2' R\nAlg R' U R F\nAlg BR U' BR BL' BR2'\nAlg BR U F U' BR'\nAlg BR U F2 U' BR'\nAlg BR U F2' U' BR'\nAlg BR U F' U' BR'\nAlg BR U2 L U2' BR'\nAlg BR U2 L2 U2' BR'\nAlg BR U2 L2' U2' BR'\nAlg BR U2' BL U2 BR'\nAlg BR U2' BL2 U2 BR'\nAlg BR U2' BL2' U2 BR'\nAlg BR R' F R BR'\nAlg BR R' F2 R BR'\nAlg BR R' F' R BR'\nAlg BR2 U2' F U2 BR2'\nAlg BR2 U2' F2 U2 BR2'\nAlg BR2 U' L2 U BR2'\nAlg BR2 U' L2' U BR2'\nAlg BR2 BL L BL' BR2'\nAlg BR2 BL L' BL' BR2'\nAlg BR2' BL2' L BL2 BR2\nAlg BR2' BL2' L2 BL2 BR2\nAlg R2 F2 L F2' R2'\nAlg R2 F2 L2 F2' R2'\nAlg R2 F2 L2' F2' R2'\nAlg R2' U2 BL2' U2' R2\nAlg R' U2 F U2' R\nAlg R' U2 F2 U2' R\nAlg R' U' BL' U R\nAlg R' BR BL' BR' R\nAlg BR U F' U' BR' U'\nAlg BR U2 L' BL2 U2' BR'\nAlg BR U2' BL U2 BL2' BR'\nAlg BR U2' BL2' U2 BR' BL'\nAlg BR R' F R BR' U'\nAlg BR2 U' L2 U BR2' F2'\nAlg BR2 U' L2 U BR2' F'\nAlg BR U F2' U L' U2' BR'\nAlg BR U F2' L' F U' BR'\nAlg F\nAlg F2\nAlg F2'\nAlg F'\nAlg F L\nAlg F L2\nAlg F L2'\nAlg F L'\nAlg F2 U\nAlg F2 U2\nAlg F2 U2'\nAlg F2 U'\nAlg F L2' BL\nAlg F L2' BL2\nAlg F L2' BL2'\nAlg F L' U\nAlg F L' U2\nAlg F L' U2'\nAlg F L' U'\nAlg F2 U L\nAlg F2 U L2\nAlg F2 U L2'\nAlg F2 U L'\nAlg F L' U BL2\nAlg F L' U BL2'\nAlg F L' U BL'\nAlg F L' U' F\nAlg F L' U' F2\nAlg F L' U' F2'\nAlg F2 L F2'\nAlg F2 L2 F2'\nAlg F2 L2' F2'\nAlg F2 L' F2'\nAlg F2' U2 F2\nAlg F2' U2' F2\nAlg F2' U' F2\nAlg F2 L2 F2' L2'\nAlg F2 L2 F2' L'\nAlg F2 L2' BL F2'\nAlg F2 L2' BL2 F2'\nAlg F2 L2' BL2' F2'\nAlg F2 L' F2' U\nAlg F2 L' F2' U2\nAlg F2 L' F2' U2'\nAlg F2 L' F2' U'\nAlg F2 L' BL F2'\nAlg F2 L' BL2 F2'\nAlg F2 L' BL2' F2'\nAlg F2' U L F2\nAlg F2' U L2 F2\nAlg F2' U L' F2\nAlg F2' U2 F2 U2'\nAlg F2' U2 F2 U'\nAlg F2' U2 F2 L2\nAlg F2' U2 F2 L2'\nAlg F2' U2 F2 L'\nAlg F2' U2 L F2\nAlg F' R' F R\nAlg F L2 BL L2' F'\nAlg F L2 BL2 L2' F'\nAlg F2 L2 F2' L2' U2'\nAlg F2 L2' BL' L F2'\nAlg F2 L' F U2' F2\nAlg F2 L' F' U' F'\nAlg FL F FL'\nAlg FL F2 FL'\nAlg FL F2' FL'\nAlg FL F' FL'\nAlg FL F FL' L\nAlg FL F FL' L2\nAlg FL F FL' L2'\nAlg FL F FL' L'\nAlg FL F2 FL' L\nAlg FL F2 FL' L2\nAlg FL F2 FL' L2'\nAlg FL F2 FL' L'\nAlg FL F2' FL' U2\nAlg FL F2' FL' U2'\nAlg FL F2' FL' U'\nAlg F2 U2 L' U2' F2'\nAlg F2 U2' L' U2 F2'\nAlg F2 U' L' U F2'\nAlg FL F FL' L2 BL\nAlg FL F FL' L2 BL2\nAlg FL F FL' L2 BL2'\nAlg FL F2 FL' L2' BL\nAlg FL F2 FL' L2' BL2\nAlg FL F2 FL' L2' BL2'\nAlg FL F2 FL' L' U'\nAlg FL F FL' F2' L' F2\nAlg F2 U F U L U2' F2'\nAlg F2' L F2\nAlg F2' L2 F2\nAlg F2' L2' F2\nAlg F2' L' F2\nAlg F' U F\nAlg F' U2 F\nAlg F' U2' F\nAlg F' U' F\nAlg R U R'\nAlg R U2' R'\nAlg R U' R'\nAlg F R' F' R\nAlg F2' L F2 L'\nAlg F2' L2' BL F2\nAlg F2' L2' BL2 F2\nAlg F2' L2' BL2' F2\nAlg F' U F U'\nAlg F' U F L\nAlg F' U F L2\nAlg F' U F L2'\nAlg F' U F L'\nAlg R U2' R' BL2\nAlg R U2' R' BL2'\nAlg R U2' R' BL'\nAlg F2' L' F U' F\nAlg F2 L2 BL L2' F2'\nAlg F2 L2 BL2 L2' F2'\nAlg F2 L2 BL2' L2' F2'\nAlg F2 L2 BL' L2' F2'\nAlg F2' U BL U' F2\nAlg F2' U BL' U' F2\nAlg F2' L' BL L F2\nAlg F2' L' BL2 L F2\nAlg F2' L' BL2' L F2\nAlg F2' L' BL' L F2\nAlg F' U2 L U2' F\nAlg F' U2 L2 U2' F\nAlg F' U2 L2' U2' F\nAlg F' U2' BL2 U2 F\nAlg R U L U' R'\nAlg R U L' U' R'\nAlg R F' L F R'\nAlg R2 U2' L2 U2 R2'\nAlg R2 U' BL2 U R2'\nAlg R2 U' BL2' U R2'\nAlg R2 U' BL' U R2'\nAlg R2 BR BL' BR' R2'\nAlg F2 L2 BL2' L2' F2' U2\nAlg F2' U BL U' F2 L\nAlg F2' U BL' U' F2 L2\nAlg F2' U BL' U' F2 L2'\nAlg F2' L' BL L F2 U2\nAlg F2' L' BL L F2 U2'\nAlg F2' L' BL' L F2 U\nAlg F2' L' BL' L F2 U2\nAlg F' U2 L' U BL2' U2 F\nAlg F' U2' BL L' BL2' U2 F\nAlg U\nAlg U2\nAlg U2'\nAlg U'\nAlg U L\nAlg U L2\nAlg U L2'\nAlg U L'\nAlg U2 BL\nAlg U2 BL2\nAlg U2 BL2'\nAlg U2 BL'\nAlg U L' BL\nAlg U L' BL2\nAlg U L' BL2'\nAlg U L' BL'\nAlg U2 BL L\nAlg U2 BL L2\nAlg U2 BL L2'\nAlg U2 BL L'\nAlg U F' L F\nAlg U L' BL' U\nAlg U L' BL' U2\nAlg U2 L U2'\nAlg U2 L2 U2'\nAlg U2 L2' U2'\nAlg U2 L' U2'\nAlg U2' BL2 U2\nAlg U2' BL2' U2\nAlg U2' BL' U2\nAlg U2 L2 U2' L2'\nAlg U2 L2 U2' L'\nAlg U2 L' U2' BL\nAlg U2 L' U2' BL2\nAlg U2 L' U2' BL2'\nAlg U2 L' U2' BL'\nAlg U2' BL L U2\nAlg U2' BL L2 U2\nAlg U2' BL L2' U2\nAlg U2' BL L' U2\nAlg U2' BL2 U2 L2\nAlg U2' BL2 U2 L2'\nAlg U2' BL2 U2 L'\nAlg U2' BL2 U2 BL2'\nAlg U2' BL2 U2 BL'\nAlg U2' BL2 L U2\nAlg U' BR' U BR\nAlg U2 L' U BL2' U2\nAlg U2 L2' U2' L2 BL2\nAlg U2 L2' U2' L2 BL2'\nAlg U2 L' U' BL' U'\nAlg U2' BL2 U' L U2'\nAlg F U F'\nAlg F U2 F'\nAlg F U2' F'\nAlg F U' F'\nAlg F U F' L\nAlg F U F' L2\nAlg F U F' L2'\nAlg F U F' L'\nAlg F U2 F' L\nAlg F U2 F' L2\nAlg F U2 F' L2'\nAlg F U2 F' L'\nAlg F U2' BL2 F'\nAlg F U2' BL2' F'\nAlg F U2' BL' F'\nAlg U2 BL2 L' BL2' U2'\nAlg U2 BL' L' BL U2'\nAlg U2 BL2' L' BL2 U2'\nAlg F U2 F' L' BL'\nAlg F U F' U2' L' U2\nAlg U2 L U2 L2' U' BL' U2\nAlg U2' L U2\nAlg U2' L2 U2\nAlg U2' L2' U2\nAlg U2' L' U2\nAlg U' BL U\nAlg U' BL2 U\nAlg U' BL2' U\nAlg U' BL' U\nAlg BR BL BR'\nAlg BR BL2' BR'\nAlg BR BL' BR'\nAlg U BR' U' BR\nAlg U2' L U2 L'\nAlg U' BL U L\nAlg U' BL U L2\nAlg U' BL U L2'\nAlg U' BL U L'\nAlg U' BL U BL'\nAlg U2' L' U BL' U\nAlg U' BL2 L BL2' U\nAlg U' BL2 L2 BL2' U\nAlg U' BL2 L2' BL2' U\nAlg U' BL2 L' BL2' U\nAlg BR U' L U BR'\nAlg BR U' L2 U BR'\nAlg BR U' L2' U BR'\nAlg BR U' L' U BR'\nAlg BR BL L BL' BR'\nAlg BR BL L' BL' BR'\nAlg BR2 BL2' L BL2 BR2'\nAlg BR2 BL2' L2 BL2 BR2'\nAlg U2' L BL2' L' BL2 U2\nAlg U2' L2 F' L2' F U2\nAlg U2' L' DL L DL' U2\nAlg U2' BL2' L BL2 L' U2\nAlg U2' BL2' L2 BL2 L2' U2\nAlg U' BL2 L BL2' U BL\nAlg U' BL2 L2 BL2' U L\nAlg U' BL2 L2 BL2' U BL2'\nAlg U' BL2 L2 BL2' U BL'\nAlg U' BL2 L2 BL2' L2' U\nAlg BR BL L' BL' BR' BL2'\nAlg BR BL L' BL' BR' BL'\nAlg U' BL U BL U' L2' BL2' U\nAlg U' BL2 U' L2 U L' BL2' U\nAlg L\nAlg L2\nAlg L2'\nAlg L'\nAlg L' BL\nAlg L' BL2\nAlg L' BL2'\nAlg L' BL'\nAlg U BL U'\nAlg U BL2 U'\nAlg U BL2' U'\nAlg U BL' U'\nAlg U BL U' L\nAlg U BL U' L2\nAlg U BL U' L2'\nAlg U BL U' L'\nAlg U BL U' BL'\nAlg L2' BL L2\nAlg L2' BL2 L2\nAlg L2' BL2' L2\nAlg L2' BL' L2\nAlg L2 DL L2' DL'\nAlg L2' BL L2 BL2'\nAlg L2' BL L2 BL'\nAlg F' L2 BL L2' F\nAlg F' L2 BL2 L2' F\nAlg F' L2 BL2' L2' F\nAlg F' L2 BL' L2' F\nAlg L2 DL L' DL' L'\nAlg L2' U BL2' U' L2\nAlg L2' BL L2' BL2' L'\nAlg L2' BL L' BL2' L2'\nAlg L2' DL L' DL' L2\nAlg L' U' L' U L2\nAlg U L' DL L DL' U'\nAlg F' L2 BL L2' BL2' F\nAlg L2 DL' BL DL2 L2' DL'\nAlg L2' U BL2' U' BL L2\nAlg L2' BL' U BL' U' L2\nAlg L2' BL' L2 U' L' U\nAlg U' L U\nAlg U' L2 U\nAlg U' L2' U\nAlg U' L' U\nAlg U' L2' U BL\nAlg U' L2' U BL2\nAlg U' L2' U BL2'\nAlg U' L2' U BL'\nAlg U' L' U BL\nAlg U' L' U BL2\nAlg U' L' U BL2'\nAlg U' L' U BL'\nAlg U' L' U L BL L'\nAlg U' L' U L2 BL L2'\nAlg U' L' U BL U' L2 U\nAlg L2 BL L2'\nAlg L2 BL2 L2'\nAlg L2 BL2' L2'\nAlg L2 BL' L2'\nAlg L2 BL L2' BL'\nAlg L DL L' DL'\nAlg DL L DL' L'\nAlg L U' L2 U L2\nAlg L DL' BL DL L'\nAlg L DL' BL2 DL L'\nAlg L DL' BL' DL L'\nAlg DL L DL' L' BL'\nAlg L2 BL L' DL L' DL'\nAlg FL' L BL L' FL\nAlg FL' L BL2 L' FL\nAlg FL' L BL2' L' FL\nAlg FL' L BL' L' FL\nAlg FL' DL' BL DL FL\nAlg FL' DL' BL2 DL FL\nAlg FL' DL' BL2' DL FL\nAlg FL' DL' BL' DL FL\nAlg L2 BL2' U BL2 U' L2'\nAlg FL' L BL L' FL BL2'\nAlg FL' L BL' L' FL BL\nAlg U' F U BL U' F' U\nAlg U' F U BL2 U' F' U\nAlg U' F U BL2' U' F' U\nAlg F' FL2' DL' BL' DL FL2 F\nAlg L2' BL2 L2' BL' L2 BL' L2\nAlg DL L DL2' BL' DL2 L' DL'\nAlg DL2 FL2' DL2 BL' DL2' FL2 DL2'\nAlg FL' L U BL2' U' BL L' FL\nAlg FL' L2 U' L' U BL2 L' FL\nAlg L BL L'\nAlg L BL2 L'\nAlg L BL2' L'\nAlg L BL' L'\nAlg DL' BL DL\nAlg DL' BL2 DL\nAlg DL' BL2' DL\nAlg DL' BL' DL\nAlg L BL L' BL'\nAlg L' DL L DL'\nAlg L BL2 L' DL' BL' DL\nAlg L U BL2' U' BL2 L'\nAlg L BL2' U BL2 U' L'\nAlg DL' B' BL2 B BL2' DL\nAlg DL' BL2 B' BL2' B DL\nAlg U BL2' DL2' BL2 U' BL2' DL2\nAlg B' BL2 L2 BL2' B BL2 L2'\nAlg L U BL2' U' BL2 L' BL2'\nAlg L U BL2' U' BL2 L' BL'\nAlg L BL B BL' L' BL B'\nAlg L BL2' U BL2 U' L' BL2\nAlg L BL' U BL2 U' BL L'\nAlg L BL' U BL2' U' BL L'\nAlg L BL' U BL' U' BL L'\nAlg L2 BL2 L2' BL' L2 BL' L2'\nAlg DL' BL B' BL2' B BL' DL\nAlg L BL2' L U2 BR' U' BR U' L2'\nAlg L BL2' L BL L' BL L BL2' L2'\nAlg BL\nAlg BL2\nAlg BL2'\nAlg BL'\nAlg U BR BL2 BR' BL2' U'\nAlg B BL DL BL' DL' B'\nAlg L' BL2' DL' BL2 DL L\nAlg BR B BL B' BL' BR'\nAlg U BR BL2 BR' BL2' U' BL2\nAlg U BL BR BL' BR' U'\nAlg U BR BL BR' BL' U'\nAlg U' L' BL2' L BL2 U\nAlg B' BR' BL2' BR BL2 B\nAlg L BL2 U BL2' U' L'\nAlg BR B BL2 B' BL2' BR'\nAlg U BL2 U' BL' U BL' U'\nAlg B BL DL BL DL' BL2' B'\nAlg B BL2 DL BL' DL' BL' B'\nAlg B' BL' B BL2' B' BL2' B\nAlg U BL U' BL2 U BL2 U' BL2\nAlg U BR2 B' BR2' U' BR B BR'\nAlg BL2 BR B DL' B DL B2' BR'\nAlg B BL2' B2' BR B BR' B BL2 B'\nAlg U' BL' L' BL L U BL\nAlg B' BL2 B BL B' BL2 B\nAlg B' BL2' B BL' B' BL2' B\nAlg B' BL' BR' BL' BR BL2 B\nAlg B' BL2' BR' BL BR BL B\nAlg U' BL' L' BL' L BL2 U BL'\nAlg L' BL' L' DL L DL' BL L BL\nAlg L U BL U' BL' L'\nAlg L BL U BL' U' L'\nAlg BR' U' BL' U BL BR\nAlg L U2 BR' U' BR U' L'\nAlg U BL U2' L U L2' BL L BL2'\nAlg U' L2 F' L' F2 U' F' U2 L'\nAlg U BR' U' L U BR U' L'\nAlg U BR B BR' U' BR B' BR'\nAlg U' L U BR' U' L' U BR\nAlg B DL' B' BR B DL B' BR'\nAlg L' DL' B DL L DL' B' DL\nAlg BR B BR' U BR B' BR' U'\nAlg BR B DL' B' BR' B DL B'\nAlg U BR2' U2 L2 U2' BR2 U2 L2' U2\nAlg U2' L2 U2' BR2' U2 L2' U2' BR2 U'\nAlg U BL' B' BL U' L U2 BL' B BL U2' L'\nAlg U BR' U' L F' L2' U BR U' L2 F L'\nAlg U BR U' L U BR' U' L'\nAlg U' BL2 B BL2' U BL2 B' BL2'\nAlg L U BR U' L' U BR' U'\nAlg L BL2' B' BL2 L' BL2' B BL2\nAlg U BR' U2 L2 U2' BR U2 L2' U2\nAlg L' BL2 L2' F' L2 BL2' L2' F L2'\nAlg U BL2' U R U' BL2 U' L U2 R' U2' L'\nAlg U BR U' L2 F L' U BR' U' L F' L2'\nAlg U L' BL2 L' FL' L BL2' L U' L2' FL L2\nAlg U BR2' U R' U2' L U2 R U' BR2 U' L'`,\n  );\n}\n","import { puzzles } from \"../../../../puzzles\";\nimport { parseSGS, SGSCachedData } from \"../parseSGS\";\n\nlet cachedData: Promise<SGSCachedData> | null = null;\nexport async function sgsDataPyraminx() {\n  return (cachedData ??= uncachedSGSDataPyraminx());\n}\n\nexport async function sgsDataPyraminxFixedOrientation(): Promise<SGSCachedData> {\n  return {\n    ordering: (await sgsDataPyraminx()).ordering.slice(2),\n  };\n}\n\n// TODO: Reduce info.\nasync function uncachedSGSDataPyraminx(): Promise<SGSCachedData> {\n  return parseSGS(\n    await puzzles.pyraminx.kpuzzle(),\n    `SubgroupSizes 12 9 12 3 10 3 8 6 2 3 3 3 3\n\nAlg B\nAlg B'\nAlg y\nAlg B y\nAlg B' y\nAlg y'\nAlg B y'\nAlg B' y'\nAlg BR'\nAlg B BR'\nAlg B' BR'\n\nAlg L\nAlg L'\nAlg L F\nAlg L' F\nAlg F\nAlg L F'\nAlg L' F'\nAlg F'\n\nAlg L B' U L' B\nAlg L U L'\nAlg L U' L'\nAlg L U L' U'\nAlg B' U B\nAlg B' U' B\nAlg B' U' B U\nAlg L U' L' R\nAlg L U' L' R'\nAlg L' R' L\nAlg L' R' L R\n\nAlg R\nAlg R'\n\nAlg R' U R\nAlg R' U' R\nAlg R' U R U'\nAlg B U B'\nAlg B U' B'\nAlg R B' R' B\nAlg L R L' R U' R\nAlg R L R' L'\nAlg L' R' U R L\n\nAlg U\nAlg U'\n\nAlg R U R' U'\nAlg U R U' R'\nAlg L' U' L U\nAlg U' L' U L\nAlg U L R' L' R U'\nAlg U' R' L R L' U\nAlg L' U' L U' R U' R'\n\nAlg R U' R' U\nAlg L' U L U'\nAlg U' R U R'\nAlg U L' U' L\nAlg L R' L' R L' U L U'\n\nAlg L' U L U' L R' L' R\n\nAlg b\nAlg b'\n\nAlg l\nAlg l'\n\nAlg r\nAlg r'\n\nAlg u\nAlg u'`,\n  );\n}\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"4ZibM\"))).then(() => parcelRequire('fmfpV'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"j9e0w\"))).then(() => parcelRequire('8gzwY'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"982z8\"))).then(() => parcelRequire('5uIMt'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"2ubzY\"))).then(() => parcelRequire('kr0rh'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"9Ly1g\"))).then(() => parcelRequire('i4qI4'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1ft2x\"))).then(() => parcelRequire('cULK3'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"fOsgt\"))).then(() => parcelRequire('6ngpU'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"gGgdh\"))).then(() => parcelRequire('aKnuJ'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"bAg2p\"))).then(() => parcelRequire('2POcS'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"hCOO5\"))).then(() => parcelRequire('63BPl'));"],"names":["$33bd6d2faa325075$var$TrembleSolver","kpuzzle","sgs","trembleMoveNames","this","searchMoves","moveNames","forEach","moveName","rootMove","$98KNc","Move","amount","Error","transformation","identityTransformation","i","applyMove","isIdentityTransformation","push","move","modified","$33bd6d2faa325075$var$calculateMoves","Object","keys","definition","moves","state","stage1DepthLimit","quantumMoveOrder","experimentalToTransformation","bestAlg","bestLen","recur","recursiveTransformation","togo","sofar","searchMove","applyTransformation","concat","sgsAlg","sgsPhaseSolve","newAlg","simplify","collapseMoves","len","$cKpk8","countMoves","d","Alg","initialTransformation","bestLenSofar","algBuilder","AlgBuilder","step","ordering","cubieSeq","pieceOrdering","key","inverseTransformation","invert","length","loc","orbitName","idx","permutationIdx","transformationData","permutation","orientation","info","lookup","experimentalPushAlg","alg","experimentalNumUnits","i1","location","toAlg","$33bd6d2faa325075$var$randomStateFromSGS","randomChoice","$80rC8","randomChoiceFactory","sgsAction","values","toKState","$33bd6d2faa325075$var$cachedTrembleSolver","$33bd6d2faa325075$var$getCachedTrembleSolver","sgsCachedData","parcelRequire","cachedData222","$aKZ0D","puzzles","split","$33bd6d2faa325075$var$preInitialize222","$33bd6d2faa325075$var$solve222","$16ntq","mustBeInsideWorker","trembleSolver","solve","$33bd6d2faa325075$var$random222State","stateCopy","$lWjEw","KState","JSON","parse","stringify","startState","stateData","options","randomUIntBelow","randomUIntBelowFactory","randomPermute","pieces","orbitDef","orbits","ori","sum","numPieces","o","numOrientations","orientationSum","$33bd6d2faa325075$var$mutatingRandomizeOrbit","$33bd6d2faa325075$var$random222Scramble","$33bd6d2faa325075$var$randomSuffixes","$33bd6d2faa325075$var$cachedImport","$33bd6d2faa325075$var$dynamicScramble444","$33bd6d2faa325075$var$initialize444","initialize","$33bd6d2faa325075$var$random444Scramble","random444Scramble","$33bd6d2faa325075$var$random444OrientedScramble","addOrientationSuffix","$33bd6d2faa325075$var$axesFaces","$33bd6d2faa325075$var$axesMovesCache","Map","$33bd6d2faa325075$var$bigCubeRandomMoves","n","randomUintBelow","randomNumChoice","axesMoves","existing","get","faces","axisMoveFamilies","face","QuantumMove","set","$33bd6d2faa325075$var$cachedAxesMoves","cachedNumMoves","$33bd6d2faa325075$var$numMoves","currentAxisIdx","currentAxisQuantumMoves","Set","newAxisIdx","clear","quantumMove","quantumMoveStr","toString","has","add","$33bd6d2faa325075$var$randomSuffixes2","$33bd6d2faa325075$var$oriented555RandomMoves","$33bd6d2faa325075$var$randomFTOScramble","randomFTOScrambleString","$33bd6d2faa325075$var$randomKilominxScramble","getRandomKilominxScramble","$33bd6d2faa325075$var$randomMasterTetraminxScramble","randomMasterTetraminxScrambleString","$33bd6d2faa325075$var$cachedTrembleSolver2","$33bd6d2faa325075$var$solveMegaminx","json","cachedSGSDataMegaminx","$j4HdH","cachedMegaminxKPuzzleWithoutMO","$33bd6d2faa325075$var$getCachedTrembleSolver2","stateDataWithoutMO","CENTERS","Array","fill","stateWithoutMO","$33bd6d2faa325075$var$cachedTrembleSolver3","$33bd6d2faa325075$var$solvePyraminx","sgsDataPyraminx","pyraminx","$33bd6d2faa325075$var$getCachedTrembleSolver3","$33bd6d2faa325075$var$randomPyraminxScrambleFixedOrientation","$5uXsx","sgsDataPyraminxFixedOrientation","$33bd6d2faa325075$var$randomPyraminxStateFixedOrientation","$33bd6d2faa325075$var$randomRediCubeScramble","getRandomRediCubeScramble","$33bd6d2faa325075$var$cachedTrembleSolver4","$33bd6d2faa325075$var$solveSkewb","sgsDataSkewb","skewbKPuzzleWithoutMOCached","$33bd6d2faa325075$var$getCachedTrembleSolver4","CORNERS","$33bd6d2faa325075$var$resetCenterOrientation","family","$33bd6d2faa325075$var$randomSkewbFixedCornerScramble","$e6Yg9","sgsDataSkewbFixedCorner","$33bd6d2faa325075$var$randomSkewbFixedCornerState","$33bd6d2faa325075$var$cachedImport2","$33bd6d2faa325075$var$getRandomSquare1Scramble","fromString","getRandomSquare1ScrambleString","setIsInsideWorker","$33bd6d2faa325075$var$DEBUG_MEASURE_PERF","$33bd6d2faa325075$var$now","performance","Date","now","$33bd6d2faa325075$var$measurePerf","name","f","start","result","then","end","console","warn","Math","round","$33bd6d2faa325075$var$insideAPI","async","eventID","initialize333","randomScrambleForEvent","random333Scramble","random333FewestMovesScramble","random333OrientedScramble","bind","randomScrambleStringForEvent","solve333ToString","solve333","solve222ToString","solveSkewbToString","solvePyraminxToString","solveMegaminxToString","setDebugMeasurePerf","measure","$hj3SW","expose","$a4605e7c192fe69e$var$defCache","$a4605e7c192fe69e$export$eebc246658b4e2fb","pg","$wu2HC","getPuzzleGeometryByName","allMoves","addRotations","KPuzzle","getKPuzzleDefinition","experimentalPGNotation","PGNotation","getOrbitsDef","$a4605e7c192fe69e$var$skewbKPuzzleWithoutMO","$a4605e7c192fe69e$var$cachedData","$a4605e7c192fe69e$export$7954c66cf23882a6","$5QwIn","parseSGS","$a4605e7c192fe69e$var$uncachedSGSDataSkewb","$a4605e7c192fe69e$export$de5328f2e86695bd","slice","$441b2f864e60ccb1$export$e3025b784d062948","subgroupSizes","sgsActions","line","lineTokens","startsWith","substring","algToTransformation","j","parseInt","subgroupAlgOffsets","emptyAlg","identity","splice","processedPieces","orbitDefinition","j1","k","$de2fea9bcef64643$var$defCache","$de2fea9bcef64643$export$58d387020b4f6b80","$de2fea9bcef64643$var$megaminxKPuzzleWithoutMO","$de2fea9bcef64643$var$cachedData","$de2fea9bcef64643$export$431ba55cbfa90a2f","$de2fea9bcef64643$export$455bfb6648dd5d75","$400de07b1bb3e2f9$var$cachedData","$400de07b1bb3e2f9$export$9afa676efd55d04d","$400de07b1bb3e2f9$var$uncachedSGSDataPyraminx","$400de07b1bb3e2f9$export$b6ddeb0377ed5007","module","exports","import","resolve"],"version":3,"file":"search-worker-js-entry-A4VBA2ZD.b4572089.js.map"}