{"mappings":";;;;;;;;;;;;;;;;;;A;;;;;;A,qD;ACGA,IAAI,CAAA,GAAA,gBAAA,CAAA,CAAU,MAAA,EACX,AAAA,CAAA,UAAY;IACX,MAAM,wBAAN,CAAA;IAGA,MAAM,WAAA,GAAe,UAAA,CAAmB,WAAA,GACpC,UAAA,GACA,MAAM,CAAA,GAAA,uBAFV,CAAA,EAAA,AAAA;IAGA,WAAA,CAAY,WAAA,CAAY,iBAAxB,CAAA,CAAA;CAAwB,CAAA,EAAA,CAAA;AAIrB,IAAM,yCAAA,4EAAN,AAAA;;;;;;;;A;;;AEZP,IAAM,wCAAA,GACJ,OAAO,UAAA,CAAW,MAAA,KAAW,WAAA,IAC7B,OAAQ,UAAA,CAAmB,eAAA,KAAoB,WAFjD,AAAA;AAKA,IAAM,4CAAA,GAAyB,mBAA/B,AAAA;AACA,IAAM,8CAAA,GAA2B,IAAM,4CAAA,CAAuB,OAAA,OAAc,EAA5E,CAAA,AAAA;AAEA,eAAA,yCAAA,GAIE;IACA,MAAM,cAAE,UAAA,CAAA,EAAA,GAAe,MAAM,MAA7B,CAA6B,kBAAA,CACR,8CADQ,EAAA,CACR,CACnB,KADmB,EAAA,AAAA;IAErB,OAAO,CAAA,GAAA,2BAAA,CAAA,CAAa,UAApB,CAAA,CAAA;CAAoB;AAGf,SAAA,yCAAA,CAAgB,GAAA,EAAU;IAC/B,IAAI,wCAAA,EACD,AAAA,CAAA,UAAY;QACX,CAAA,GAAA,aAAA,CAAA,CAAc,GAAA,EAAK,MAAM,yCAAzB,EAAA,CAAA,CAAA;KAAyB,CAAA,EAAA,CAAA;SAG3B,CAAA,GAAA,aAAA,CAAA,CAAc,GAAd,CAAA,CAAA;CAAc;;;;;AC5BlB;;AAAA,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC;IAAC,OAAmB,IAAI,GAAG,gCAA4C,CAAC,OAAO,CAAC,CAAC;IAAE,OAAmB,IAAI,GAAG,gCAA4C,CAAC,OAAO,CAAC,CAAC;CAAC,CAAC,CAAC,IAAI,CAAC,IAAM,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC","sources":["node_modules/cubing/dist/esm/search-worker-ts-entry-IJRN7GQV.js","node_modules/cubing/src/cubing/search/inside/search-worker-ts-entry.ts","node_modules/cubing/dist/esm/chunk-ZPAGJE7S.js","node_modules/cubing/src/cubing/vendor/comlink-everywhere/inside/index.ts","node_modules/@parcel/runtime-js/lib/runtime-a3ff7cdab0b84625.js"],"sourcesContent":["import {\n  nodeEndpointPort\n} from \"./chunk-ZPAGJE7S.js\";\nimport {\n  exposeAPI\n} from \"./chunk-BEXHMXCT.js\";\nimport \"./chunk-GBMX6FHY.js\";\nimport \"./chunk-MGJA5U5O.js\";\n\n// src/cubing/search/inside/search-worker-ts-entry.ts\nif (exposeAPI.expose) {\n  (async () => {\n    await import(\"./search-worker-js-entry-32MQILEZ.js\");\n    const messagePort = globalThis.postMessage ? globalThis : await nodeEndpointPort();\n    messagePort.postMessage(\"comlink-exposed\");\n  })();\n}\nvar WORKER_ENTRY_FILE_URL = import.meta.url;\nexport {\n  WORKER_ENTRY_FILE_URL\n};\n//# sourceMappingURL=search-worker-ts-entry-IJRN7GQV.js.map\n","import { nodeEndpointPort } from \"../../vendor/comlink-everywhere/inside/index\";\nimport { exposeAPI } from \"./worker-guard\";\n\nif (exposeAPI.expose) {\n  (async () => {\n    await import(\"./search-worker-js-entry.js\");\n\n    // // Workaround for `node`\n    const messagePort = (globalThis as any).postMessage\n      ? globalThis\n      : await nodeEndpointPort();\n    messagePort.postMessage(\"comlink-exposed\");\n  })();\n}\n\nexport const WORKER_ENTRY_FILE_URL = import.meta.url;\n","import {\n  node_adapter_default\n} from \"./chunk-GBMX6FHY.js\";\n\n// src/cubing/vendor/comlink-everywhere/inside/index.ts\nimport { expose as comlinkExpose } from \"comlink\";\nvar useNodeWorkarounds = typeof globalThis.Worker === \"undefined\" && typeof globalThis.WorkerNavigator === \"undefined\";\nvar worker_threads_mangled = \"w-orker-_threa-ds\";\nvar worker_threads_unmangled = () => worker_threads_mangled.replace(/-/g, \"\");\nasync function nodeEndpointPort() {\n  const { parentPort } = await import(\n    /* @vite-ignore */\n    worker_threads_unmangled()\n  ).catch();\n  return node_adapter_default(parentPort);\n}\nfunction expose(api) {\n  if (useNodeWorkarounds) {\n    (async () => {\n      comlinkExpose(api, await nodeEndpointPort());\n    })();\n  } else {\n    comlinkExpose(api);\n  }\n}\n\nexport {\n  nodeEndpointPort,\n  expose\n};\n//# sourceMappingURL=chunk-ZPAGJE7S.js.map\n","import { expose as comlinkExpose } from \"comlink\";\nimport nodeEndpoint from \"../node-adapter\";\n\nconst useNodeWorkarounds =\n  typeof globalThis.Worker === \"undefined\" &&\n  typeof (globalThis as any).WorkerNavigator === \"undefined\";\n\n// Mangled so that bundlers don't try to inline the source.\nconst worker_threads_mangled = \"w-orker-_threa-ds\";\nconst worker_threads_unmangled = () => worker_threads_mangled.replace(/-/g, \"\");\n\nexport async function nodeEndpointPort(): Promise<\n  Worker & {\n    nodeWorker?: import(\"worker_threads\").Worker;\n  }\n> {\n  const { parentPort } = await import(\n    /* @vite-ignore */ worker_threads_unmangled()\n  ).catch();\n  return nodeEndpoint(parentPort);\n}\n\nexport function expose(api: any) {\n  if (useNodeWorkarounds) {\n    (async () => {\n      comlinkExpose(api, await nodeEndpointPort());\n    })();\n  } else {\n    comlinkExpose(api);\n  }\n}\n","module.exports = Promise.all([__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1HNOs\")), __parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"eh8D2\"))]).then(() => parcelRequire('3iw40'));"],"names":[],"version":3,"file":"search-worker-ts-entry-IJRN7GQV.c5e21e0d.js.map"}