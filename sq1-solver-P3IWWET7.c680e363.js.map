{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-90df7a84d2656d74.js","node_modules/cubing/dist/esm/sq1-solver-P3IWWET7.js","node_modules/cubing/src/cubing/vendor/sq12phase/sq1-solver.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"54523143c680e363\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}",null,"/*\n\nscramble_sq1.js\n\nSquare-1 Solver / Scramble Generator in JavaScript.\n\nCode by by Shuang Chen.\nCompiled to JavaScript using GWT.\n\n*/\n\nimport { randomUIntBelowFactory } from \"../random-uint-below\";\n\nfunction FullCube_copy(obj, c) {\n  obj.ul = c.ul;\n  obj.ur = c.ur;\n  obj.dl = c.dl;\n  obj.dr = c.dr;\n  obj.ml = c.ml;\n}\n\nfunction FullCube_doMove(obj, move) {\n  var temp;\n  move <<= 2;\n  if (move > 24) {\n    move = 48 - move;\n    temp = obj.ul;\n    obj.ul = ((~~obj.ul >> move) | (obj.ur << (24 - move))) & 16777215;\n    obj.ur = ((~~obj.ur >> move) | (temp << (24 - move))) & 16777215;\n  } else if (move > 0) {\n    temp = obj.ul;\n    obj.ul = ((obj.ul << move) | (~~obj.ur >> (24 - move))) & 16777215;\n    obj.ur = ((obj.ur << move) | (~~temp >> (24 - move))) & 16777215;\n  } else if (move == 0) {\n    temp = obj.ur;\n    obj.ur = obj.dl;\n    obj.dl = temp;\n    obj.ml = 1 - obj.ml;\n  } else if (move >= -24) {\n    move = -move;\n    temp = obj.dl;\n    obj.dl = ((obj.dl << move) | (~~obj.dr >> (24 - move))) & 16777215;\n    obj.dr = ((obj.dr << move) | (~~temp >> (24 - move))) & 16777215;\n  } else if (move < -24) {\n    move = 48 + move;\n    temp = obj.dl;\n    obj.dl = ((~~obj.dl >> move) | (obj.dr << (24 - move))) & 16777215;\n    obj.dr = ((~~obj.dr >> move) | (temp << (24 - move))) & 16777215;\n  }\n}\n\nfunction FullCube_getParity(obj) {\n  var a, b, cnt, i, p;\n  cnt = 0;\n  obj.arr[0] = FullCube_pieceAt(obj, 0);\n  for (i = 1; i < 24; ++i) {\n    FullCube_pieceAt(obj, i) != obj.arr[cnt] &&\n      (obj.arr[++cnt] = FullCube_pieceAt(obj, i));\n  }\n  p = 0;\n  for (a = 0; a < 16; ++a) {\n    for (b = a + 1; b < 16; ++b) {\n      obj.arr[a] > obj.arr[b] && (p ^= 1);\n    }\n  }\n  return p;\n}\n\nfunction FullCube_getShapeIdx(obj) {\n  var dlx, drx, ulx, urx;\n  urx = obj.ur & 1118481;\n  urx |= ~~urx >> 3;\n  urx |= ~~urx >> 6;\n  urx = (urx & 15) | ((~~urx >> 12) & 48);\n  ulx = obj.ul & 1118481;\n  ulx |= ~~ulx >> 3;\n  ulx |= ~~ulx >> 6;\n  ulx = (ulx & 15) | ((~~ulx >> 12) & 48);\n  drx = obj.dr & 1118481;\n  drx |= ~~drx >> 3;\n  drx |= ~~drx >> 6;\n  drx = (drx & 15) | ((~~drx >> 12) & 48);\n  dlx = obj.dl & 1118481;\n  dlx |= ~~dlx >> 3;\n  dlx |= ~~dlx >> 6;\n  dlx = (dlx & 15) | ((~~dlx >> 12) & 48);\n  return Shape_getShape2Idx(\n    (FullCube_getParity(obj) << 24) |\n      (ulx << 18) |\n      (urx << 12) |\n      (dlx << 6) |\n      drx,\n  );\n}\n\nfunction FullCube_getSquare(obj, sq) {\n  var a, b;\n  for (a = 0; a < 8; ++a) {\n    obj.prm[a] = ~~((~~FullCube_pieceAt(obj, a * 3 + 1) >> 1) << 24) >> 24;\n  }\n  sq.cornperm = get8Perm(obj.prm);\n  sq.topEdgeFirst = FullCube_pieceAt(obj, 0) == FullCube_pieceAt(obj, 1);\n  a = sq.topEdgeFirst ? 2 : 0;\n  for (b = 0; b < 4; a += 3, ++b)\n    obj.prm[b] = ~~((~~FullCube_pieceAt(obj, a) >> 1) << 24) >> 24;\n  sq.botEdgeFirst = FullCube_pieceAt(obj, 12) == FullCube_pieceAt(obj, 13);\n  a = sq.botEdgeFirst ? 14 : 12;\n  for (; b < 8; a += 3, ++b)\n    obj.prm[b] = ~~((~~FullCube_pieceAt(obj, a) >> 1) << 24) >> 24;\n  sq.edgeperm = get8Perm(obj.prm);\n  sq.ml = obj.ml;\n}\n\nfunction FullCube_pieceAt(obj, idx) {\n  var ret;\n  idx < 6\n    ? (ret = ~~obj.ul >> ((5 - idx) << 2))\n    : idx < 12\n    ? (ret = ~~obj.ur >> ((11 - idx) << 2))\n    : idx < 18\n    ? (ret = ~~obj.dl >> ((17 - idx) << 2))\n    : (ret = ~~obj.dr >> ((23 - idx) << 2));\n  return ~~((ret & 15) << 24) >> 24;\n}\n\nfunction FullCube_setPiece(obj, idx, value) {\n  if (idx < 6) {\n    obj.ul &= ~(0xf << ((5 - idx) << 2));\n    obj.ul |= value << ((5 - idx) << 2);\n  } else if (idx < 12) {\n    obj.ur &= ~(0xf << ((11 - idx) << 2));\n    obj.ur |= value << ((11 - idx) << 2);\n  } else if (idx < 18) {\n    obj.dl &= ~(0xf << ((17 - idx) << 2));\n    obj.dl |= value << ((17 - idx) << 2);\n  } else {\n    obj.dr &= ~(0xf << ((23 - idx) << 2));\n    obj.dr |= value << ((23 - idx) << 2);\n  }\n}\n\nfunction FullCube_FullCube__Ljava_lang_String_2V() {\n  this.arr = [];\n  this.prm = [];\n}\n\nasync function FullCube_randomCube() {\n  const randomUintBelow = await randomUIntBelowFactory();\n\n  var f, i, shape, edge, corner, n_edge, n_corner, rnd, m;\n  f = new FullCube_FullCube__Ljava_lang_String_2V();\n  shape = Shape_ShapeIdx[randomUintBelow(3678)];\n  corner = (0x01234567 << 1) | 0x11111111;\n  edge = 0x01234567 << 1;\n  n_corner = n_edge = 8;\n  for (i = 0; i < 24; i++) {\n    if (((shape >> i) & 1) == 0) {\n      //edge\n      rnd = randomUintBelow(n_edge) << 2;\n      FullCube_setPiece(f, 23 - i, (edge >> rnd) & 0xf);\n      m = (1 << rnd) - 1;\n      edge = (edge & m) + ((edge >> 4) & ~m);\n      --n_edge;\n    } else {\n      //corner\n      rnd = randomUintBelow(n_corner) << 2;\n      FullCube_setPiece(f, 23 - i, (corner >> rnd) & 0xf);\n      FullCube_setPiece(f, 22 - i, (corner >> rnd) & 0xf);\n      m = (1 << rnd) - 1;\n      corner = (corner & m) + ((corner >> 4) & ~m);\n      --n_corner;\n      ++i;\n    }\n  }\n  f.ml = randomUintBelow(2);\n  //\tconsole.log(f);\n  return f;\n}\n\nfunction FullCube() {}\n\nlet _ = (FullCube_FullCube__Ljava_lang_String_2V.prototype =\n  FullCube.prototype);\n_.dl = 10062778;\n_.dr = 14536702;\n_.ml = 0;\n_.ul = 70195;\n_.ur = 4544119;\nfunction Search_init2(obj) {\n  var corner, edge, i, j, ml, prun;\n  FullCube_copy(obj.Search_d, obj.Search_c);\n  for (i = 0; i < obj.Search_length1; ++i) {\n    FullCube_doMove(obj.Search_d, obj.Search_move[i]);\n  }\n  FullCube_getSquare(obj.Search_d, obj.Search_sq);\n  edge = obj.Search_sq.edgeperm;\n  corner = obj.Search_sq.cornperm;\n  ml = obj.Search_sq.ml;\n  prun = Math.max(\n    SquarePrun[(obj.Search_sq.edgeperm << 1) | ml],\n    SquarePrun[(obj.Search_sq.cornperm << 1) | ml],\n  );\n  for (i = prun; i < obj.Search_maxlen2; ++i) {\n    if (\n      Search_phase2(\n        obj,\n        edge,\n        corner,\n        obj.Search_sq.topEdgeFirst,\n        obj.Search_sq.botEdgeFirst,\n        ml,\n        i,\n        obj.Search_length1,\n        0,\n      )\n    ) {\n      for (j = 0; j < i; ++j) {\n        FullCube_doMove(obj.Search_d, obj.Search_move[obj.Search_length1 + j]);\n        //console.log(obj.Search_move[obj.Search_length1 + j]);\n      }\n      //console.log(obj.Search_d);\n      //console.log(obj.Search_move);\n      obj.Search_sol_string = Search_move2string(obj, i + obj.Search_length1);\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction Search_move2string(obj, len) {\n  var s = \"\";\n  var top = 0,\n    bottom = 0;\n  for (var i = len - 1; i >= 0; i--) {\n    var val = obj.Search_move[i];\n    //console.log(val);\n    if (val > 0) {\n      val = 12 - val;\n      top = val > 6 ? val - 12 : val;\n    } else if (val < 0) {\n      val = 12 + val;\n      bottom = val > 6 ? val - 12 : val;\n    } else {\n      if (top == 0 && bottom == 0) {\n        s += \" / \";\n      } else {\n        s += \"(\" + top + \", \" + bottom + \") / \";\n      }\n      top = bottom = 0;\n    }\n  }\n  if (top !== 0 || bottom !== 0) {\n    s += \"(\" + top + \", \" + bottom + \")\";\n  }\n  return s; // + \" (\" + len + \"t)\";\n}\n\nfunction Search_phase1(obj, shape, prunvalue, maxl, depth, lm) {\n  var m, prunx, shapex;\n  if (prunvalue == 0 && maxl < 4) {\n    return maxl == 0 && Search_init2(obj);\n  }\n  if (lm != 0) {\n    shapex = Shape_TwistMove[shape];\n    prunx = ShapePrun[shapex];\n    if (prunx < maxl) {\n      obj.Search_move[depth] = 0;\n      if (Search_phase1(obj, shapex, prunx, maxl - 1, depth + 1, 0)) {\n        return true;\n      }\n    }\n  }\n  shapex = shape;\n  if (lm <= 0) {\n    m = 0;\n    for (;;) {\n      m += Shape_TopMove[shapex];\n      shapex = ~~m >> 4;\n      m &= 15;\n      if (m >= 12) {\n        break;\n      }\n      prunx = ShapePrun[shapex];\n      if (prunx > maxl) {\n        break;\n      } else if (prunx < maxl) {\n        obj.Search_move[depth] = m;\n        if (Search_phase1(obj, shapex, prunx, maxl - 1, depth + 1, 1)) {\n          return true;\n        }\n      }\n    }\n  }\n  shapex = shape;\n  if (lm <= 1) {\n    m = 0;\n    for (;;) {\n      m += Shape_BottomMove[shapex];\n      shapex = ~~m >> 4;\n      m &= 15;\n      if (m >= 6) {\n        break;\n      }\n      prunx = ShapePrun[shapex];\n      if (prunx > maxl) {\n        break;\n      } else if (prunx < maxl) {\n        obj.Search_move[depth] = -m;\n        if (Search_phase1(obj, shapex, prunx, maxl - 1, depth + 1, 2)) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\nfunction Search_phase2(\n  obj,\n  edge,\n  corner,\n  topEdgeFirst,\n  botEdgeFirst,\n  ml,\n  maxl,\n  depth,\n  lm,\n) {\n  var botEdgeFirstx, cornerx, edgex, m, prun1, prun2, topEdgeFirstx;\n  if (maxl == 0 && !topEdgeFirst && botEdgeFirst) {\n    return true;\n  }\n  if (lm != 0 && topEdgeFirst == botEdgeFirst) {\n    edgex = Square_TwistMove[edge];\n    cornerx = Square_TwistMove[corner];\n    if (\n      SquarePrun[(edgex << 1) | (1 - ml)] < maxl &&\n      SquarePrun[(cornerx << 1) | (1 - ml)] < maxl\n    ) {\n      obj.Search_move[depth] = 0;\n      if (\n        Search_phase2(\n          obj,\n          edgex,\n          cornerx,\n          topEdgeFirst,\n          botEdgeFirst,\n          1 - ml,\n          maxl - 1,\n          depth + 1,\n          0,\n        )\n      ) {\n        return true;\n      }\n    }\n  }\n  if (lm <= 0) {\n    topEdgeFirstx = !topEdgeFirst;\n    edgex = topEdgeFirstx ? Square_TopMove[edge] : edge;\n    cornerx = topEdgeFirstx ? corner : Square_TopMove[corner];\n    m = topEdgeFirstx ? 1 : 2;\n    prun1 = SquarePrun[(edgex << 1) | ml];\n    prun2 = SquarePrun[(cornerx << 1) | ml];\n    while (m < 12 && prun1 <= maxl && prun1 <= maxl) {\n      if (prun1 < maxl && prun2 < maxl) {\n        obj.Search_move[depth] = m;\n        if (\n          Search_phase2(\n            obj,\n            edgex,\n            cornerx,\n            topEdgeFirstx,\n            botEdgeFirst,\n            ml,\n            maxl - 1,\n            depth + 1,\n            1,\n          )\n        ) {\n          return true;\n        }\n      }\n      topEdgeFirstx = !topEdgeFirstx;\n      if (topEdgeFirstx) {\n        edgex = Square_TopMove[edgex];\n        prun1 = SquarePrun[(edgex << 1) | ml];\n        m += 1;\n      } else {\n        cornerx = Square_TopMove[cornerx];\n        prun2 = SquarePrun[(cornerx << 1) | ml];\n        m += 2;\n      }\n    }\n  }\n  if (lm <= 1) {\n    botEdgeFirstx = !botEdgeFirst;\n    edgex = botEdgeFirstx ? Square_BottomMove[edge] : edge;\n    cornerx = botEdgeFirstx ? corner : Square_BottomMove[corner];\n    m = botEdgeFirstx ? 1 : 2;\n    prun1 = SquarePrun[(edgex << 1) | ml];\n    prun2 = SquarePrun[(cornerx << 1) | ml];\n    while (m < (maxl > 3 ? 6 : 12) && prun1 <= maxl && prun1 <= maxl) {\n      if (prun1 < maxl && prun2 < maxl) {\n        obj.Search_move[depth] = -m;\n        if (\n          Search_phase2(\n            obj,\n            edgex,\n            cornerx,\n            topEdgeFirst,\n            botEdgeFirstx,\n            ml,\n            maxl - 1,\n            depth + 1,\n            2,\n          )\n        ) {\n          return true;\n        }\n      }\n      botEdgeFirstx = !botEdgeFirstx;\n      if (botEdgeFirstx) {\n        edgex = Square_BottomMove[edgex];\n        prun1 = SquarePrun[(edgex << 1) | ml];\n        m += 1;\n      } else {\n        cornerx = Square_BottomMove[cornerx];\n        prun2 = SquarePrun[(cornerx << 1) | ml];\n        m += 2;\n      }\n    }\n  }\n  return false;\n}\n\nfunction Search_solution(obj, c) {\n  var shape;\n  obj.Search_c = c;\n  shape = FullCube_getShapeIdx(c);\n  //console.log(shape);\n  for (\n    obj.Search_length1 = ShapePrun[shape];\n    obj.Search_length1 < 100;\n    ++obj.Search_length1\n  ) {\n    //console.log(obj.Search_length1);\n    obj.Search_maxlen2 = Math.min(31 - obj.Search_length1, 17);\n    if (\n      Search_phase1(obj, shape, ShapePrun[shape], obj.Search_length1, 0, -1)\n    ) {\n      break;\n    }\n  }\n  return obj.Search_sol_string;\n}\n\nfunction Search_Search() {\n  this.Search_move = [];\n  this.Search_d = new FullCube_FullCube__Ljava_lang_String_2V();\n  this.Search_sq = new Square_Square();\n}\n\nfunction Search() {}\n\n_ = Search_Search.prototype = Search.prototype;\n_.Search_c = null;\n_.Search_length1 = 0;\n_.Search_maxlen2 = 0;\n_.Search_sol_string = null;\nlet Shape_$clinit_ran = false;\nfunction Shape_$clinit() {\n  if (Shape_$clinit_ran) {\n    return;\n  }\n  Shape_$clinit_ran = true;\n  Shape_halflayer = [0, 3, 6, 12, 15, 24, 27, 30, 48, 51, 54, 60, 63];\n  Shape_ShapeIdx = [];\n  ShapePrun = [];\n  Shape_TopMove = [];\n  Shape_BottomMove = [];\n  Shape_TwistMove = [];\n  Shape_init();\n}\n\nfunction Shape_bottomMove(obj) {\n  var move, moveParity;\n  move = 0;\n  moveParity = 0;\n  do {\n    if ((obj.bottom & 2048) == 0) {\n      move += 1;\n      obj.bottom = obj.bottom << 1;\n    } else {\n      move += 2;\n      obj.bottom = (obj.bottom << 2) ^ 12291;\n    }\n    moveParity = 1 - moveParity;\n  } while ((bitCount(obj.bottom & 63) & 1) != 0);\n  (bitCount(obj.bottom) & 2) == 0 && (obj.Shape_parity ^= moveParity);\n  return move;\n}\n\nfunction Shape_getIdx(obj) {\n  var ret;\n  ret =\n    (binarySearch(Shape_ShapeIdx, (obj.top << 12) | obj.bottom) << 1) |\n    obj.Shape_parity;\n  return ret;\n}\n\nfunction Shape_setIdx(obj, idx) {\n  obj.Shape_parity = idx & 1;\n  obj.top = Shape_ShapeIdx[~~idx >> 1];\n  obj.bottom = obj.top & 4095;\n  obj.top >>= 12;\n}\n\nfunction Shape_topMove(obj) {\n  var move, moveParity;\n  move = 0;\n  moveParity = 0;\n  do {\n    if ((obj.top & 2048) == 0) {\n      move += 1;\n      obj.top = obj.top << 1;\n    } else {\n      move += 2;\n      obj.top = (obj.top << 2) ^ 12291;\n    }\n    moveParity = 1 - moveParity;\n  } while ((bitCount(obj.top & 63) & 1) != 0);\n  (bitCount(obj.top) & 2) == 0 && (obj.Shape_parity ^= moveParity);\n  return move;\n}\n\nfunction Shape_Shape() {}\n\nfunction Shape_getShape2Idx(shp) {\n  var ret;\n  ret = (binarySearch(Shape_ShapeIdx, shp & 16777215) << 1) | (~~shp >> 24);\n  return ret;\n}\n\nfunction Shape_init() {\n  var count,\n    depth,\n    dl,\n    done,\n    done0,\n    dr,\n    i,\n    idx,\n    m,\n    s,\n    ul,\n    ur,\n    value,\n    p1,\n    p3,\n    temp;\n  count = 0;\n  for (i = 0; i < 28561; ++i) {\n    dr = Shape_halflayer[i % 13];\n    dl = Shape_halflayer[~~(i / 13) % 13];\n    ur = Shape_halflayer[~~(~~(i / 13) / 13) % 13];\n    ul = Shape_halflayer[~~(~~(~~(i / 13) / 13) / 13)];\n    value = (ul << 18) | (ur << 12) | (dl << 6) | dr;\n    bitCount(value) == 16 && (Shape_ShapeIdx[count++] = value);\n  }\n  s = new Shape_Shape();\n  for (i = 0; i < 7356; ++i) {\n    Shape_setIdx(s, i);\n    Shape_TopMove[i] = Shape_topMove(s);\n    Shape_TopMove[i] |= Shape_getIdx(s) << 4;\n    Shape_setIdx(s, i);\n    Shape_BottomMove[i] = Shape_bottomMove(s);\n    Shape_BottomMove[i] |= Shape_getIdx(s) << 4;\n    Shape_setIdx(s, i);\n    temp = s.top & 63;\n    p1 = bitCount(temp);\n    p3 = bitCount(s.bottom & 4032);\n    s.Shape_parity ^= 1 & (~~(p1 & p3) >> 1);\n    s.top = (s.top & 4032) | ((~~s.bottom >> 6) & 63);\n    s.bottom = (s.bottom & 63) | (temp << 6);\n    Shape_TwistMove[i] = Shape_getIdx(s);\n  }\n  for (i = 0; i < 7536; ++i) {\n    ShapePrun[i] = -1;\n  }\n  ShapePrun[Shape_getShape2Idx(14378715)] = 0;\n  ShapePrun[Shape_getShape2Idx(31157686)] = 0;\n  ShapePrun[Shape_getShape2Idx(23967451)] = 0;\n  ShapePrun[Shape_getShape2Idx(7191990)] = 0;\n  done = 4;\n  done0 = 0;\n  depth = -1;\n  while (done != done0) {\n    done0 = done;\n    ++depth;\n    for (i = 0; i < 7536; ++i) {\n      if (ShapePrun[i] == depth) {\n        m = 0;\n        idx = i;\n        do {\n          idx = Shape_TopMove[idx];\n          m += idx & 15;\n          idx >>= 4;\n          if (ShapePrun[idx] == -1) {\n            ++done;\n            ShapePrun[idx] = depth + 1;\n          }\n        } while (m != 12);\n        m = 0;\n        idx = i;\n        do {\n          idx = Shape_BottomMove[idx];\n          m += idx & 15;\n          idx >>= 4;\n          if (ShapePrun[idx] == -1) {\n            ++done;\n            ShapePrun[idx] = depth + 1;\n          }\n        } while (m != 12);\n        idx = Shape_TwistMove[i];\n        if (ShapePrun[idx] == -1) {\n          ++done;\n          ShapePrun[idx] = depth + 1;\n        }\n      }\n    }\n  }\n}\n\nfunction Shape() {}\n\n_ = Shape_Shape.prototype = Shape.prototype;\n_.bottom = 0;\n_.Shape_parity = 0;\n_.top = 0;\nvar Shape_BottomMove,\n  Shape_ShapeIdx,\n  ShapePrun,\n  Shape_TopMove,\n  Shape_TwistMove,\n  Shape_halflayer;\nlet Square_$clinit_ran = false;\nfunction Square_$clinit() {\n  if (Square_$clinit_ran) {\n    return;\n  }\n  Square_$clinit_ran = true;\n  SquarePrun = [];\n  Square_TwistMove = [];\n  Square_TopMove = [];\n  Square_BottomMove = [];\n  fact = [1, 1, 2, 6, 24, 120, 720, 5040];\n  Cnk = [];\n  for (var i = 0; i < 12; ++i) Cnk[i] = [];\n  Square_init();\n}\n\nfunction Square_Square() {}\n\nfunction get8Perm(arr) {\n  var i, idx, v, val;\n  idx = 0;\n  val = 1985229328;\n  for (i = 0; i < 7; ++i) {\n    v = arr[i] << 2;\n    idx = (8 - i) * idx + ((~~val >> v) & 7);\n    val -= 286331152 << v;\n  }\n  return idx & 65535;\n}\n\nfunction Square_init() {\n  var check, depth, done, find, i, idx, idxx, inv, j, m, ml, pos, temp;\n  for (i = 0; i < 12; ++i) {\n    Cnk[i][0] = 1;\n    Cnk[i][i] = 1;\n    for (j = 1; j < i; ++j) {\n      Cnk[i][j] = Cnk[i - 1][j - 1] + Cnk[i - 1][j];\n    }\n  }\n  pos = [];\n  for (i = 0; i < 40320; ++i) {\n    set8Perm(pos, i);\n    temp = pos[2];\n    pos[2] = pos[4];\n    pos[4] = temp;\n    temp = pos[3];\n    pos[3] = pos[5];\n    pos[5] = temp;\n    Square_TwistMove[i] = get8Perm(pos);\n    set8Perm(pos, i);\n    temp = pos[0];\n    pos[0] = pos[1];\n    pos[1] = pos[2];\n    pos[2] = pos[3];\n    pos[3] = temp;\n    Square_TopMove[i] = get8Perm(pos);\n    set8Perm(pos, i);\n    temp = pos[4];\n    pos[4] = pos[5];\n    pos[5] = pos[6];\n    pos[6] = pos[7];\n    pos[7] = temp;\n    Square_BottomMove[i] = get8Perm(pos);\n  }\n  for (i = 0; i < 80640; ++i) {\n    SquarePrun[i] = -1;\n  }\n  SquarePrun[0] = 0;\n  depth = 0;\n  done = 1;\n  while (done < 80640) {\n    // console.log(done);\n    inv = depth >= 11;\n    find = inv ? -1 : depth;\n    check = inv ? depth : -1;\n    ++depth;\n    OUT: for (i = 0; i < 80640; ++i) {\n      if (SquarePrun[i] == find) {\n        idx = ~~i >> 1;\n        ml = i & 1;\n        idxx = (Square_TwistMove[idx] << 1) | (1 - ml);\n        if (SquarePrun[idxx] == check) {\n          ++done;\n          SquarePrun[inv ? i : idxx] = ~~(depth << 24) >> 24;\n          if (inv) continue OUT;\n        }\n        idxx = idx;\n        for (m = 0; m < 4; ++m) {\n          idxx = Square_TopMove[idxx];\n          if (SquarePrun[(idxx << 1) | ml] == check) {\n            ++done;\n            SquarePrun[inv ? i : (idxx << 1) | ml] = ~~(depth << 24) >> 24;\n            if (inv) continue OUT;\n          }\n        }\n        for (m = 0; m < 4; ++m) {\n          idxx = Square_BottomMove[idxx];\n          if (SquarePrun[(idxx << 1) | ml] == check) {\n            ++done;\n            SquarePrun[inv ? i : (idxx << 1) | ml] = ~~(depth << 24) >> 24;\n            if (inv) continue OUT;\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction set8Perm(arr, idx) {\n  var i, m, p, v, val;\n  val = 1985229328;\n  for (i = 0; i < 7; ++i) {\n    p = fact[7 - i];\n    v = ~~(idx / p);\n    idx -= v * p;\n    v <<= 2;\n    arr[i] = ~~(((~~val >> v) & 7) << 24) >> 24;\n    m = (1 << v) - 1;\n    val = (val & m) + ((~~val >> 4) & ~m);\n  }\n  arr[7] = ~~(val << 24) >> 24;\n}\n\nfunction Square() {}\n\n_ = Square_Square.prototype = Square.prototype;\n_.botEdgeFirst = false;\n_.cornperm = 0;\n_.edgeperm = 0;\n_.ml = 0;\n_.topEdgeFirst = false;\nvar Square_BottomMove, Cnk, SquarePrun, Square_TopMove, Square_TwistMove, fact;\n\nfunction bitCount(x) {\n  x -= (~~x >> 1) & 1431655765;\n  x = ((~~x >> 2) & 858993459) + (x & 858993459);\n  x = ((~~x >> 4) + x) & 252645135;\n  x += ~~x >> 8;\n  x += ~~x >> 16;\n  return x & 63;\n}\n\nfunction binarySearch(sortedArray, key) {\n  var high, low, mid, midVal;\n  low = 0;\n  high = sortedArray.length - 1;\n  while (low <= high) {\n    mid = low + (~~(high - low) >> 1);\n    midVal = sortedArray[mid];\n    if (midVal < key) {\n      low = mid + 1;\n    } else if (midVal > key) {\n      high = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n  return -low - 1;\n}\n\n/*\n * Some helper functions.\n */\n\nvar square1Solver_initialized = false;\n\nvar square1SolverInitialize = function (doneCallback, _, statusCallback) {\n  if (!square1Solver_initialized) {\n    Shape_$clinit();\n    Square_$clinit();\n  }\n\n  if (statusCallback) {\n    statusCallback(\"Done initializing Square-1.\");\n  }\n\n  square1Solver_initialized = true;\n  if (doneCallback != null) {\n    doneCallback();\n  }\n};\n\nvar square1SolverGetRandomPosition = async function () {\n  if (!square1Solver_initialized) {\n    square1SolverInitialize();\n  }\n  return FullCube_randomCube();\n};\n\nvar square1SolverGenerate = function (state) {\n  var search_search = new Search_Search(); // Can this be factored out?\n  return Search_solution(search_search, state);\n};\n\nvar square1SolverGetRandomScramble = async function () {\n  var randomState = await square1SolverGetRandomPosition();\n  var scrambleString = square1SolverGenerate(randomState);\n\n  return {\n    state: randomState,\n    scramble_string: scrambleString,\n  };\n};\n\nexport async function getRandomSquare1ScrambleString() {\n  return (await square1SolverGetRandomScramble()).scramble_string;\n}\n"],"names":[],"version":3,"file":"sq1-solver-P3IWWET7.c680e363.js.map","sourceRoot":"/__parcel_source_root/"}