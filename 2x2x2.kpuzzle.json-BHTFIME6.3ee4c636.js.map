{"mappings":";;;;;;;;;;;;;;;;;A;A,iE;ACEO,IAAM,yCAAA,GAAgD;IAC3D,IAAA,EAAM,OADqD;IAE3D,MAAA,EAAQ;QACN,OAAA,EAAS;YAAE,SAAA,EAAW,CAAA;YAAG,eAAA,EAAiB,CADpC;SAAA;KACoC;IAE5C,cAAA,EAAgB;QACd,OAAA,EAAS;YACP,MAAA,EAAQ;AAAC,iBAAA;AAAG,iBAAA;AAAG,iBAAA;AAAG,iBAAA;AAAG,iBAAA;AAAG,iBAAA;AAAG,iBAAA;AAAG,iBADvB;aAAA;YAEP,WAAA,EAAa;AAAC,iBAAA;AAAG,iBAAA;AAAG,iBAAA;AAAG,iBAAA;AAAG,iBAAA;AAAG,iBAAA;AAAG,iBAAA;AAAG,iBADL;aAAA;SACK;KAAA;IAGvC,KAAA,EAAO;QACL,CAAA,EAAG;YACD,OAAA,EAAS;gBACP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAD5B;iBAAA;gBAEP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBADA;iBAAA;aACA;SAAA;QAGvC,CAAA,EAAG;YACD,OAAA,EAAS;gBACP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAD5B;iBAAA;gBAEP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBADA;iBAAA;aACA;SAAA;QAGvC,CAAA,EAAG;YACD,OAAA,EAAS;gBACP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAD5B;iBAAA;gBAEP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBADA;iBAAA;aACA;SAAA;QAGvC,CAAA,EAAG;YACD,OAAA,EAAS;gBACP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAD5B;iBAAA;gBAEP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBADA;iBAAA;aACA;SAAA;QAGvC,CAAA,EAAG;YACD,OAAA,EAAS;gBACP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAD5B;iBAAA;gBAEP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBADA;iBAAA;aACA;SAAA;QAGvC,CAAA,EAAG;YACD,OAAA,EAAS;gBACP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAD5B;iBAAA;gBAEP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBADA;iBAAA;aACA;SAAA;QAGvC,CAAA,EAAG;YACD,OAAA,EAAS;gBACP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAD5B;iBAAA;gBAEP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBADA;iBAAA;aACA;SAAA;QAGvC,CAAA,EAAG;YACD,OAAA,EAAS;gBACP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAD5B;iBAAA;gBAEP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBADA;iBAAA;aACA;SAAA;QAGvC,CAAA,EAAG;YACD,OAAA,EAAS;gBACP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAD5B;iBAAA;gBAEP,WAAA,EAAa;AAAC,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBAAA;AAAG,qBADA;iBAAA;aACA;SAAA;KAAA;CAAA,AAAA;AAM3C,yCAAA,CAA2B,KAAA,CAAM,IAAA,CAAA,GAAQ,yCAAA,CAA2B,KAAA,CAAM,GAA1E,CAAA,CAAA;AACA,yCAAA,CAA2B,KAAA,CAAM,IAAA,CAAA,GAAQ,yCAAA,CAA2B,KAAA,CAAM,GAA1E,CAAA,CAAA;AACA,yCAAA,CAA2B,KAAA,CAAM,IAAA,CAAA,GAAQ,yCAAA,CAA2B,KAAA,CAAM,GAA1E,CAAA,CAAA;AACA,yCAAA,CAA2B,KAAA,CAAM,IAAA,CAAA,GAAQ;IACvC,OAAA,EAAS;QACP,WAAA,EAAa;AAAC,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAD5B;SAAA;QAEP,WAAA,EAAa;AAAC,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aADA;SAAA;KACA;CAAA,CAAA;AAGvC,yCAAA,CAA2B,KAAA,CAAM,IAAA,CAAA,GAAQ;IACvC,OAAA,EAAS;QACP,WAAA,EAAa;AAAC,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAD5B;SAAA;QAEP,WAAA,EAAa;AAAC,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aADA;SAAA;KACA;CAAA,CAAA;AAGvC,yCAAA,CAA2B,KAAA,CAAM,IAAA,CAAA,GAAQ;IACvC,OAAA,EAAS;QACP,WAAA,EAAa;AAAC,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAD5B;SAAA;QAEP,WAAA,EAAa;AAAC,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aAAA;AAAG,aADA;SAAA;KACA;CAAA,CAAA","sources":["node_modules/cubing/dist/esm/2x2x2.kpuzzle.json-BHTFIME6.js","node_modules/cubing/src/cubing/puzzles/implementations/2x2x2/2x2x2.kpuzzle.json.ts"],"sourcesContent":["import \"./chunk-MGJA5U5O.js\";\n\n// src/cubing/puzzles/implementations/2x2x2/2x2x2.kpuzzle.json.ts\nvar cube2x2x2KPuzzleDefinition = {\n  name: \"2x2x2\",\n  orbits: {\n    CORNERS: { numPieces: 8, numOrientations: 3 }\n  },\n  startStateData: {\n    CORNERS: {\n      pieces: [0, 1, 2, 3, 4, 5, 6, 7],\n      orientation: [0, 0, 0, 0, 0, 0, 0, 0]\n    }\n  },\n  moves: {\n    U: {\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0]\n      }\n    },\n    y: {\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 7, 4, 5, 6],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0]\n      }\n    },\n    x: {\n      CORNERS: {\n        permutation: [4, 0, 3, 5, 7, 6, 2, 1],\n        orientation: [2, 1, 2, 1, 1, 2, 1, 2]\n      }\n    },\n    L: {\n      CORNERS: {\n        permutation: [0, 1, 6, 2, 4, 3, 5, 7],\n        orientation: [0, 0, 2, 1, 0, 2, 1, 0]\n      }\n    },\n    F: {\n      CORNERS: {\n        permutation: [3, 1, 2, 5, 0, 4, 6, 7],\n        orientation: [1, 0, 0, 2, 2, 1, 0, 0]\n      }\n    },\n    R: {\n      CORNERS: {\n        permutation: [4, 0, 2, 3, 7, 5, 6, 1],\n        orientation: [2, 1, 0, 0, 1, 0, 0, 2]\n      }\n    },\n    B: {\n      CORNERS: {\n        permutation: [0, 7, 1, 3, 4, 5, 2, 6],\n        orientation: [0, 2, 1, 0, 0, 0, 2, 1]\n      }\n    },\n    D: {\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 5, 6, 7, 4],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0]\n      }\n    },\n    z: {\n      CORNERS: {\n        permutation: [3, 2, 6, 5, 0, 4, 7, 1],\n        orientation: [1, 2, 1, 2, 2, 1, 2, 1]\n      }\n    }\n  }\n};\ncube2x2x2KPuzzleDefinition.moves[\"Rv\"] = cube2x2x2KPuzzleDefinition.moves[\"x\"];\ncube2x2x2KPuzzleDefinition.moves[\"Uv\"] = cube2x2x2KPuzzleDefinition.moves[\"y\"];\ncube2x2x2KPuzzleDefinition.moves[\"Fv\"] = cube2x2x2KPuzzleDefinition.moves[\"z\"];\ncube2x2x2KPuzzleDefinition.moves[\"Lv\"] = {\n  CORNERS: {\n    permutation: [1, 7, 6, 2, 0, 3, 5, 4],\n    orientation: [2, 1, 2, 1, 1, 2, 1, 2]\n  }\n};\ncube2x2x2KPuzzleDefinition.moves[\"Dv\"] = {\n  CORNERS: {\n    permutation: [3, 0, 1, 2, 5, 6, 7, 4],\n    orientation: [0, 0, 0, 0, 0, 0, 0, 0]\n  }\n};\ncube2x2x2KPuzzleDefinition.moves[\"Bv\"] = {\n  CORNERS: {\n    permutation: [4, 7, 1, 0, 5, 3, 2, 6],\n    orientation: [1, 2, 1, 2, 2, 1, 2, 1]\n  }\n};\nexport {\n  cube2x2x2KPuzzleDefinition\n};\n//# sourceMappingURL=2x2x2.kpuzzle.json-BHTFIME6.js.map\n","import type { KPuzzleDefinition } from \"../../../kpuzzle\";\n\nexport const cube2x2x2KPuzzleDefinition: KPuzzleDefinition = {\n  name: \"2x2x2\",\n  orbits: {\n    CORNERS: { numPieces: 8, numOrientations: 3 },\n  },\n  startStateData: {\n    CORNERS: {\n      pieces: [0, 1, 2, 3, 4, 5, 6, 7],\n      orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n    },\n  },\n  moves: {\n    U: {\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 4, 5, 6, 7],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n    },\n    y: {\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 7, 4, 5, 6],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n    },\n    x: {\n      CORNERS: {\n        permutation: [4, 0, 3, 5, 7, 6, 2, 1],\n        orientation: [2, 1, 2, 1, 1, 2, 1, 2],\n      },\n    },\n    L: {\n      CORNERS: {\n        permutation: [0, 1, 6, 2, 4, 3, 5, 7],\n        orientation: [0, 0, 2, 1, 0, 2, 1, 0],\n      },\n    },\n    F: {\n      CORNERS: {\n        permutation: [3, 1, 2, 5, 0, 4, 6, 7],\n        orientation: [1, 0, 0, 2, 2, 1, 0, 0],\n      },\n    },\n    R: {\n      CORNERS: {\n        permutation: [4, 0, 2, 3, 7, 5, 6, 1],\n        orientation: [2, 1, 0, 0, 1, 0, 0, 2],\n      },\n    },\n    B: {\n      CORNERS: {\n        permutation: [0, 7, 1, 3, 4, 5, 2, 6],\n        orientation: [0, 2, 1, 0, 0, 0, 2, 1],\n      },\n    },\n    D: {\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 5, 6, 7, 4],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n    },\n    z: {\n      CORNERS: {\n        permutation: [3, 2, 6, 5, 0, 4, 7, 1],\n        orientation: [1, 2, 1, 2, 2, 1, 2, 1],\n      },\n    },\n  },\n};\n\ncube2x2x2KPuzzleDefinition.moves[\"Rv\"] = cube2x2x2KPuzzleDefinition.moves[\"x\"];\ncube2x2x2KPuzzleDefinition.moves[\"Uv\"] = cube2x2x2KPuzzleDefinition.moves[\"y\"];\ncube2x2x2KPuzzleDefinition.moves[\"Fv\"] = cube2x2x2KPuzzleDefinition.moves[\"z\"];\ncube2x2x2KPuzzleDefinition.moves[\"Lv\"] = {\n  CORNERS: {\n    permutation: [1, 7, 6, 2, 0, 3, 5, 4],\n    orientation: [2, 1, 2, 1, 1, 2, 1, 2],\n  },\n};\ncube2x2x2KPuzzleDefinition.moves[\"Dv\"] = {\n  CORNERS: {\n    permutation: [3, 0, 1, 2, 5, 6, 7, 4],\n    orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n  },\n};\ncube2x2x2KPuzzleDefinition.moves[\"Bv\"] = {\n  CORNERS: {\n    permutation: [4, 7, 1, 0, 5, 3, 2, 6],\n    orientation: [1, 2, 1, 2, 2, 1, 2, 1],\n  },\n};\n"],"names":[],"version":3,"file":"2x2x2.kpuzzle.json-BHTFIME6.3ee4c636.js.map"}