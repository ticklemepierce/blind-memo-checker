{"mappings":"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","sources":["node_modules/cubing/dist/esm/redi_cube.kpuzzle.json-43CP47Z6.js","node_modules/cubing/src/cubing/puzzles/implementations/redi-cube/redi_cube.kpuzzle.json.ts"],"sourcesContent":["import \"./chunk-MGJA5U5O.js\";\n\n// src/cubing/puzzles/implementations/redi-cube/redi_cube.kpuzzle.json.ts\nvar rediCubeKPuzzleDefinition = {\n  name: \"redi_cube\",\n  orbits: {\n    EDGES: { numPieces: 12, numOrientations: 2 },\n    CORNERS: { numPieces: 8, numOrientations: 3 }\n  },\n  startStateData: {\n    EDGES: {\n      pieces: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n      orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    },\n    CORNERS: {\n      pieces: [0, 1, 2, 3, 4, 5, 6, 7],\n      orientation: [0, 0, 0, 0, 0, 0, 0, 0]\n    }\n  },\n  moves: {\n    F: {\n      EDGES: {\n        permutation: [8, 0, 2, 3, 4, 5, 6, 7, 1, 9, 10, 11],\n        orientation: [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7],\n        orientation: [1, 0, 0, 0, 0, 0, 0, 0]\n      }\n    },\n    x: {\n      EDGES: {\n        permutation: [4, 8, 0, 9, 6, 10, 2, 11, 5, 7, 1, 3],\n        orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0]\n      },\n      CORNERS: {\n        permutation: [4, 0, 3, 5, 7, 6, 2, 1],\n        orientation: [2, 1, 2, 1, 1, 2, 1, 2]\n      }\n    },\n    y: {\n      EDGES: {\n        permutation: [1, 2, 3, 0, 5, 6, 7, 4, 10, 8, 11, 9],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]\n      },\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 7, 4, 5, 6],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0]\n      }\n    }\n  },\n  experimentalDerivedMoves: {\n    z: \"[x: y]\",\n    UR: \"[y: F]\",\n    U: \"[y2: F]\",\n    UL: \"[y': F]\",\n    D: \"[x: F]\",\n    L: \"[z2: F]\",\n    R: \"[x2: F]\",\n    B: \"[y2 x: F]\"\n  }\n};\nexport {\n  rediCubeKPuzzleDefinition\n};\n//# sourceMappingURL=redi_cube.kpuzzle.json-43CP47Z6.js.map\n","import type { KPuzzleDefinition } from \"../../../kpuzzle\";\n\nexport const rediCubeKPuzzleDefinition: KPuzzleDefinition = {\n  name: \"redi_cube\",\n  orbits: {\n    EDGES: { numPieces: 12, numOrientations: 2 },\n    CORNERS: { numPieces: 8, numOrientations: 3 },\n  },\n  startStateData: {\n    EDGES: {\n      pieces: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n      orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    },\n    CORNERS: {\n      pieces: [0, 1, 2, 3, 4, 5, 6, 7],\n      orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n    },\n  },\n  moves: {\n    F: {\n      EDGES: {\n        permutation: [8, 0, 2, 3, 4, 5, 6, 7, 1, 9, 10, 11],\n        orientation: [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [0, 1, 2, 3, 4, 5, 6, 7],\n        orientation: [1, 0, 0, 0, 0, 0, 0, 0],\n      },\n    },\n    x: {\n      EDGES: {\n        permutation: [4, 8, 0, 9, 6, 10, 2, 11, 5, 7, 1, 3],\n        orientation: [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],\n      },\n      CORNERS: {\n        permutation: [4, 0, 3, 5, 7, 6, 2, 1],\n        orientation: [2, 1, 2, 1, 1, 2, 1, 2],\n      },\n    },\n    y: {\n      EDGES: {\n        permutation: [1, 2, 3, 0, 5, 6, 7, 4, 10, 8, 11, 9],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n      },\n      CORNERS: {\n        permutation: [1, 2, 3, 0, 7, 4, 5, 6],\n        orientation: [0, 0, 0, 0, 0, 0, 0, 0],\n      },\n    },\n  },\n  experimentalDerivedMoves: {\n    z: \"[x: y]\",\n    UR: \"[y: F]\",\n    U: \"[y2: F]\",\n    UL: \"[y': F]\",\n    D: \"[x: F]\",\n    L: \"[z2: F]\",\n    R: \"[x2: F]\",\n    B: \"[y2 x: F]\",\n  },\n};\n"],"names":[],"version":3,"file":"redi_cube.kpuzzle.json-43CP47Z6.55dcb0d6.js.map"}