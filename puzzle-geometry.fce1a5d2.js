function t(t,e,s,o){Object.defineProperty(t,e,{get:s,set:o,enumerable:!0,configurable:!0})}var e=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire946f;e.register("wu2HC",(function(s,o){t(s.exports,"parseOptions",(()=>B)),t(s.exports,"parsePuzzleDescription",(()=>at)),t(s.exports,"Quat",(()=>V)),t(s.exports,"schreierSims",(()=>et)),t(s.exports,"getPG3DNamedPuzzles",(()=>rt)),t(s.exports,"getPuzzleDescriptionString",(()=>ht)),t(s.exports,"getPuzzleGeometryByDesc",(()=>lt)),t(s.exports,"PuzzleGeometry",(()=>dt)),t(s.exports,"getPuzzleGeometryByName",(()=>ct)),t(s.exports,"PGNotation",(()=>gt));var n=e("98KNc"),i=class{constructor(t,e){this.facenames=t,this.prefixFree=!0,this.gripnames=[],e&&(this.gripnames=e);for(let e=0;this.prefixFree&&e<t.length;e++)for(let s=0;this.prefixFree&&s<t.length;s++)e!==s&&t[e].startsWith(t[s])&&(this.prefixFree=!1)}setGripNames(t){this.gripnames=t}splitByFaceNames(t){const e=[];let s=0;for(;s<t.length;){s>0&&s<t.length&&"_"===t[s]&&s++;let o=-1;for(let e=0;e<this.facenames.length;e++)t.substr(s).startsWith(this.facenames[e])&&(o<0||this.facenames[e].length>this.facenames[o].length)&&(o=e);if(!(o>=0))throw new Error("Could not split "+t+" into face names.");e.push(o),s+=this.facenames[o].length}return e}joinByFaceIndices(t){let e="";const s=[];for(let o=0;o<t.length;o++)s.push(e),s.push(this.facenames[t[o]]),this.prefixFree||(e="_");return s.join("")}spinmatch(t,e){if(t===e)return!0;try{const s=this.splitByFaceNames(t),o=this.splitByFaceNames(e);if(s.length!==o.length&&s.length<3)return!1;for(let t=0;t<s.length;t++){for(let e=0;e<t;e++)if(s[t]===s[e])return!1;let e=!1;for(let n=0;n<o.length;n++)if(s[t]===o[n]){e=!0;break}if(!e)return!1}return!0}catch(t){return!1}}spinmatchv(t,e){return t.endsWith("v")&&e.endsWith("v")?this.spinmatch(t.slice(0,t.length-1),e.slice(0,e.length-1)):this.spinmatch(t,e)}unswizzle(t){(t.endsWith("v")||t.endsWith("w"))&&t[0]<="Z"&&(t=t.slice(0,t.length-1));const e=t.toUpperCase();for(let t=0;t<this.gripnames.length;t++){const s=this.gripnames[t];if(this.spinmatch(e,s))return s}return t}},r=class{notationToInternal(t){return t}notationToExternal(t){return t}},h=class{constructor(t,e){this.child=t,this.sw=e}notationToInternal(t){if("T"===t.family&&void 0===t.innerLayer&&void 0===t.outerLayer)return new n.Move(new n.QuantumMove("FLRv",t.innerLayer,t.outerLayer),t.amount);return this.child.notationToInternal(t)}notationToExternal(t){let e=t.family;return e.length>0&&"v"===e[e.length-1]&&(e=e.substring(0,e.length-1)),this.sw.spinmatch(e,"FLUR")?new n.Move(new n.QuantumMove("T",t.innerLayer,t.outerLayer),t.amount):this.child.notationToExternal(t)}},a=class{constructor(t,e){this.internalNames=t,this.externalNames=e}convertString(t,e,s){let o="";(t.endsWith("v")||t.endsWith("v"))&&t<="_"&&(o=t.slice(t.length-1),t=t.slice(0,t.length-1));const n=t.toUpperCase();let i=!1;return t!==n&&(i=!0,t=n),t=s.joinByFaceIndices(e.splitByFaceNames(t)),i&&(t=t.toLowerCase()),t+o}convert(t,e,s){const o=t.family,i=this.convertString(o,e,s);return o===i?t:new n.Move(new n.QuantumMove(i,t.innerLayer,t.outerLayer),t.amount)}notationToInternal(t){return this.convert(t,this.externalNames,this.internalNames)}notationToExternal(t){return this.convert(t,this.internalNames,this.externalNames)}},l=class{constructor(t){this.child=t}notationToInternal(t){if(void 0===t.innerLayer&&void 0===t.outerLayer){if(1===Math.abs(t.amount)){if("R++"===t.family)return new n.Move(new n.QuantumMove("L",3,2),-2*t.amount);if("R--"===t.family)return new n.Move(new n.QuantumMove("L",3,2),2*t.amount);if("D++"===t.family)return new n.Move(new n.QuantumMove("U",3,2),-2*t.amount);if("D--"===t.family)return new n.Move(new n.QuantumMove("U",3,2),2*t.amount);if("R_PLUSPLUS_"===t.family)return new n.Move(new n.QuantumMove("L",3,2),-2*t.amount);if("D_PLUSPLUS_"===t.family)return new n.Move(new n.QuantumMove("U",3,2),-2*t.amount)}if("y"===t.family)return new n.Move("Uv",t.amount)}return this.child.notationToInternal(t)}notationToExternal(t){return"Uv"===t.family?new n.Move(new n.QuantumMove("y",t.innerLayer,t.outerLayer),t.amount):"Dv"===t.family?new n.Move("y",-t.amount):this.child.notationToExternal(t)}},c=class{constructor(t){this.slices=t}notationToInternal(t){const e=t.family;return t.innerLayer||t.outerLayer||("x"===e?t=new n.Move("Rv",t.amount):"y"===e?t=new n.Move("Uv",t.amount):"z"===e&&(t=new n.Move("Fv",t.amount)),1==(1&this.slices)&&("E"===e?t=new n.Move(new n.QuantumMove("D",(this.slices+1)/2),t.amount):"M"===e?t=new n.Move(new n.QuantumMove("L",(this.slices+1)/2),t.amount):"S"===e&&(t=new n.Move(new n.QuantumMove("F",(this.slices+1)/2),t.amount))),this.slices>2&&("e"===e?t=new n.Move(new n.QuantumMove("D",this.slices-1,2),t.amount):"m"===e?t=new n.Move(new n.QuantumMove("L",this.slices-1,2),t.amount):"s"===e&&(t=new n.Move(new n.QuantumMove("F",this.slices-1,2),t.amount)))),t}notationToExternal(t){const e=t.family;if(!t.innerLayer&&!t.outerLayer){if("Rv"===e)return new n.Move("x",t.amount);if("Uv"===e)return new n.Move("y",t.amount);if("Fv"===e)return new n.Move("z",t.amount);if("Lv"===e)return new n.Move("x",-t.amount);if("Dv"===e)return new n.Move("y",-t.amount);if("Bv"===e)return new n.Move("z",-t.amount)}return t}},f={U:"frl",L:"fld",R:"fdr",B:"dlr",u:"FRL",l:"FLD",r:"FDR",b:"DLR",Uv:"FRLv",Lv:"FLDv",Rv:"FDRv",Bv:"DLRv",D:"D",F:"F",BL:"L",BR:"R"},u={U:"FRL",L:"FLD",R:"FDR",B:"DLR",u:"frl",l:"fld",r:"fdr",b:"dlr",Uv:"FRLv",Lv:"FLDv",Rv:"FDRv",Bv:"DLRv",D:"D",F:"F",BL:"L",BR:"R",d:"d",f:"f",bl:"l",br:"r"},p={U:"FRL",L:"FLD",R:"FDR",B:"DLR"},m=new n.QuantumMove("y"),d=new n.QuantumMove("Dv"),g=class{constructor(t){this.child=t,this.wcaHack=!1,this.map=f}notationToInternal(t){if(this.wcaHack&&2===t.innerLayer&&null===t.outerLayer){const e=p[t.family];if(e)return new n.Move(new n.QuantumMove(e,t.innerLayer,t.outerLayer),t.amount)}const e=this.map[t.family];return e?new n.Move(new n.QuantumMove(e,t.innerLayer,t.outerLayer),t.amount):m.isIdentical(t.quantum)?new n.Move(d,-t.amount):null}notationToExternal(t){if(this.wcaHack&&2===t.innerLayer&&null===t.outerLayer)for(const[e,s]of Object.entries(p))if(this.child.spinmatch(t.family,s))return new n.Move(new n.QuantumMove(e,t.innerLayer,t.outerLayer),t.amount);for(const[e,s]of Object.entries(this.map))if(this.child.spinmatch(t.family,s))return new n.Move(new n.QuantumMove(e,t.innerLayer,t.outerLayer),t.amount);return d.isIdentical(t.quantum)?new n.Move(m,-t.amount):null}},v=class extends g{constructor(t){super(t),this.map=u}},b={U:"UBL",UL:"ULF",F:"UFR",UR:"URB",B:"DBL",D:"DFR",L:"DLF",R:"DRB",Uv:"UBLv",ULv:"ULFv",Fv:"UFRv",URv:"URBv",Bv:"DBLv",Dv:"DFRv",Lv:"DLFv",Rv:"DRBv"},w=new n.QuantumMove("x"),M=new n.QuantumMove("Rv"),y=new n.QuantumMove("Lv"),x=new n.QuantumMove("y"),z=new n.QuantumMove("Uv"),L=new n.QuantumMove("Dv"),F=new n.QuantumMove("z"),R=new n.QuantumMove("Fv"),k=new n.QuantumMove("Bv"),D=class{constructor(t){this.child=t}notationToInternal(t){if(t.innerLayer||t.outerLayer)return null;const e=b[t.family];return e?new n.Move(new n.QuantumMove(e,t.outerLayer,t.innerLayer),t.amount):w.isIdentical(t.quantum)?new n.Move(M,t.amount):x.isIdentical(t.quantum)?new n.Move(z,t.amount):F.isIdentical(t.quantum)?new n.Move(R,t.amount):null}notationToExternal(t){for(const[e,s]of Object.entries(b))if(this.child.spinmatchv(t.family,s))return new n.Move(new n.QuantumMove(e,t.innerLayer,t.outerLayer),t.amount);return M.isIdentical(t.quantum)?new n.Move(w,t.amount):y.isIdentical(t.quantum)?new n.Move(w,-t.amount):z.isIdentical(t.quantum)?new n.Move(x,t.amount):L.isIdentical(t.quantum)?new n.Move(x,-t.amount):R.isIdentical(t.quantum)?new n.Move(F,t.amount):k.isIdentical(t.quantum)?new n.Move(F,-t.amount):null}};function B(t){let e=0;const s={};for(;e<t.length&&"-"===t[e][0];){const o=t[e++];if("--rotations"===o)s.addRotations=!0;else if("--allmoves"===o)s.allMoves=!0;else if("--outerblockmoves"===o)s.outerBlockMoves=!0;else if("--vertexmoves"===o)s.vertexMoves=!0;else if("--nocorners"===o)s.includeCornerOrbits=!1;else if("--noedges"===o)s.includeEdgeOrbits=!1;else if("--noorientation"===o)s.fixedOrientation=!0;else if("--nocenters"===o)s.includeCenterOrbits=!1;else if("--omit"===o)s.excludeOrbits=t[e].split(","),e++;else if("--moves"===o)s.moveList=t[e].split(","),e++;else if("--optimize"===o)s.optimizeOrbits=!0;else if("--scramble"===o)s.scrambleAmount=100;else if("--fixcorner"===o)s.fixedPieceType="v";else if("--fixedge"===o)s.fixedPieceType="e";else if("--fixcenter"===o)s.fixedPieceType="f";else if("--orientcenters"===o)s.orientCenters=!0;else{if("--puzzleorientation"!==o)throw new Error("Bad option: "+o);s.puzzleOrientation=JSON.parse(t[e]),e++}}return{puzzleDescription:at(t.slice(e).join(" ")),options:s}}var E=[],C=[];function O(t){if(!E[t]){const e=Array(t);for(let s=0;s<t;s++)e[s]=0;E[t]=e}return E[t]}function T(t){if(!C[t]){const e=Array(t);for(let s=0;s<t;s++)e[s]=s;C[t]=e}return C[t]}function U(t,e){return t/function(t,e){if(t>e){const s=t;t=e,e=s}for(;t>0;){const s=e%t;e=t,t=s}return e}(t,e)*e}var S=class{constructor(t){this.n=t.length,this.p=t}toString(){return"Perm["+this.p.join(" ")+"]"}mul(t){const e=Array(this.n);for(let s=0;s<this.n;s++)e[s]=t.p[this.p[s]];return new S(e)}rmul(t){const e=Array(this.n);for(let s=0;s<this.n;s++)e[s]=this.p[t.p[s]];return new S(e)}inv(){const t=Array(this.n);for(let e=0;e<this.n;e++)t[this.p[e]]=e;return new S(t)}compareTo(t){for(let e=0;e<this.n;e++)if(this.p[e]!==t.p[e])return this.p[e]-t.p[e];return 0}toGap(){const t=new Array,e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;const o=new Array;for(let t=s;!e[t];t=this.p[t])o.push(1+t),e[t]=!0;t.push("("+o.join(",")+")")}return t.join("")}order(){let t=1;const e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;let o=0;for(let t=s;!e[t];t=this.p[t])o++,e[t]=!0;t=U(t,o)}return t}},P=class{constructor(t,e){this.size=t,this.mod=e}reassemblySize(){return function(t){let e=1;for(;t>1;)e*=t,t--;return e}(this.size)*Math.pow(this.mod,this.size)}},N=0;function I(t,e){const s=n.Move.fromString(e),o=t.notationToExternal(s);return null===o||s===o?e:o.toString()}var A=class{constructor(t,e,s,o,n){this.orbitnames=t,this.orbitdefs=e,this.solved=s,this.movenames=o,this.moveops=n}transformToKTransformationData(t){const e={};for(let s=0;s<this.orbitnames.length;s++)e[this.orbitnames[s]]=t.orbits[s].toKPuzzle();return e}static transformToKTransformationData(t,e){const s={};for(let o=0;o<t.length;o++)s[t[o]]=e.orbits[o].toKPuzzle();return s}toKsolve(t,e=new r){const s=[];s.push("Name "+t),s.push("");for(let t=0;t<this.orbitnames.length;t++)s.push(`Set ${this.orbitnames[t]} ${this.orbitdefs[t].size} ${this.orbitdefs[t].mod}`);s.push(""),s.push("Solved");for(let t=0;t<this.orbitnames.length;t++)this.solved.orbits[t].appendDefinition(s,this.orbitnames[t],!1,!1);s.push("End");for(let t=0;t<this.movenames.length;t++){s.push("");let o=I(e,this.movenames[t]),n=!1;"'"===o[o.length-1]&&(n=!0,o=o.substring(0,o.length-1)),s.push("Move "+o);for(let e=0;e<this.orbitnames.length;e++)n?this.moveops[t].orbits[e].inv().appendDefinition(s,this.orbitnames[e],!0):this.moveops[t].orbits[e].appendDefinition(s,this.orbitnames[e],!0);s.push("End")}return s}toKPuzzleDefinition(t){const e={},s={};for(let t=0;t<this.orbitnames.length;t++){e[this.orbitnames[t]]={numPieces:this.orbitdefs[t].size,numOrientations:this.orbitdefs[t].mod};const o=this.solved.orbits[t].toKPuzzle();s[this.orbitnames[t]]={pieces:o.permutation,orientation:o.orientation}}const o={};if(t)for(let t=0;t<this.movenames.length;t++)o[this.movenames[t]]=this.transformToKTransformationData(this.moveops[t]);return{name:"PG3D #"+ ++N,orbits:e,startStateData:s,moves:o}}optimize(){const t=[],e=[],s=[],o=[];for(let t=0;t<this.moveops.length;t++)o.push([]);for(let n=0;n<this.orbitdefs.length;n++){const i=this.orbitdefs[n].mod,r=this.orbitdefs[n].size,h=new K(r),a=new Array(this.orbitdefs[n].size);for(let t=0;t<r;t++)a[t]=!1;for(let t=0;t<this.moveops.length;t++)for(let e=0;e<r;e++)this.moveops[t].orbits[n].perm[e]===e&&0===this.moveops[t].orbits[n].ori[e]||(a[e]=!0,h.union(e,this.moveops[t].orbits[n].perm[e]));let l=!0;if(i>1){l=!1;const t=new K(this.orbitdefs[n].size*i);for(let e=0;e<this.moveops.length;e++)for(let s=0;s<r;s++)if(this.moveops[e].orbits[n].perm[s]!==s||0!==this.moveops[e].orbits[n].ori[s])for(let o=0;o<i;o++)t.union(s*i+o,this.moveops[e].orbits[n].perm[s]*i+(o+this.moveops[e].orbits[n].ori[s])%i);for(let e=0;!l&&e<r;e++)for(let s=1;s<i;s++)t.find(e*i)===t.find(e*i+s)&&(l=!0);for(let t=0;!l&&t<r;t++)for(let e=0;e<t;e++)this.solved.orbits[n].perm[t]===this.solved.orbits[n].perm[e]&&(l=!0)}let c=-1,f=!1;for(let t=0;t<this.orbitdefs[n].size;t++)if(a[t]){const e=h.find(t);c<0?c=e:c!==e&&(f=!0)}for(let i=0;i<this.orbitdefs[n].size;i++){if(!a[i])continue;if(h.find(i)!==i)continue;const r=[],c=[];let u=0;for(let t=0;t<this.orbitdefs[n].size;t++)h.find(t)===i&&(r[u]=t,c[t]=u,u++);if(f?t.push(`${this.orbitnames[n]}_p${i}`):t.push(this.orbitnames[n]),l){e.push(new P(u,this.orbitdefs[n].mod)),s.push(this.solved.orbits[n].remapVS(r,u));for(let t=0;t<this.moveops.length;t++)o[t].push(this.moveops[t].orbits[n].remap(r,c,u))}else{e.push(new P(u,1)),s.push(this.solved.orbits[n].remapVS(r,u).killOri());for(let t=0;t<this.moveops.length;t++)o[t].push(this.moveops[t].orbits[n].remap(r,c,u).killOri())}}}return new A(t,e,new G(s),this.movenames,o.map((t=>new q(t))))}scramble(t){this.solved=this.solved.mul(this.getScrambleTransformation(t))}getScrambleTransformation(t){t<100&&(t=100);const e=[];for(let t=0;t<this.moveops.length;t++)e[t]=this.moveops[t];for(let t=0;t<e.length;t++){const s=Math.floor(Math.random()*e.length),o=e[t];e[t]=e[s],e[s]=o}t<e.length&&(t=e.length);for(let s=0;s<t;s++){const t=Math.floor(Math.random()*e.length),s=Math.floor(Math.random()*e.length),o=Math.floor(Math.random()*this.moveops.length);e[t]=e[t].mul(e[s]).mul(this.moveops[o]),Math.random()<.1&&(e[t]=e[t].mul(this.moveops[o]))}let s=e[0];for(let t=1;t<e.length;t++)s=s.mul(e[t]);return s}reassemblySize(){let t=1;for(let e=0;e<this.orbitdefs.length;e++)t*=this.orbitdefs[e].reassemblySize();return t}},Q=class{constructor(t,e,s){this.perm=t,this.ori=e,this.orimod=s}static e(t,e){return new Q(T(t),O(t),e)}mul(t){const e=this.perm.length,s=new Array(e);if(1===this.orimod){for(let o=0;o<e;o++)s[o]=this.perm[t.perm[o]];return new Q(s,this.ori,this.orimod)}{const o=new Array(e);for(let n=0;n<e;n++)s[n]=this.perm[t.perm[n]],o[n]=(this.ori[t.perm[n]]+t.ori[n])%this.orimod;return new Q(s,o,this.orimod)}}inv(){const t=this.perm.length,e=new Array(t),s=new Array(t);for(let o=0;o<t;o++)e[this.perm[o]]=o,s[this.perm[o]]=(this.orimod-this.ori[o])%this.orimod;return new Q(e,s,this.orimod)}equal(t){const e=this.perm.length;for(let s=0;s<e;s++)if(this.perm[s]!==t.perm[s]||this.ori[s]!==t.ori[s])return!1;return!0}killOri(){const t=this.perm.length;for(let e=0;e<t;e++)this.ori[e]=0;return this.orimod=1,this}toPerm(){const t=this.orimod;if(1===t)return new S(this.perm);const e=this.perm.length,s=new Array(e*t);for(let o=0;o<e;o++)for(let e=0;e<t;e++)s[o*t+e]=t*this.perm[o]+(this.ori[o]+e)%t;return new S(s)}identicalPieces(){const t=[],e=this.perm.length,s=[];for(let o=0;o<e;o++){const n=this.perm[o];if(void 0===t[n]){const i=[o];t[n]=!0;for(let t=o+1;t<e;t++)this.perm[t]===n&&i.push(t);s.push(i)}}return s}order(){return this.toPerm().order()}isIdentity(){const t=this.perm.length;if(this.perm===T(t)&&this.ori===O(t))return!0;for(let e=0;e<t;e++)if(this.perm[e]!==e||0!==this.ori[e])return!1;return!0}zeroOris(){const t=this.perm.length;if(this.ori===O(t))return!0;for(let e=0;e<t;e++)if(0!==this.ori[e])return!1;return!0}remap(t,e,s){const o=new Array(s),n=new Array(s);for(let i=0;i<s;i++)o[i]=e[this.perm[t[i]]],n[i]=this.ori[t[i]];return new Q(o,n,this.orimod)}remapVS(t,e){const s=new Array(e),o=new Array(e);let n=0;const i=[];for(let r=0;r<e;r++){const e=this.perm[t[r]];void 0===i[e]&&(i[e]=n++),s[r]=i[e],o[r]=this.ori[t[r]]}return new Q(s,o,this.orimod)}appendDefinition(t,e,s,o=!0){if(!(o&&this.isIdentity()||(t.push(e),t.push(this.perm.map((t=>t+1)).join(" ")),this.zeroOris())))if(s){const e=new Array(this.ori.length);for(let t=0;t<e.length;t++)e[this.perm[t]]=this.ori[t];t.push(e.join(" "))}else t.push(this.ori.join(" "))}toKPuzzle(){const t=this.perm.length;return this.isIdentity()?(Q.kcache[t]||(Q.kcache[t]={permutation:T(t),orientation:O(t)}),Q.kcache[t]):{permutation:this.perm,orientation:this.ori}}},j=Q;j.kcache=[];var $=class{constructor(t){this.orbits=t}internalMul(t){const e=[];for(let s=0;s<this.orbits.length;s++)e.push(this.orbits[s].mul(t.orbits[s]));return e}internalInv(){const t=[];for(const e of this.orbits)t.push(e.inv());return t}equal(t){for(let e=0;e<this.orbits.length;e++)if(!this.orbits[e].equal(t.orbits[e]))return!1;return!0}killOri(){for(const t of this.orbits)t.killOri();return this}toPerm(){const t=new Array;let e=0;for(const s of this.orbits){const o=s.toPerm();t.push(o),e+=o.n}const s=new Array(e);e=0;for(const o of t){for(let t=0;t<o.n;t++)s[e+t]=e+o.p[t];e+=o.n}return new S(s)}identicalPieces(){const t=[];let e=0;for(const s of this.orbits){const o=s.orimod,n=s.identicalPieces();for(let s=0;s<n.length;s++)t.push(n[s].map((t=>t*o+e)));e+=o*s.perm.length}return t}order(){let t=1;for(const e of this.orbits)t=U(t,e.order());return t}},q=class extends ${constructor(t){super(t)}mul(t){return new q(this.internalMul(t))}mulScalar(t){if(0===t)return this.e();let e=this;for(t<0&&(e=e.inv(),t=-t);0==(1&t);)e=e.mul(e),t>>=1;if(1===t)return e;let s=e,o=this.e();for(;t>0;)1&t&&(o=o.mul(s)),t>1&&(s=s.mul(s)),t>>=1;return o}inv(){return new q(this.internalInv())}e(){return new q(this.orbits.map((t=>j.e(t.perm.length,t.orimod))))}},G=class extends ${constructor(t){super(t)}mul(t){return new G(this.internalMul(t))}},K=class{constructor(t){this.n=t,this.heads=new Array(t);for(let e=0;e<t;e++)this.heads[e]=e}find(t){let e=this.heads[t];return this.heads[e]===e||(e=this.find(this.heads[e]),this.heads[t]=e),e}union(t,e){const s=this.find(t),o=this.find(e);s<o?this.heads[o]=s:s>o&&(this.heads[s]=o)}};var W={"2x2x2":"c f 0","3x3x3":"c f 0.333333333333333","4x4x4":"c f 0.5 f 0","5x5x5":"c f 0.6 f 0.2","6x6x6":"c f 0.666666666666667 f 0.333333333333333 f 0","7x7x7":"c f 0.714285714285714 f 0.428571428571429 f 0.142857142857143","8x8x8":"c f 0.75 f 0.5 f 0.25 f 0","9x9x9":"c f 0.777777777777778 f 0.555555555555556 f 0.333333333333333 f 0.111111111111111","10x10x10":"c f 0.8 f 0.6 f 0.4 f 0.2 f 0","11x11x11":"c f 0.818181818181818 f 0.636363636363636 f 0.454545454545455 f 0.272727272727273 f 0.0909090909090909","12x12x12":"c f 0.833333333333333 f 0.666666666666667 f 0.5 f 0.333333333333333 f 0.166666666666667 f 0","13x13x13":"c f 0.846153846153846 f 0.692307692307692 f 0.538461538461538 f 0.384615384615385 f 0.230769230769231 f 0.0769230769230769","20x20x20":"c f 0 f .1 f .2 f .3 f .4 f .5 f .6 f .7 f .8 f .9","30x30x30":"c f 0 f .066667 f .133333 f .2 f .266667 f .333333 f .4 f .466667 f .533333 f .6 f .666667 f .733333 f .8 f .866667 f .933333","40x40x40":"c f 0 f .05 f .1 f .15 f .2 f .25 f .3 f .35 f .4 f .45 f .5 f .55 f .6 f .65 f .7 f .75 f .8 f .85 f .9 f .95",skewb:"c v 0","master skewb":"c v 0.275","professor skewb":"c v 0 v 0.38","compy cube":"c v 0.915641442663986",helicopter:"c e 0.707106781186547","curvy copter":"c e 0.83",dino:"c v 0.577350269189626","little chop":"c e 0",pyramorphix:"t e 0",mastermorphix:"t e 0.346184634065199",pyraminx:"t v 0.333333333333333 v 1.66666666666667",tetraminx:"t v 0.333333333333333","master pyraminx":"t v 0 v 1 v 2","master tetraminx":"t v 0 v 1","professor pyraminx":"t v -0.2 v 0.6 v 1.4 v 2.2","professor tetraminx":"t v -0.2 v 0.6 v 1.4","Jing pyraminx":"t f 0","master pyramorphix":"t e 0.866025403784437",megaminx:"d f 0.7",gigaminx:"d f 0.64 f 0.82",teraminx:"d f 0.64 f 0.76 f 0.88",petaminx:"d f 0.64 f 0.73 f 0.82 f 0.91",examinx:"d f 0.64 f 0.712 f 0.784 f 0.856 f 0.928",zetaminx:"d f 0.64 f 0.7 f 0.76 f 0.82 f 0.88 f 0.94",yottaminx:"d f 0.64 f 0.6914 f 0.7429 f 0.7943 f 0.8457 f 0.8971 f 0.9486",pentultimate:"d f 0","master pentultimate":"d f 0.1","elite pentultimate":"d f 0 f 0.145905",starminx:"d v 0.937962370425399","starminx 2":"d f 0.23606797749979","pyraminx crystal":"d f 0.447213595499989",chopasaurus:"d v 0","big chop":"d e 0","skewb diamond":"o f 0",FTO:"o f 0.333333333333333","master FTO":"o f 0.5 f 0","Christopher's jewel":"o v 0.577350269189626",octastar:"o e 0","Trajber's octahedron":"o v 0.433012701892219","radio chop":"i f 0",icosamate:"i v 0","icosahedron 2":"i v 0.18759247376021","icosahedron 3":"i v 0.18759247376021 e 0","icosahedron static faces":"i v 0.84","icosahedron moving faces":"i v 0.73","Eitan's star":"i f 0.61803398874989","2x2x2 + dino":"c f 0 v 0.577350269189626","2x2x2 + little chop":"c f 0 e 0","dino + little chop":"c v 0.577350269189626 e 0","2x2x2 + dino + little chop":"c f 0 v 0.577350269189626 e 0","megaminx + chopasaurus":"d f 0.61803398875 v 0","starminx combo":"d f 0.23606797749979 v 0.937962370425399"},_=1e-9;function H(t){let e=new V(0,0,0,0);for(let s=0;s<t.length;s++)e=e.sum(t[s]);return e.smul(1/t.length)}function J(t,e,s,o){const n=o[t].intersect3(o[e],o[s]);if(!n)return n;for(let i=0;i<o.length;i++)if(i!==t&&i!==e&&i!==s){const t=o[i].b*n.b+o[i].c*n.c+o[i].d*n.d;if(o[i].a>0&&t>o[i].a||o[i].a<0&&t<o[i].a)return!1}return n}var V=class{constructor(t,e,s,o){this.a=t,this.b=e,this.c=s,this.d=o}mul(t){return new V(this.a*t.a-this.b*t.b-this.c*t.c-this.d*t.d,this.a*t.b+this.b*t.a+this.c*t.d-this.d*t.c,this.a*t.c-this.b*t.d+this.c*t.a+this.d*t.b,this.a*t.d+this.b*t.c-this.c*t.b+this.d*t.a)}toString(){return`Q[${this.a},${this.b},${this.c},${this.d}]`}dist(t){return Math.hypot(this.a-t.a,this.b-t.b,this.c-t.c,this.d-t.d)}len(){return Math.hypot(this.a,this.b,this.c,this.d)}cross(t){return new V(0,this.c*t.d-this.d*t.c,this.d*t.b-this.b*t.d,this.b*t.c-this.c*t.b)}dot(t){return this.b*t.b+this.c*t.c+this.d*t.d}normalize(){const t=Math.sqrt(this.dot(this));return new V(this.a/t,this.b/t,this.c/t,this.d/t)}makenormal(){return new V(0,this.b,this.c,this.d).normalize()}normalizeplane(){const t=Math.hypot(this.b,this.c,this.d);return new V(this.a/t,this.b/t,this.c/t,this.d/t)}smul(t){return new V(this.a*t,this.b*t,this.c*t,this.d*t)}sum(t){return new V(this.a+t.a,this.b+t.b,this.c+t.c,this.d+t.d)}sub(t){return new V(this.a-t.a,this.b-t.b,this.c-t.c,this.d-t.d)}angle(){return 2*Math.acos(this.a)}invrot(){return new V(this.a,-this.b,-this.c,-this.d)}det3x3(t,e,s,o,n,i,r,h,a){return t*(n*a-i*h)+e*(i*r-o*a)+s*(o*h-n*r)}rotateplane(t){const e=t.mul(new V(0,this.b,this.c,this.d)).mul(t.invrot());return e.a=this.a,e}orthogonal(){const t=Math.abs(this.b),e=Math.abs(this.c),s=Math.abs(this.d);return t<e&&t<s?this.cross(new V(0,1,0,0)).normalize():e<t&&e<s?this.cross(new V(0,0,1,0)).normalize():this.cross(new V(0,0,0,1)).normalize()}pointrotation(t){const e=this.normalize();if(t=t.normalize(),e.sub(t).len()<_)return new V(1,0,0,0);let s=e.sum(t);s=s.len()<_?s.orthogonal():s.normalize();const o=e.cross(s);return o.a=e.dot(s),o}unproject(t){return this.sum(t.smul(-this.dot(t)/(this.len()*t.len())))}rotatepoint(t){return t.mul(this).mul(t.invrot())}rotateface(t){return t.map((t=>t.rotatepoint(this)))}intersect3(t,e){const s=this.det3x3(this.b,this.c,this.d,t.b,t.c,t.d,e.b,e.c,e.d);return!(Math.abs(s)<_)&&new V(0,this.det3x3(this.a,this.c,this.d,t.a,t.c,t.d,e.a,e.c,e.d)/s,this.det3x3(this.b,this.a,this.d,t.b,t.a,t.d,e.b,e.a,e.d)/s,this.det3x3(this.b,this.c,this.a,t.b,t.c,t.a,e.b,e.c,e.a)/s)}side(t){return t>_?1:t<-1e-9?-1:0}cutface(t){const e=this.a;let s=0,o=null;for(let o=0;o<t.length;o++)s|=1<<this.side(t[o].dot(this)-e)+1;if(5==(5&s)){o=[];const s=t.map((t=>this.side(t.dot(this)-e)));for(let n=-1;n<=1;n+=2){const i=[];for(let o=0;o<t.length;o++){s[o]!==n&&0!==s[o]||i.push(t[o]);const r=(o+1)%t.length;if(s[o]+s[r]===0&&0!==s[o]){const s=t[o].dot(this)-e,n=s/(s-(t[r].dot(this)-e)),h=t[o].smul(1-n).sum(t[r].smul(n));i.push(h)}}o.push(i)}}return o}cutfaces(t){const e=[];for(let s=0;s<t.length;s++){const o=t[s],n=this.cutface(o);n?(e.push(n[0]),e.push(n[1])):e.push(o)}return e}faceside(t){const e=this.a;for(let s=0;s<t.length;s++){const o=this.side(t[s].dot(this)-e);if(0!==o)return o}throw new Error("Could not determine side of plane in faceside")}sameplane(t){const e=this.normalize(),s=t.normalize();return e.dist(s)<_||e.dist(s.smul(-1))<_}makecut(t){return new V(t,this.b,this.c,this.d)}},Z=1e-9;function X(t,e){const s=[],o=[];for(let n=0;n<e.length;n++){const i=t.rotateplane(e[n]);let r=!1;for(let t=0;t<s.length;t++)if(i.dist(s[t])<Z){r=!0;break}r||(s.push(i),o.push(e[n]))}return o}function Y(t){const e=[];for(let s=1;s<t.length;s++)for(let o=s+1;o<t.length;o++){const n=J(0,s,o,t);if(n){let t=!1;for(let s=0;s<e.length;s++)if(n.dist(e[s])<Z){t=!0;break}t||e.push(n)}}for(;;){let s=!1;for(let o=0;o<e.length;o++){const n=(o+1)%e.length;if(t[0].dot(e[o].cross(e[n]))<0){const t=e[o];e[o]=e[n],e[n]=t,s=!0}}if(!s)break}return e}var tt=class{constructor(){this.mult=[]}multiply(t){for(let e=2;e*e<=t;e++)for(;t%e==0;)void 0!==this.mult[e]?this.mult[e]++:this.mult[e]=1,t/=e;t>1&&(void 0!==this.mult[t]?this.mult[t]++:this.mult[t]=1)}toString(){let t="";for(let e=0;e<this.mult.length;e++)void 0!==this.mult[e]&&(""!==t&&(t+="*"),t+=e,this.mult[e]>1&&(t+=`^${this.mult[e]}`));return t}};function et(t,e){const s=t[0].p.length,o=function(t){return new S(T(t))}(s);let n=[],i=[],r=[],h=[],a=[];function l(t,e,s){h[t].push(e),a[t].push(s);for(let o=0;o<n[t].length;o++)n[t][o]&&c(t,n[t][o].mul(e),s+r[t][o])}function c(t,e,s){const o=e.p[t];if(!n[t][o]){n[t][o]=e,i[t][o]=e.inv(),r[t][o]=s;for(let o=0;o<h[t].length;o++)c(t,e.mul(h[t][o]),s+a[t][o]);return}const f=e.mul(i[t][o]);(function(t){for(let e=t.p.length-1;e>=0;e--){const s=t.p[e];if(s!==e){if(!n[e][s])return!1;t=t.mul(i[e][s])}}return!0})(f)||l(t-1,f,s+r[t][o])}return function(){n=[],i=[],h=[],r=[],a=[];for(let t=0;t<s;t++)n.push([]),i.push([]),r.push([]),h.push([]),a.push([]),n[t][t]=o,i[t][t]=o,r[t][t]=0;let c=0,f=1;for(let o=0;o<t.length;o++){l(s-1,t[o],1),f=1;let i=0,a=0;const u=[],p=new tt;for(let t=0;t<s;t++){let e=0,o=0;for(let i=0;i<s;i++)n[t][i]&&(e++,o+=r[t][i],t!==i&&c++);i+=h[t].length,f*=e,e>1&&p.multiply(e);const l=o/e;u.push(l),a+=l}e(`${o}: sz ${f} T ${i} sol ${a} none ${c} mults ${p.toString()}`)}return f}()}var st=class{constructor(t){this.coords=new Array(3*t.length);for(let e=0;e<t.length;e++)this.coords[3*e]=t[e].b,this.coords[3*e+1]=t[e].c,this.coords[3*e+2]=t[e].d;this.length=t.length}get(t){return new V(0,this.coords[3*t],this.coords[3*t+1],this.coords[3*t+2])}centermass(){let t=0,e=0,s=0;for(let o=0;o<this.length;o++)t+=this.coords[3*o],e+=this.coords[3*o+1],s+=this.coords[3*o+2];return new V(0,t/this.length,e/this.length,s/this.length)}rotate(t){const e=[];for(let s=0;s<this.length;s++)e.push(this.get(s).rotatepoint(t));return new st(e)}rotateforward(){const t=[];for(let e=1;e<this.length;e++)t.push(this.get(e));return t.push(this.get(0)),new st(t)}},ot=class{constructor(t,e,s){this.face=t,this.left=e,this.right=s}split(t){const e=t.cutface(this.face);return null!==e&&(void 0===this.left?(this.left=new ot(e[0]),this.right=new ot(e[1])):(this.left=this.left?.split(t),this.right=this.right?.split(t))),this}collect(t,e){return void 0===this.left?t.push(new st(this.face)):e?(this.left?.collect(t,!1),this.right?.collect(t,!0)):(this.right?.collect(t,!1),this.left?.collect(t,!0)),t}};var nt=1e-9;function it(t,e){for(let s=0;s<t.length;s++)if(t[s][0].dist(e)<nt)return s;throw new Error("Element not found")}function rt(){return W}function ht(t){return W[t]}function at(t){const e=t.split(/ /).filter(Boolean);if(e.length%2==0)return null;const s=e[0];if("o"!==s&&"c"!==s&&"i"!==s&&"d"!==s&&"t"!==s)return null;const o=[];for(let t=1;t<e.length;t+=2){if("f"!==e[t]&&"v"!==e[t]&&"e"!==e[t])return null;o.push({cutType:e[t],distance:parseFloat(e[t+1])})}return{shape:s,cuts:o}}function lt(t,e={}){const s=at(t);if(null===s)throw new Error("Could not parse the puzzle description");const o=new dt(s,Object.assign({},{allMoves:!0},e));return o.allstickers(),o.genperms(),o}function ct(t,e){return lt(W[t],e)}function ft(t,e,s){let o=!1;s-e[1]<e[0]&&(t=[t[2],t[3],t[0],t[1]],e=[s-e[1],s-e[0]],o=!0);let n=t[0],i="";if(0===e[0]&&e[1]===s)n+="v";else if(e[0]===e[1])e[1]>0&&(i=String(e[1]+1));else{if(0!==e[0])throw`We only support slice and outer block moves right now. ${e}`;n=n.toLowerCase(),e[1]>1&&(i=String(e[1]+1))}return[i+n,o]}function ut(t,e){const s=[];let o=0;for(;o<t.length;){o>0&&o<t.length&&"_"===t[o]&&o++;let n="";for(const s of e)t.substr(o).startsWith(s[1])&&s[1].length>n.length&&(n=s[1]);if(""===n)throw new Error("Could not split "+t+" into face names.");s.push(n),o+=n.length}return s}function pt(t,e){return[t.b/e,-t.c/e,t.d/e]}function mt(t,e){const s=[],o=t.length;for(let n=0;n<o;n++){const i=pt(t.get(o-n-1),e);s[3*n]=i[0],s[3*n+1]=i[1],s[3*n+2]=i[2]}return s}var dt=class{constructor(t,e){this.puzzleDescription=t,this.cmovesbyslice=[],this.duplicatedFaces=[],this.duplicatedCubies=[],this.fixedCubie=-1,this.net=[],this.colors=[],this.faceorder=[],this.faceprecedence=[],this.notationMapper=new r,this.addNotationMapper="",this.setReidOrder=!1;this.options=new class{constructor(t={}){this.verbosity=0,this.allMoves=!1,this.vertexMoves=!1,this.addRotations=!1,this.moveList=null,this.fixedOrientation=!1,this.fixedPieceType=null,this.orientCenters=!1,this.includeCornerOrbits=!0,this.includeCenterOrbits=!0,this.includeEdgeOrbits=!0,this.excludeOrbits=[],this.optimizeOrbits=!1,this.grayCorners=!1,this.grayCenters=!1,this.grayEdges=!1,this.puzzleOrientation=null,this.puzzleOrientations=null,this.scrambleAmount=0,Object.assign(this,t)}}(e),this.options.verbosity>0&&console.log(this.header("# ")),this.create(t)}create(t){const{shape:e,cuts:s}=t;this.moveplanes=[],this.moveplanes2=[],this.faces=[],this.cubies=[];let o=null;switch(e){case"c":o=function(){const t=Math.sqrt(.5);return[new V(t,t,0,0),new V(t,0,t,0)]}();break;case"o":o=function(){const t=Math.sqrt(.5);return[new V(.5,.5,.5,.5),new V(t,0,0,t)]}();break;case"i":o=function(){let t=1/6+Math.sqrt(5)/6,e=2/3+Math.sqrt(5)/3;const s=Math.sqrt(t*t+e*e);t/=s,e/=s;const o=2*Math.PI/6;return[new V(Math.cos(o),t*Math.sin(o),e*Math.sin(o),0),new V(Math.cos(o),-t*Math.sin(o),e*Math.sin(o),0)]}();break;case"t":o=[new V(.5,.5,.5,.5),new V(.5,.5,.5,-.5)];break;case"d":o=function(){const t=2*Math.PI/10;let e=.5+.3*Math.sqrt(5),s=.5+.1*Math.sqrt(5);const o=Math.sqrt(e*e+s*s);return e/=o,s/=o,[new V(Math.cos(t),e*Math.sin(t),s*Math.sin(t),0),new V(.5,.5,.5,.5)]}();break;default:throw new Error("Bad shape argument: "+e)}this.rotations=function(t){const e=[new V(1,0,0,0)];for(let s=0;s<e.length;s++)for(let o=0;o<t.length;o++){const n=t[o].mul(e[s]),i=n.smul(-1);let r=!1;for(let t=0;t<e.length;t++)if(n.dist(e[t])<Z||i.dist(e[t])<Z){r=!0;break}r||e.push(n)}return e}(o),this.options.verbosity&&console.log("# Rotations: "+this.rotations.length);const n=o[0];this.baseplanerot=X(n,this.rotations);const r=this.baseplanerot.map((t=>n.rotateplane(t)));this.baseplanes=r,this.baseFaceCount=r.length;const h={4:[["F","D","L","R"]],6:[["F","D","L","U","R"],["R","F","","B",""]],8:[["F","D","L","R"],["D","F","BR",""],["BR","D","","BB"],["BB","BR","U","BL"]],12:[["U","F","","","",""],["F","U","R","C","A","L"],["R","F","","","E",""],["E","R","","BF","",""],["BF","E","BR","BL","I","D"]],20:[["R","C","F","E"],["F","R","L","U"],["L","F","A",""],["E","R","G","I"],["I","E","S","H"],["S","I","J","B"],["B","S","K","D"],["K","B","M","O"],["O","K","P","N"],["P","O","Q",""]]}[r.length];this.net=h,this.colors={4:{F:"#00ff00",D:"#ffff00",L:"#ff0000",R:"#0000ff"},6:{U:"#ffffff",F:"#00ff00",R:"#ff0000",D:"#ffff00",B:"#0000ff",L:"#ff8000"},8:{U:"#ffffff",F:"#ff0000",R:"#00bb00",D:"#ffff00",BB:"#1122ff",L:"#9524c5",BL:"#ff8800",BR:"#aaaaaa"},12:{U:"#ffffff",F:"#006633",R:"#ff0000",C:"#ffffd0",A:"#3399ff",L:"#660099",E:"#ff66cc",BF:"#99ff00",BR:"#0000ff",BL:"#ffff00",I:"#ff6633",D:"#999999"},20:{R:"#db69f0",C:"#178fde",F:"#23238b",E:"#9cc726",L:"#2c212d",U:"#177fa7",A:"#e0de7f",G:"#2b57c0",I:"#41126b",S:"#4b8c28",H:"#7c098d",J:"#7fe7b4",B:"#85fb74",K:"#3f4bc3",D:"#0ff555",M:"#f1c2c8",O:"#58d340",P:"#c514f2",N:"#14494e",Q:"#8b1be1"}}[r.length],this.faceorder={4:["F","D","L","R"],6:["U","D","F","B","L","R"],8:["F","BB","D","U","BR","L","R","BL"],12:["L","E","F","BF","R","I","U","D","BR","A","BL","C"],20:["L","S","E","O","F","B","I","P","R","K","U","D","J","A","Q","H","G","N","M","C"]}[r.length],this.options.verbosity>0&&console.log("# Base planes: "+r.length);const l=Y(r),c=new V(0,0,0,0);this.options.verbosity>0&&console.log("# Face vertices: "+l.length);const f=r[0].makenormal(),u=l[0].sum(l[1]).makenormal(),p=l[0].makenormal(),m=new V(1,f.b,f.c,f.d);this.options.verbosity>0&&console.log("# Boundary is "+m);const d=Y(X(m,this.rotations).map((t=>m.rotateplane(t))));this.edgedistance=d[0].sum(d[1]).smul(.5).dist(c),this.vertexdistance=d[0].dist(c);const g=[],v=[];let b=!1,w=!1,M=!1;for(const t of s){let e=null,s=0;switch(t.cutType){case"f":e=f,s=1,b=!0;break;case"v":e=p,s=this.vertexdistance,M=!0;break;case"e":e=u,s=this.edgedistance,w=!0;break;default:throw new Error("Bad cut argument: "+t.cutType)}g.push(e.makecut(t.distance)),v.push(t.distance<s)}this.options.addRotations&&(b||g.push(f.makecut(10)),M||g.push(p.makecut(10)),w||g.push(u.makecut(10))),this.basefaces=[];for(const t of this.baseplanerot){const e=t.rotateface(d);this.basefaces.push(new st(e))}const y=[],x=[],z=[],L=[],F=d.length;function R(t,e,s){for(const o of t)if(o[0].dist(e)<nt)return void o.push(s);t.push([e,s])}for(let t=0;t<this.baseplanerot.length;t++){const e=this.baseplanerot[t].rotateface(d);for(let s=0;s<e.length;s++){const o=(s+1)%e.length;R(L,e[s].sum(e[o]).smul(.5),t)}}const k=[];for(let t=0;t<this.baseplanerot.length;t++){const e=this.baseplanerot[t].rotateface(d),s=[];for(let o=0;o<e.length;o++){const n=(o+1)%e.length,i=L[it(L,e[o].sum(e[n]).smul(.5))];if(t===i[1])s.push(i[2]);else{if(t!==i[2])throw new Error("Could not find edge");s.push(i[1])}}k.push(s)}const D={},B=[];B.push(h[0][0]),D[h[0][0]]=0,B[k[0][0]]=h[0][1],D[h[0][1]]=k[0][0];for(const t of h){const e=D[t[0]];if(void 0===e)throw new Error("Bad edge description; first edge not connected");let s=-1;for(let o=0;o<k[e].length;o++){const n=B[k[e][o]];if(void 0!==n&&n===t[1]){s=o;break}}if(s<0)throw new Error("First element of a net not known");for(let o=2;o<t.length;o++){if(""===t[o])continue;const n=k[e][(o+s-1)%F],i=B[n];if(void 0!==i&&i!==t[o])throw new Error("Face mismatch in net");B[n]=t[o],D[t[o]]=n}}for(let t=0;t<B.length;t++){let e=!1;for(let s=0;s<this.faceorder.length;s++)if(B[t]===this.faceorder[s]){this.faceprecedence[t]=s,e=!0;break}if(!e)throw new Error("Could not find face "+B[t]+" in face order list "+this.faceorder)}for(let t=0;t<this.baseplanerot.length;t++){const e=this.baseplanerot[t].rotateface(d),s=m.rotateplane(this.baseplanerot[t]),o=B[t];y.push([e,o]),x.push([s,o])}for(let t=0;t<this.baseplanerot.length;t++){const e=this.baseplanerot[t].rotateface(d),s=B[t];for(let t=0;t<e.length;t++){const o=(t+1)%e.length,n=e[t].sum(e[o]).smul(.5),i=(t+2)%e.length,r=e[o].sum(e[i]).smul(.5),h=it(L,n),a=it(L,r);R(z,e[o],[s,a,h])}}this.swizzler=new i(y.map((t=>t[1])));const E=this.swizzler.prefixFree?"":"_";for(let t=0;t<L.length;t++){if(3!==L[t].length)throw new Error("Bad length in edge names "+L[t]);let e=B[L[t][1]];const s=B[L[t][2]];e=this.faceprecedence[L[t][1]]<this.faceprecedence[L[t][2]]?e+E+s:s+E+e,L[t]=[L[t][0],e]}for(let t=0;t<z.length;t++){if(z[t].length<4)throw new Error("Bad length in vertex names");let e=1;for(let s=2;s<z[t].length;s++)this.faceprecedence[D[z[t][s][0]]]<this.faceprecedence[D[z[t][e][0]]]&&(e=s);let s="";for(let o=1;o<z[t].length;o++){s=1===o?z[t][e][0]:s+E+z[t][e][0];for(let s=1;s<z[t].length;s++)if(z[t][e][1]===z[t][s][2]){e=s;break}}z[t]=[z[t][0],s]}this.options.verbosity>1&&(console.log("# Face precedence list: "+this.faceorder.join(" ")),console.log("# Face names: "+y.map((t=>t[1])).join(" ")),console.log("# Edge names: "+L.map((t=>t[1])).join(" ")),console.log("# Vertex names: "+z.map((t=>t[1])).join(" ")));const C=[];for(const t of x)C.push([t[0].makenormal(),t[1],"f"]);for(const t of L)C.push([t[0].makenormal(),t[1],"e"]);for(const t of z)C.push([t[0].makenormal(),t[1],"v"]);this.facenames=y,this.faceplanes=x,this.edgenames=L,this.vertexnames=z,this.geonormals=C;const O=C.map((t=>t[1]));this.swizzler.setGripNames(O),this.options.verbosity>0&&console.log("# Distances: face 1 edge "+this.edgedistance+" vertex "+this.vertexdistance);for(let t=0;t<g.length;t++)for(const e of this.rotations){const s=g[t].rotateplane(e);let o=!1;for(const t of this.moveplanes)if(s.sameplane(t)){o=!0;break}o||(this.moveplanes.push(s),v[t]&&this.moveplanes2.push(s))}let T=new ot(d);const U=this.moveplanes2.slice();let S=31;for(let t=0;t<U.length;t++){const e=t+Math.floor((U.length-t)*(S/65536));T=T.split(U[e]),U[e]=U[t],S=(1657*S+101)%65536}const P=T.collect([],!0);this.faces=P,this.options.verbosity>0&&console.log("# Faces is now "+P.length),this.stickersperface=P.length;const N=[],I=H(d);for(const t of this.rotations){const e=t.rotateface(d);I.dist(H(e))<nt&&N.push(t)}const A=new Array(P.length),Q=[];for(let t=0;t<P.length;t++){const e=P[t].centermass();Q.push([I.dist(e),e,t])}Q.sort(((t,e)=>t[0]-e[0]));for(let t=0;t<P.length;t++){const e=Q[t][2];if(!A[e]){A[e]=!0;for(const s of N){const o=P[e].rotate(s),n=o.centermass();for(let e=t+1;e<P.length&&!(Q[e][0]-Q[t][0]>nt);e++){const t=Q[e][2];if(!A[t]&&n.dist(Q[e][1])<nt){A[t]=!0,P[t]=o;break}}}}}this.shortedge=1e99;for(const t of P)for(let e=0;e<t.length;e++){const s=(e+1)%t.length,o=t.get(e).dist(t.get(s));o<this.shortedge&&(this.shortedge=o)}this.options.verbosity>0&&console.log("# Short edge is "+this.shortedge),"c"!==e||!b||w||M||(this.addNotationMapper="NxNxNCubeMapper",this.setReidOrder=!0),"c"!==e||!M||b||w||(this.addNotationMapper="SkewbMapper"),"t"!==e||!M&&!b||w||(this.addNotationMapper="PyraminxOrTetraminxMapper"),"o"===e&&b&&(this.notationMapper=new a(this.swizzler,new i(["F","D","L","BL","R","U","BR","B"])),w||M||(this.addNotationMapper="FTOMapper")),"d"===e&&b&&(this.addNotationMapper="MegaminxMapper",this.notationMapper=new a(this.swizzler,new i(["U","F","L","BL","BR","R","FR","FL","DL","B","DR","D"])))}keyface(t){return this.keyface2(t.centermass())}keyface2(t){let e="";const s=String.fromCharCode;for(const o of this.moveplanesets)if(o.length>0){const n=t.dot(o[0]);let i=0,r=1;for(;2*r<=o.length;)r*=2;for(;r>0;r>>=1)i+r<=o.length&&n>o[i+r-1].a&&(i+=r);if(i<47)e+=s(33+i);else if(i<2256)e=e+s(80+Math.floor(i/47)-1)+s(33+i%47);else{if(!(i<106079))throw Error("Too many slices for cubie encoding");e=e+s(80+Math.floor((i-47)/2209-1))+s(80+Math.floor((i-47)/47)%47)+s(33+i%47)}}return e}keyface3(t){const e=t.centermass(),s=[];for(const t of this.moveplanesets)if(t.length>0){const o=e.dot(t[0]);let n=0,i=1;for(;2*i<=t.length;)i*=2;for(;i>0;i>>=1)n+i<=t.length&&o>t[n+i-1].a&&(n+=i);s.push(n)}return s}findface(t){const e=this.keyface2(t),s=this.facelisthash.get(e);if(1===s.length)return s[0];for(let o=0;o+1<s.length;o++){const s=this.facelisthash.get(e)[o];if(Math.abs(t.dist(this.facecentermass[s]))<nt)return s}return s[s.length-1]}project2d(t,e,s){const o=this.facenames[t][0],n=(e+1)%o.length,i=this.baseplanes[t];let r=o[n].sub(o[e]);const h=r.len();r=r.normalize();const a=r.cross(i).normalize();let l=s[1].sub(s[0]);const c=l.len()/h;l=l.normalize();const f=l.b,u=l.c,p=r.smul(f).sub(a.smul(u)).smul(c),m=a.smul(f).sum(r.smul(u)).smul(c),d=new V(0,s[0].b-p.dot(o[e]),s[0].c-m.dot(o[e]),0);return[p,m,d]}allstickers(){this.faces=function(t,e){const s=[];for(const o of t)for(const t of e)s.push(t.rotate(o));return s}(this.baseplanerot,this.faces),this.options.verbosity>0&&console.log("# Total stickers is now "+this.faces.length),this.facecentermass=new Array(this.faces.length);for(let t=0;t<this.faces.length;t++)this.facecentermass[t]=this.faces[t].centermass();const t=[],e=[];for(const s of this.moveplanes){const o=s.makenormal();let n=!1;for(const t of e)o.sameplane(t.makenormal())&&(n=!0);n||(e.push(o),t.push([]))}for(const s of this.moveplanes2){const o=s.makenormal();for(let n=0;n<e.length;n++)if(o.sameplane(e[n])){t[n].push(s);break}}for(let s=0;s<t.length;s++){const o=t[s].map((t=>t.normalizeplane())),n=e[s];for(let t=0;t<o.length;t++)o[t].makenormal().dist(n)>nt&&(o[t]=o[t].smul(-1));o.sort(((t,e)=>t.a-e.a)),t[s]=o}this.moveplanesets=t,this.moveplanenormals=e;const s=t.map((t=>t.length));this.options.verbosity>0&&console.log("# Move plane sets: "+s);const o=[];for(let e=0;e<t.length;e++)o.push([]);for(const s of this.rotations){if(Math.abs(Math.abs(s.a)-1)<nt)continue;const n=s.makenormal();for(let i=0;i<t.length;i++)if(n.sameplane(e[i])){o[i].push(s);break}}this.moverotations=o;for(let t=0;t<o.length;t++){const s=o[t],n=s[0].makenormal();for(let t=0;t<s.length;t++)n.dist(s[t].makenormal())>nt&&(s[t]=s[t].smul(-1));s.sort(((t,e)=>t.angle()-e.angle())),o[t][0].dot(e[t])<0&&s.reverse()}const n=o.map((t=>1+t.length));this.movesetorders=n;const i=[];let r="?";for(let s=0;s<t.length;s++){const o=e[s];let n=null,a=null;for(const t of this.geonormals){const e=o.dot(t[0]);Math.abs(e-1)<nt?(a=[t[1],t[2]],r=t[2]):Math.abs(e+1)<nt&&(n=[t[1],t[2]],r=t[2])}if(null===a||null===n)throw new Error("Saw positive or negative sides as null");i.push([a[0],a[1],n[0],n[1],1+t[s].length]),"NxNxNCubeMapper"===this.addNotationMapper&&"f"===r&&(this.notationMapper=new c(1+t[s].length),this.addNotationMapper=""),"SkewbMapper"===this.addNotationMapper&&1===t[0].length&&(this.notationMapper=new D(this.swizzler),this.addNotationMapper=""),"PyraminxOrTetraminxMapper"===this.addNotationMapper&&(2===t[0].length&&.333333333333333===t[0][0].a&&1.66666666666667===t[0][1].a?(this.notationMapper=new g(this.swizzler),this.addNotationMapper=""):(this.notationMapper=new v(this.swizzler),this.addNotationMapper="")),"MegaminxMapper"===this.addNotationMapper&&"f"===r&&(1+t[s].length===3&&(this.notationMapper=new l(this.notationMapper)),this.addNotationMapper=""),"FTOMapper"===this.addNotationMapper&&"f"===r&&(1+t[s].length===3&&(this.notationMapper=new h(this.notationMapper,this.swizzler)),this.addNotationMapper="")}this.movesetgeos=i;const a=new Map,f=this.faces;for(let t=0;t<f.length;t++){const e=f[t],s=this.keyface(e);if(a.get(s)){const e=a.get(s);if(e.push(t),e.length===this.baseFaceCount){this.options.verbosity>0&&console.log("# Splitting core.");for(let t=0;t<e.length;t++){const o=s+" "+t;a.set(o,[e[t]])}}}else a.set(s,[t])}this.facelisthash=a,this.options.verbosity>0&&console.log("# Cubies: "+a.size);const u=[],p=[],m=[];for(const t of a.values())if(t.length!==this.baseFaceCount){if(t.length>1){const e=t.map((t=>f[t].centermass())),s=H(e);for(let o=0;t.length>2;o++){let n=!1;for(let o=0;o<t.length;o++){const i=(o+1)%t.length;if(s.dot(e[o].cross(e[i]))<0){const s=e[o];e[o]=e[i],e[i]=s;const r=t[o];t[o]=t[i],t[i]=r,n=!0}}if(!n)break;if(o>1e3)throw new Error("Bad epsilon math; too close to border")}let o=0,n=t[o];for(let e=1;e<t.length;e++){const s=t[e];this.faceprecedence[this.getfaceindex(s)]<this.faceprecedence[this.getfaceindex(n)]&&(o=e,n=s)}if(0!==o){const e=t.slice();for(let s=0;s<t.length;s++)t[s]=e[(o+s)%t.length]}}for(let e=0;e<t.length;e++){const s=t[e];p[s]=u.length,m[s]=e}u.push(t)}this.cubies=u,this.facetocubie=p,this.facetoord=m;const d=["?","CENTERS","EDGES","CORNERS","C4RNER","C5RNER"],b=[],w=[0,0,0,0,0,0],M=[],y=[];let x=0;const z=[],L=[],F=[],R=[],k=t=>u[t].map((t=>this.getfaceindex(t))).join(" "),B=[];for(let t=0;t<u.length;t++){if(y[t])continue;const e=u[t];if(0===e.length)continue;const s={};let n=0;F.push(0),B.push([]);const i=e.length,r=w[i]++;let h=d[i];void 0!==h&&i!==this.baseFaceCount||(h="CORE"),h+=0===r?"":r+1,b[x]=h,M[x]=i;const a=[t];let l=0;for(y[t]=!0;l<a.length;){const t=a[l++],i=k(t);if((e.length>1||void 0===s[i])&&(s[i]=n++),R[t]=s[i],z[t]=x,B[x].push(t),L[t]=F[x]++,a.length<this.rotations.length){const e=this.facecentermass[u[t][0]];for(const t of o){const s=this.facetocubie[this.findface(e.rotatepoint(t[0]))];y[s]||(a.push(s),y[s]=!0)}}}x++}if(this.setReidOrder&&4<=this.stickersperface&&this.stickersperface<=9){const t=[["UF","UR","UB","UL","DF","DR","DB","DL","FR","FL","BR","BL"],["UFR","URB","UBL","ULF","DRF","DFL","DLB","DBR"],["U","L","F","R","B","D"]],e={};for(const s of t)for(let t=0;t<s.length;t++){let o=0;for(let e=0;e<s[t].length;e++)o|=1<<s[t].charCodeAt(e)-65;e[o]=t}for(const t of B)for(const s of t){let t=0;for(const e of u[s])t|=1<<this.facenames[this.getfaceindex(e)][1].charCodeAt(0)-65;L[s]=e[t]}}if(this.cubiesetnums=z,this.cubieordnums=L,this.cubiesetnames=b,this.cubieords=F,this.orbitoris=M,this.cubievaluemap=R,this.cubiesetcubies=B,null!==this.options.fixedPieceType){for(let t=0;t<u.length;t++)if("v"===this.options.fixedPieceType&&u[t].length>2||"e"===this.options.fixedPieceType&&2===u[t].length||"f"===this.options.fixedPieceType&&1===u[t].length){this.fixedCubie=t;break}if(this.fixedCubie<0)throw new Error("Could not find a cubie of type "+this.options.fixedPieceType+" to fix.")}this.options.verbosity>0&&console.log("# Cubie orbit sizes "+F)}unswizzle(t){const e=this.notationMapper.notationToInternal(t);return null===e?"":this.swizzler.unswizzle(e.family)}stringToBlockMove(t){const e=RegExp("^(([0-9]+)-)?([0-9]+)?([^0-9]+)([0-9]+'?)?$"),s=t.match(e);if(null===s)throw new Error("Bad move passed "+t);const o=s[4];let i,r;if(void 0!==s[2]){if(void 0===s[3])throw new Error("Missing second number in range");i=parseInt(s[2],10)}void 0!==s[3]&&(r=parseInt(s[3],10));let h="1",a=1;return void 0!==s[5]&&(h=s[5],"'"===h[0]&&(h="-"+h.substring(1)),a=parseInt(h,10)),new n.Move(new n.QuantumMove(o,r,i),a)}parseMove(t){const e=this.notationMapper.notationToInternal(t);if(null===e)throw new Error("Bad move "+t.family);let s,o=(t=e).family,n=!1;if(o.endsWith("v")&&o[0]<="Z"){if(void 0!==t.innerLayer||void 0!==t.outerLayer)throw new Error("Cannot use a prefix with full cube rotations");o=o.slice(0,-1),n=!0}o.endsWith("w")&&o[0]<="Z"&&(o=o.slice(0,-1).toLowerCase());let i=-1;const r=this.swizzler.unswizzle(o);let h=!1;for(let t=0;t<this.movesetgeos.length;t++){const e=this.movesetgeos[t];r===e[0]&&(h=!0,s=e,i=t),r===e[2]&&(h=!1,s=e,i=t)}let a=1,l=1;if(o.toUpperCase()!==o&&(l=2),void 0===s)throw new Error("Bad grip in move "+t.family);if(void 0!==t.outerLayer&&(a=t.outerLayer),void 0!==t.innerLayer&&(void 0===t.outerLayer?(l=t.innerLayer,a=o<="Z"?l:1):l=t.innerLayer),a--,l--,n&&(a=0,l=this.moveplanesets[i].length),a<0||a>this.moveplanesets[i].length||l<0||l>this.moveplanesets[i].length)throw new Error("Bad slice spec "+a+" "+l+" vs "+this.moveplanesets[i].length);if(0===a&&l===this.moveplanesets[i].length&&!n)throw new Error("! full puzzle rotations must be specified with v suffix.");return[void 0,i,a,l,h,t.amount]}parsemove(t){const e=this.parseMove(this.stringToBlockMove(t));return e[0]=t,e}genperms(){if(this.cmovesbyslice.length>0)return;const t=[];if(this.options.orientCenters)for(let t=0;t<this.cubies.length;t++)if(1===this.cubies[t].length){const e=this.cubies[t][0],s=this.getfaceindex(e);if(this.basefaces[s].centermass().dist(this.facecentermass[e])<nt){const o=this.basefaces[s].length;for(let e=1;e<o;e++)this.cubies[t].push(this.cubies[t][e-1]);this.duplicatedFaces[e]=o,this.duplicatedCubies[t]=o,this.orbitoris[this.cubiesetnums[t]]=o}}for(let e=0;e<this.moveplanesets.length;e++){const s=this.moveplanesets[e],o=[],n=[s.length+1,0];let i=1;for(;2*i<=s.length;)i*=2;for(let t=0;t<this.faces.length;t++){let e=0;if(s.length>0){const o=this.facecentermass[t].dot(s[0]);for(let t=i;t>0;t>>=1)e+t<=s.length&&o>s[e+t-1].a&&(e+=t);e=s.length-e}for(o.push(e);n.length<=e;)n.push(0);n[e]++}const r=new Array(n.length);for(let t=0;t<n.length;t++)r[t]=[];const h=[];for(let t=0;t<this.faces.length;t++){if(o[t]<0)continue;const s=[this.facetocubie[t],this.facetoord[t]];let n=this.facecentermass[t];const i=n;let a=t;const l=o[a];for(;;){o[a]=-1;const t=n.rotatepoint(this.moverotations[e][0]);if(t.dist(i)<nt)break;a=this.findface(t),s.push(this.facetocubie[a],this.facetoord[a]),n=t}if(s.length>2&&this.options.orientCenters&&(1===this.cubies[s[0]].length||this.duplicatedCubies[s[0]]>1)&&this.facecentermass[t].dist(this.basefaces[this.getfaceindex(t)].centermass())<nt){let t=this.faces[this.cubies[s[0]][0]];for(let o=0;o<s.length;o+=2){const n=this.faces[this.cubies[s[o]][0]];let i=-1;for(let e=0;e<t.length;e++)if(n.get(e).dist(t.get(0))<nt){i=e;break}if(i<0)throw new Error("Couldn't find rotation of center faces; ignoring for now.");s[o+1]=i,t=t.rotate(this.moverotations[e][0])}}if(2===s.length&&this.options.orientCenters)for(let t=1;t<this.movesetorders[e];t++)0===l?s.push(s[0],t):s.push(s[0],(this.movesetorders[e]-t)%this.movesetorders[e]);if(s.length>2&&!h[s[0]]){if(s.length!==2*this.movesetorders[e])throw new Error("Bad length in perm gen");for(const t of s)r[l].push(t)}for(let t=0;t<s.length;t+=2)h[s[t]]=!0}for(let t=0;t<r.length;t++)r[t]=r[t].slice();t.push(r)}if(this.cmovesbyslice=t,this.options.moveList){const t=[];for(const e of this.options.moveList)t.push(this.parsemove(e));this.parsedmovelist=t}this.facelisthash.clear(),this.facecentermass=[]}getboundarygeometry(){return{baseplanes:this.baseplanes,facenames:this.facenames,faceplanes:this.faceplanes,vertexnames:this.vertexnames,edgenames:this.edgenames,geonormals:this.geonormals}}getmovesets(t){const e=this.moveplanesets[t].length;let s=[];if(void 0!==this.parsedmovelist)for(const o of this.parsedmovelist)o[1]===t&&(o[4]?s.push([o[2],o[3]]):s.push([e-o[3],e-o[2]]),s.push(o[5]));else if(this.options.vertexMoves&&!this.options.allMoves){const o=this.movesetgeos[t];if(o[1]!==o[3])for(let t=0;t<e;t++)"v"!==o[1]?(this.options.outerBlockMoves?s.push([t+1,e]):s.push([t+1]),s.push(1)):(this.options.outerBlockMoves?s.push([0,t]):s.push([t,t]),s.push(1))}else for(let t=0;t<=e;t++)(this.options.allMoves||t+t!==e)&&(this.options.outerBlockMoves?t+t>e?s.push([t,e]):s.push([0,t]):s.push([t,t]),s.push(1));if(this.fixedCubie>=0){const o=this.keyface3(this.faces[this.cubies[this.fixedCubie][0]])[t],n=[];for(let t=0;t<s.length;t+=2){let i=s[t];if(o>=i[0]&&o<=i[1])if(0===i[0])i=[i[1]+1,e];else{if(e!==i[1])throw Error("fixed cubie option would disconnect move");i=[0,i[0]-1]}let r=!1;for(let e=0;e<n.length;e+=2)if(n[e][0]===i[0]&&n[e][1]===i[1]&&n[e+1]===s[t+1]){r=!0;break}r||(n.push(i),n.push(s[t+1]))}s=n}return s}graybyori(t){let e=this.cubies[t].length;return this.duplicatedCubies[t]&&(e=1),1===e&&(this.options.grayCenters||!this.options.includeCenterOrbits)||2===e&&(this.options.grayEdges||!this.options.includeEdgeOrbits)||e>2&&(this.options.grayCorners||!this.options.includeCornerOrbits)}skipbyori(t){let e=this.cubies[t].length;return this.duplicatedCubies[t]&&(e=1),1===e&&!this.options.includeCenterOrbits||2===e&&!this.options.includeEdgeOrbits||e>2&&!this.options.includeCornerOrbits}skipcubie(t){return this.skipbyori(t)}header(t){return t+"PuzzleGeometry 0.1 Copyright 2018 Tomas Rokicki.\n"+t+"\n"}writegap(){const t=this.getOrbitsDef(!1),e=[],s=[];for(let o=0;o<t.moveops.length;o++){let n="M_"+I(this.notationMapper,t.movenames[o]),i=!1;"'"===n[n.length-1]&&(n=n.substring(0,n.length-1),i=!0),s.push(n),i?e.push(n+":="+t.moveops[o].toPerm().inv().toGap()+";"):e.push(n+":="+t.moveops[o].toPerm().toGap()+";")}e.push("Gen:=["),e.push(s.join(",")),e.push("];");const o=t.solved.identicalPieces();return e.push("ip:=["+o.map((t=>"["+t.map((t=>t+1)).join(",")+"]")).join(",")+"];"),e.push("# Size(Group(Gen));"),e.push("# Size(Stabilizer(Group(Gen), ip, OnTuplesSets));"),e.push(""),this.header("# ")+e.join("\n")}writeksolve(t="PuzzleGeometryPuzzle"){const e=this.getOrbitsDef(!1);return this.header("# ")+e.toKsolve(t,this.notationMapper).join("\n")}getKPuzzleDefinition(t=!0,e=!0){const s=this.getOrbitsDef(t,e).toKPuzzleDefinition(e);if(s.experimentalPuzzleDescription=this.puzzleDescription,!s)throw new Error("Missing definition!");return s}getMoveFromBits(t,e,s,o,n,i){const r=[],h=[],a=[];for(const t of this.cubieords)h.push(T(t)),a.push(O(t));for(let e=t[0];e<=t[1];e++){const t=o[e];for(let e=0;e<t.length;e+=2*i){const o=t.slice(e,e+2*i),n=this.cubiesetnums[o[0]];for(let t=0;t<o.length;t+=2)o[t]=this.cubieordnums[o[t]];let r=2,l=3;s&&(r=o.length-2,l=o.length-1),h[n]===T(this.cubieords[n])&&(h[n]=h[n].slice(),this.orbitoris[n]>1&&!this.options.fixedOrientation&&(a[n]=a[n].slice()));for(let t=0;t<o.length;t+=2)h[n][o[(t+r)%o.length]]=o[t],this.orbitoris[n]>1&&!this.options.fixedOrientation&&(a[n][o[t]]=(o[(t+l)%o.length]-o[(t+1)%o.length]+2*this.orbitoris[n])%this.orbitoris[n])}}let l=new j(T(24),O(24),1);for(let t=0;t<this.cubiesetnames.length;t++)if(!n||n[t])if(1===this.orbitoris[t]||this.options.fixedOrientation)h[t]===T(l.perm.length)?(h[t]!==l.perm&&(l=new j(h[t],a[t],1)),r.push(l)):r.push(new j(h[t],a[t],1));else{const e=new Array(a[t].length);for(let s=0;s<h[t].length;s++)e[s]=a[t][h[t][s]];r.push(new j(h[t],e,this.orbitoris[t]))}let c=new q(r);return 1!==e&&(c=c.mulScalar(e)),c}omitSet(t){for(const e of this.options.excludeOrbits)if(e===t)return!0;return!1}diffmvsets(t,e,s,o){for(let n=0;n<t.length;n+=2){let i=!1;for(let r=0;!i&&r<e.length;r+=2)o?t[n][0]+e[r][1]===s&&t[n][1]+e[r][0]===s&&t[n+1]===e[r+1]&&(i=!0):t[n][0]===e[r][0]&&t[n][1]===e[r][1]&&t[n+1]===e[r+1]&&(i=!0);if(!i)return!0}return!1}getOrbitsDef(t,e=!0){const s=[];if(t)for(let t=0;t<this.cubiesetnames.length;t++)s.push(1);const o=[],n=[],i=[],r=[];for(let t=0;t<this.moveplanesets.length;t++){const e=this.getmovesets(t);i.push(e),this.options.addRotations?r.push(1):r.push(0)}if(this.options.moveList&&this.options.addRotations){for(let t=0;t<this.moverotations.length;t++)r[t]=0;for(let t=0;t<this.moveplanesets.length;t++)for(let e=0;e<this.moverotations.length;e++){let s=this.moveplanenormals[t];for(let o=1;2*o<=this.movesetorders[e];o++){if(s=s.rotatepoint(this.moverotations[e][0]),r[e]&o)continue;let n=-1,h=!1;for(let t=0;t<this.moveplanenormals.length;t++){if(s.dist(this.moveplanenormals[t])<nt){n=t;break}if(s.dist(this.moveplanenormals[t].smul(-1))<nt){n=t,h=!0;break}}if(n<0)throw new Error("Could not find rotation");const a=i[n];(a.length!==i[t].length||this.moveplanesets[t].length!==this.moveplanesets[n].length||this.diffmvsets(a,i[t],this.moveplanesets[n].length,h))&&(r[e]|=o)}}for(let t=0;t<this.moverotations.length;t++)if(0===r[t])r[t]=1;else if(1===r[t])this.movesetorders[t]>3?r[t]=2:r[t]=0;else{if(3!==r[t])throw new Error("Impossible addrot val");r[t]=0}}for(let t=0;t<this.moveplanesets.length;t++)0!==r[t]&&(i[t].push([0,this.moveplanesets[t].length]),i[t].push(r[t]));for(let t=0;t<this.moveplanesets.length;t++){const e=i[t],o=this.movesetorders[t];for(let t=0;t<e.length;t+=2)for(let s=0;s<t;s+=2)if(e[t]===e[s]&&e[t+1]===e[s+1])throw new Error("Redundant moves in moveset.");const n=[];for(let t=0;t<e.length;t+=2)for(let s=e[t][0];s<=e[t][1];s++)n[s]=1;const r=this.cmovesbyslice[t];for(let t=0;t<r.length;t++){if(1!==n[t])continue;const e=r[t];for(let t=0;t<e.length;t+=2*o){if(this.skipcubie(e[t]))continue;s[this.cubiesetnums[e[t]]]=1}}}for(let t=0;t<this.cubiesetnames.length;t++)s[t]&&(this.omitSet(this.cubiesetnames[t])?s[t]=0:(o.push(this.cubiesetnames[t]),n.push(new P(this.cubieords[t],this.options.fixedOrientation?1:this.orbitoris[t]))));const h=[];for(let e=0;e<this.cubiesetnames.length;e++){if(!s[e])continue;if(this.omitSet(this.cubiesetnames[e]))continue;const o=[],n=[];for(let s=0;s<this.cubieords[e];s++){if(t)o.push(s);else{const t=this.cubiesetcubies[e][s];o.push(this.cubievaluemap[t])}n.push(0)}h.push(new j(o,n,this.options.fixedOrientation?1:this.orbitoris[e]))}const a=[],l=[];if(e)for(let t=0;t<this.moveplanesets.length;t++){const e=this.moveplanesets[t].length,o=i[t],n=this.movesetgeos[t];for(let i=0;i<o.length;i+=2){const r=o[i],h=ft(n,r,e),c=h[0],f=h[1];1===o[i+1]?a.push(c):a.push(c+o[i+1]);const u=this.getMoveFromBits(r,o[i+1],f,this.cmovesbyslice[t],s,this.movesetorders[t]);l.push(u)}}let c=new A(o,n,new G(h),a,l);return this.options.optimizeOrbits&&(c=c.optimize()),0!==this.options.scrambleAmount&&c.scramble(this.options.scrambleAmount),c}getScramble(t=0){const e=this.getOrbitsDef(!1);return e.transformToKTransformationData(e.getScrambleTransformation(t))}getMovesAsPerms(){return this.getOrbitsDef(!1).moveops.map((t=>t.toPerm()))}showcanon(t){!function(t,e){const s=t.moveops.length;if(s>30)throw new Error("Canon info too big for bitmask");const o=[],n=[];for(let e=0;e<s;e++){const i=t.moveops[e];o.push(i.order());let r=0;for(let o=0;o<s;o++){if(o===e)continue;const s=t.moveops[o];i.mul(s).equal(s.mul(i))&&(r|=1<<o)}n.push(r)}let i={0:1};for(let t=0;t<100;t++){let s=0;const r={};let h=0;for(const t in i){const e=+t,a=i[e];s+=a,h++;for(let t=0;t<o.length;t++)if(0==(e>>t&1)&&0==(e&n[t]&(1<<t)-1)){const s=e&n[t]|1<<t;void 0===r[s]&&(r[s]=0),r[s]+=(o[t]-1)*a}}e(`${t}: canonseq ${s} states ${h}`),i=r}}(this.getOrbitsDef(!1),t)}getsolved(){const t=[];for(let e=0;e<this.baseFaceCount;e++)for(let s=0;s<this.stickersperface;s++)t.push(e);return new S(t)}getOrientationRotation(t){const[e,[s,o,n]]=t[0],i=new V(0,s,-o,n),[r,[h,a,l]]=t[1],c=new V(0,h,-a,l);let f=null,u=null;const p=this.swizzler.unswizzle(e),m=this.swizzler.unswizzle(r);for(const t of this.geonormals)p===t[1]&&(f=t[0]),m===t[1]&&(u=t[0]);if(!f)throw new Error("Could not find feature "+e);if(!u)throw new Error("Could not find feature "+r);const d=f.pointrotation(i);return u.rotatepoint(d).unproject(i).pointrotation(c.unproject(i)).mul(d)}getInitial3DRotation(){const t=this.baseFaceCount;let e=null;if(this.options.puzzleOrientation?e=this.options.puzzleOrientation:this.options.puzzleOrientations&&(e=this.options.puzzleOrientations[t]),e||(e={4:[["FLR",[0,1,0]],["F",[0,0,1]]],6:[["U",[0,1,0]],["F",[0,0,1]]],8:[["U",[0,1,0]],["F",[0,0,1]]],12:[["U",[0,1,0]],["F",[0,0,1]]],20:[["GUQMJ",[0,1,0]],["F",[0,0,1]]]}[t]),!e)throw new Error("No default orientation?");return this.getOrientationRotation(e)}generate2dmapping(t=800,e=500,s=10,o=!1,n=.92){function i(t,e){let s=t[1][0]-t[0][0],o=t[1][1]-t[0][1];const n=2*Math.PI/e,i=Math.cos(n),r=Math.sin(n);for(let n=2;n<e;n++){const e=s*i+o*r;o=o*i-s*r,s=e,t.push([t[n-1][0]+s,t[n-1][1]+o])}}t-=2*s,e-=2*s,this.genperms();const r=this.getboundarygeometry().facenames[0][0].length,h=this.net;if(null===h)throw new Error("No net?");const a={};let l=0,c=0,f=1,u=0;a[h[0][0]]=[[1,0],[0,0]],i(a[h[0][0]],r);for(const t of h){const e=t[0];if(!a[e])throw new Error("Bad edge description; first edge not connected.");for(let s=1;s<t.length;s++){const o=t[s];""===o||a[o]||(a[o]=[a[e][s%r],a[e][(s+r-1)%r]],i(a[o],r))}}for(const t in a){const e=a[t];for(const t of e)l=Math.min(l,t[0]),f=Math.max(f,t[0]),c=Math.min(c,t[1]),u=Math.max(u,t[1])}const p=Math.min(t/(f-l),e/(u-c)),m=.5*(t-p*(f+l)),d=.5*(e-p*(u+c)),g={},v=this.getboundarygeometry(),b={},w=[[p+m,d],[m,d]];b[h[0][0]]=w,i(b[h[0][0]],r),g[this.facenames[0][1]]=this.project2d(0,0,[new V(0,w[0][0],w[0][1],0),new V(0,w[1][0],w[1][1],0)]);const M=[];M[0]=0;for(const t of h){const e=t[0];if(!b[e])throw new Error("Bad edge description; first edge not connected.");let s=-1;for(let t=0;t<v.facenames.length;t++)if(e===v.facenames[t][1]){s=t;break}if(s<0)throw new Error("Could not find first face name "+e);const o=v.facenames[s][0];for(let n=1;n<t.length;n++){const h=t[n];if(""===h||b[h])continue;b[h]=[b[e][n%r],b[e][(n+r-1)%r]],i(b[h],r);const a=M[s],l=o[(a+n)%r].sum(o[(a+n+r-1)%r]).smul(.5),c=it(v.edgenames,l),f=ut(v.edgenames[c][1],this.facenames),u=f[e===f[0]?1:0];let p=-1;for(let t=0;t<v.facenames.length;t++)if(u===v.facenames[t][1]){p=t;break}if(p<0)throw new Error("Could not find second face name");const m=v.facenames[p][0];for(let t=0;t<m.length;t++){if(m[t].sum(m[(t+1)%r]).smul(.5).dist(l)<=nt){const s=b[e][(n+r-1)%r],o=b[e][n%r];M[p]=t,g[u]=this.project2d(p,t,[new V(0,o[0],o[1],0),new V(0,s[0],s[1],0)]);break}}}}let y=0,x=0;const z=this.getInitial3DRotation();for(let t of this.faces){o&&(t=t.rotate(z));for(let e=0;e<t.length;e++)y=Math.max(y,Math.abs(t.get(e).b)),x=Math.max(x,Math.abs(t.get(e).c))}const L=Math.min(e/x/2,(t-s)/y/4);return(i,r)=>{if(o){r=r.rotatepoint(z);const o=.5*s+.25*t,n=this.baseplanes[i].rotateplane(z).d<0?1:-1;return[s+.5*t+n*(o-r.b*L),s+.5*e+r.c*L]}{const t=g[this.facenames[i][1]];return[s+n*r.dot(t[0])+t[2].b,s+e-n*r.dot(t[1])-t[2].c]}}}generatesvg(t=800,e=500,s=10,o=!1){const n=this.generate2dmapping(t,e,s,o);function i(t,e,s){return'<polygon id="'+t+'" class="sticker" style="fill: '+s+'" points="'+e.map((t=>t[0]+" "+t[1])).join(" ")+'"/>\n'}const r=this.getsolved(),h=[],a=[];for(let t=0;t<this.baseFaceCount;t++)h[t]=this.colors[this.facenames[t][1]];for(let t=0;t<this.faces.length;t++){const e=this.faces[t],s=Math.floor(t/this.stickersperface),o=[];for(let t=0;t<e.length;t++)o.push(n(s,e.get(t)));a.push(o)}const l=[];for(let t=0;t<this.baseFaceCount;t++){l.push("<g>"),l.push("<title>"+this.facenames[t][1]+"</title>\n");for(let e=0;e<this.stickersperface;e++){const s=t*this.stickersperface+e,o=this.facetocubie[s],n=this.facetoord[s],c=this.cubiesetnums[o],f=this.cubieordnums[o],u=this.graybyori(o)?"#808080":h[r.p[s]];let p=this.cubiesetnames[c]+"-l"+f+"-o"+n;if(l.push(i(p,a[s],u)),this.duplicatedFaces[s])for(let t=1;t<this.duplicatedFaces[s];t++)p=this.cubiesetnames[c]+"-l"+f+"-o"+t,l.push(i(p,a[s],u))}l.push("</g>")}return'<svg id="svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 800 500">\n<style type="text/css"><![CDATA[.sticker { stroke: #000000; stroke-width: 1px; }]]></style>\n'+l.join("")+"</svg>"}get3d(t){const e=[],s=this.getInitial3DRotation(),o=[],i=.52*this.basefaces[0].get(0).len();for(let t=0;t<this.basefaces.length;t++){const e=this.basefaces[t].rotate(s),n=this.facenames[t][1];o.push({coords:mt(e,i),name:n})}for(let o=0;o<this.faces.length;o++){const n=Math.floor(o/this.stickersperface),r=this.facetocubie[o],h=this.facetoord[o],a=this.cubiesetnums[r],l=this.cubieordnums[r];let c=this.graybyori(r)?"#808080":this.colors[this.facenames[n][1]];t?.stickerColors&&(c=t.stickerColors[o]);const f=this.faces[o].rotate(s);e.push({coords:mt(f,i),color:c,orbit:this.cubiesetnames[a],ord:l,ori:h,face:n});let u=f;if(this.duplicatedFaces[o]){const t=u.length/this.duplicatedFaces[o];for(let s=1;s<this.duplicatedFaces[o];s++){for(let e=0;e<t;e++)u=u.rotateforward();e.push({coords:mt(u,i),color:c,orbit:this.cubiesetnames[a],ord:l,ori:s,face:n,isDup:!0})}}}const r=[];for(let t=0;t<this.movesetgeos.length;t++){const e=this.movesetgeos[t],o=this.movesetorders[t];for(const t of this.geonormals)e[0]===t[1]&&e[1]===t[2]&&(r.push({coordinates:pt(t[0].rotatepoint(s),1),quantumMove:new n.Move(e[0]),order:o}),r.push({coordinates:pt(t[0].rotatepoint(s).smul(-1),1),quantumMove:new n.Move(e[2]),order:o}))}const h=this.generate2dmapping(2880,2160,0,!1,1),a=function(){const t=s.invrot();return function(e,s){let o=new V(0,s[0]*i,-s[1]*i,s[2]*i);o=o.rotatepoint(t);const n=h(e,o);return n[0]/=2880,n[1]=1-n[1]/2160,n}}().bind(this);return{stickers:e,faces:o,axis:r,unswizzle:this.unswizzle.bind(this),notationMapper:this.notationMapper,textureMapper:{getuv:a}}}getGeoNormal(t){const e=this.getInitial3DRotation(),s=this.swizzler.unswizzle(t);for(const t of this.geonormals)if(s===t[1]){const s=pt(t[0].rotatepoint(e),1);return Math.abs(s[0])<nt&&Math.abs(s[2])<nt&&(s[0]=0,s[2]=1e-6),s}}getfaceindex(t){const e=this.stickersperface;return Math.floor(t/e)}textForTwizzleExplorer(){return`Faces ${this.baseplanerot.length}\nStickers per face ${this.stickersperface}\nShort edge ${this.shortedge}\nCubies ${this.cubies.length}\nEdge distance ${this.edgedistance}\nVertex distance ${this.vertexdistance}`}writeSchreierSims(t){const e=this.getOrbitsDef(!1).reassemblySize();t(`Reassembly size is ${e}`);t(`Ratio is ${e/et(this.getMovesAsPerms(),t)}`)}},gt=class{constructor(t,e){this.pg=t,this.orbitNames=e.orbitnames}lookupMove(t){const e=this.pg.parseMove(t);if(this.pg.parsedmovelist){let t=!1;for(const s of this.pg.parsedmovelist)s[1]===e[1]&&s[2]===e[2]&&s[3]===e[3]&&s[4]===e[4]&&(t=!0);if(!t)return null}let s=[e[2],e[3]];if(!e[4]){const t=this.pg.moveplanesets[e[1]].length;s=[t-e[3],t-e[2]]}const o=this.pg.getMoveFromBits(s,e[5],!e[4],this.pg.cmovesbyslice[e[1]],void 0,this.pg.movesetorders[e[1]]);return A.transformToKTransformationData(this.orbitNames,o)}}}));
//# sourceMappingURL=puzzle-geometry.fce1a5d2.js.map
